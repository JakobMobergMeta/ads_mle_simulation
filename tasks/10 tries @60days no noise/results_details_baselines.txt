Reults Details:

Method: Random
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[362], [362, 362, 362, 362], [362, 362], [645, 645, 645], [64]], score=0.055355
    Step 3: arch=[[114, 114, 114], [114], [1149, 1149], [114], [362, 362, 362, 362, 362]], score=0.038345
    Step 4: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 5: arch=[[362, 362, 362]], score=-0.014031
    Step 6: arch=[[362, 362]], score=-0.022623
    Step 7: arch=[[2048, 2048, 2048, 2048], [114], [114, 114], [203]], score=0.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [203, 203, 203, 203], [203, 203, 203, 203, 203], [64], [1149, 1149, 1149, 1149, 1149]], score=0.000000
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[203, 203], [64, 64, 64], [114, 114], [114, 114], [2048, 2048, 2048, 2048]], score=0.108942
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64, 64], [362, 362], [64], [645, 645]], score=0.031278
    Step 3: arch=[[203, 203], [2048, 2048, 2048, 2048, 2048], [645, 645, 645], [645, 645, 645, 645], [645, 645, 645]], score=0.000000
    Step 4: arch=[[114, 114, 114, 114, 114], [2048, 2048], [2048]], score=0.123542
    Step 5: arch=[[1149, 1149], [114, 114]], score=0.021112
    Step 6: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 7: arch=[[1149]], score=-0.014557
    Step 8: arch=[[114, 114, 114], [2048], [2048, 2048, 2048, 2048], [114, 114]], score=0.122073
    Step 9: arch=[[64, 64, 64, 64, 64], [362, 362], [203, 203, 203, 203, 203], [64, 64, 64, 64, 64]], score=0.025244
    Step 10: arch=[[203, 203], [645], [203, 203], [114, 114, 114]], score=-0.006161
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[2048]], score=0.004470
    Step 3: arch=[[362, 362, 362], [203], [362, 362], [645, 645, 645]], score=0.041102
    Step 4: arch=[[1149, 1149, 1149, 1149, 1149], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [362, 362, 362, 362], [114, 114, 114]], score=0.000000
    Step 5: arch=[[362, 362, 362, 362, 362], [645], [114, 114, 114, 114]], score=0.017553
    Step 6: arch=[[645], [203, 203, 203, 203, 203], [203, 203, 203, 203, 203]], score=0.019819
    Step 7: arch=[[203], [114, 114, 114]], score=-0.020312
    Step 8: arch=[[2048, 2048]], score=0.073592
    Step 9: arch=[[1149, 1149, 1149]], score=0.038064
    Step 10: arch=[[114, 114], [203, 203, 203, 203, 203]], score=0.001028
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114], [64, 64, 64, 64], [64]], score=-0.016250
    Step 3: arch=[[362, 362, 362], [114, 114], [1149, 1149, 1149], [645]], score=0.071968
    Step 4: arch=[[203], [203, 203], [203, 203, 203], [114, 114, 114, 114, 114], [203, 203, 203, 203]], score=0.010030
    Step 5: arch=[[1149, 1149]], score=0.011753
    Step 6: arch=[[362], [362], [362, 362]], score=-0.014660
    Step 7: arch=[[2048, 2048, 2048, 2048, 2048]], score=0.000000
    Step 8: arch=[[645, 645, 645, 645, 645], [64]], score=0.026423
    Step 9: arch=[[645, 645, 645], [64]], score=0.000818
    Step 10: arch=[[114, 114], [362, 362, 362]], score=-0.009587
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64], [203], [203, 203]], score=-0.024320
    Step 3: arch=[[64, 64], [203, 203, 203, 203, 203], [2048, 2048, 2048, 2048, 2048], [645, 645, 645], [64, 64, 64, 64]], score=0.000000
    Step 4: arch=[[203], [114]], score=-0.034148
    Step 5: arch=[[64, 64, 64], [362], [1149, 1149, 1149]], score=0.029061
    Step 6: arch=[[2048], [362, 362, 362, 362, 362]], score=0.060716
    Step 7: arch=[[203, 203, 203, 203], [203, 203], [64, 64]], score=-0.002494
    Step 8: arch=[[114, 114], [64, 64, 64, 64]], score=-0.009419
    Step 9: arch=[[2048, 2048, 2048], [2048, 2048, 2048, 2048], [64, 64, 64, 64], [2048, 2048, 2048], [114, 114, 114]], score=0.000000
    Step 10: arch=[[64, 64, 64, 64], [362, 362, 362, 362, 362], [362, 362, 362, 362]], score=0.038105

Method: SimulatedAnnealing
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[256, 256]], score=-0.025843
    Step 3: arch=[[256, 256]], score=-0.025843
    Step 4: arch=[[256, 256, 256]], score=-0.018228
    Step 5: arch=[[256, 256, 256, 256]], score=-0.010614
    Step 6: arch=[[256, 256, 256, 256, 256]], score=-0.002999
    Step 7: arch=[[256, 256, 256, 256, 256]], score=-0.002999
    Step 8: arch=[[256, 256, 256, 256, 256]], score=-0.002999
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[114, 114, 114, 114, 114], [114]], score=-0.008943
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[256, 256]], score=-0.025843
    Step 3: arch=[[256, 256]], score=-0.025843
    Step 4: arch=[[256, 256, 256]], score=-0.018228
    Step 5: arch=[[362, 362, 362]], score=-0.014031
    Step 6: arch=[[362, 362, 362]], score=-0.014031
    Step 7: arch=[[645, 645, 645]], score=0.000454
    Step 8: arch=[[1149, 1149, 1149]], score=0.038064
    Step 9: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 10: arch=[[1149, 1149, 1149, 1149], [645, 645, 645]], score=0.112115
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[256, 256]], score=-0.025843
    Step 3: arch=[[256, 256]], score=-0.025843
    Step 4: arch=[[256]], score=-0.033458
    Step 5: arch=[[256, 256]], score=-0.025843
    Step 6: arch=[[256]], score=-0.033458
    Step 7: arch=[[362]], score=-0.031214
    Step 8: arch=[[645]], score=-0.025225
    Step 9: arch=[[362]], score=-0.031214
    Step 10: arch=[[362], [2048, 2048, 2048, 2048]], score=0.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[256, 256]], score=-0.025843
    Step 3: arch=[[256, 256]], score=-0.025843
    Step 4: arch=[[256, 256, 256]], score=-0.018228
    Step 5: arch=[[114, 114, 114]], score=-0.022803
    Step 6: arch=[[114, 114]], score=-0.029633
    Step 7: arch=[[203, 203]], score=-0.027328
    Step 8: arch=[[362, 362]], score=-0.022623
    Step 9: arch=[[203, 203]], score=-0.027328
    Step 10: arch=[[362, 362]], score=-0.022623
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[256, 256]], score=-0.025843
    Step 3: arch=[[256, 256]], score=-0.025843
    Step 4: arch=[[256, 256]], score=-0.025843
    Step 5: arch=[[256, 256, 256]], score=-0.018228
    Step 6: arch=[[256, 256, 256, 256]], score=-0.010614
    Step 7: arch=[[362, 362, 362, 362]], score=-0.005439
    Step 8: arch=[[645, 645, 645, 645]], score=0.013294
    Step 9: arch=[[362, 362, 362, 362]], score=-0.005439
    Step 10: arch=[[362, 362, 362]], score=-0.014031

Method: TPE
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203]], score=-0.027328
    Step 3: arch=[[645, 645, 645, 645], [203, 203, 203], [362, 362, 362, 362]], score=0.047189
    Step 4: arch=[[2048, 2048, 2048], [64], [1149]], score=0.121681
    Step 5: arch=[[64, 64, 64, 64], [114, 114, 114, 114], [362, 362, 362, 362, 362]], score=0.020990
    Step 6: arch=[[645], [645, 645, 645, 645], [645, 645, 645, 645, 645]], score=0.069118
    Step 7: arch=[[114, 114, 114, 114], [203], [362, 362], [2048, 2048, 2048]], score=0.000000
    Step 8: arch=[[114, 114, 114, 114]], score=-0.015973
    Step 9: arch=[[1149], [2048], [2048, 2048, 2048], [1149, 1149, 1149, 1149], [114]], score=0.000000
    Step 10: arch=[[64, 64]], score=-0.030824
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203]], score=-0.027328
    Step 3: arch=[[64, 64, 64, 64], [114, 114], [114]], score=-0.008953
    Step 4: arch=[[2048, 2048], [645], [362, 362, 362], [114]], score=0.119685
    Step 5: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.000000
    Step 6: arch=[[203, 203, 203, 203], [1149, 1149, 1149, 1149], [1149]], score=0.120577
    Step 7: arch=[[2048, 2048, 2048]], score=0.120404
    Step 8: arch=[[114, 114, 114]], score=-0.022803
    Step 9: arch=[[2048, 2048, 2048], [2048, 2048, 2048], [64], [203, 203, 203, 203, 203]], score=0.000000
    Step 10: arch=[[1149, 1149, 1149, 1149], [645, 645, 645, 645, 645]], score=0.120357
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203]], score=-0.027328
    Step 3: arch=[[362], [203, 203, 203], [114, 114]], score=-0.010923
    Step 4: arch=[[362], [1149], [362, 362, 362, 362, 362]], score=0.007291
    Step 5: arch=[[64], [114, 114, 114], [114]], score=-0.022122
    Step 6: arch=[[203, 203, 203], [645, 645, 645, 645], [645]], score=0.053195
    Step 7: arch=[[362, 362, 362], [362, 362, 362, 362], [362, 362, 362, 362, 362]], score=0.037085
    Step 8: arch=[[64, 64]], score=-0.030824
    Step 9: arch=[[2048], [362, 362, 362]], score=0.042767
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015973
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203]], score=-0.027328
    Step 3: arch=[[203, 203, 203, 203], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.122895
    Step 4: arch=[[114, 114, 114, 114], [645, 645, 645, 645], [362]], score=0.045143
    Step 5: arch=[[362], [203, 203, 203, 203], [203, 203]], score=-0.000603
    Step 6: arch=[[64, 64], [362, 362, 362, 362], [114, 114], [362, 362, 362], [203, 203]], score=0.029283
    Step 7: arch=[[645, 645, 645, 645, 645], [114, 114], [114, 114, 114]], score=0.039167
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645, 645]], score=0.119733
    Step 9: arch=[[2048, 2048]], score=0.073592
    Step 10: arch=[[64]], score=-0.037521
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203]], score=-0.027328
    Step 3: arch=[[2048, 2048, 2048], [645, 645, 645, 645], [2048, 2048], [114], [1149, 1149, 1149]], score=0.000000
    Step 4: arch=[[2048, 2048, 2048, 2048, 2048]], score=0.000000
    Step 5: arch=[[114, 114, 114, 114, 114], [645], [1149], [362, 362, 362]], score=0.063545
    Step 6: arch=[[362]], score=-0.031214
    Step 7: arch=[[645, 645, 645], [362, 362]], score=0.016097
    Step 8: arch=[[362, 362, 362, 362, 362]], score=0.003153
    Step 9: arch=[[645], [1149, 1149], [362, 362, 362, 362, 362]], score=0.055656
    Step 10: arch=[[1149, 1149], [64], [362, 362, 362, 362], [1149, 1149, 1149]], score=0.111019

Method: Skopt-Random
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051583
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023732
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=0.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016400
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119671
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.101957
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113463
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033549
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120485
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005573
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030728
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003858
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.011913
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015973
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=0.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=0.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113261
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070375
    Step 7: arch=[[645, 645, 645, 645]], score=0.013294
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=0.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077333
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=0.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149]], score=0.011753
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064671
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018560
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060628
    Step 7: arch=[[645, 645], [362, 362]], score=0.003491
    Step 8: arch=[[1149]], score=-0.014557
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052352
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015973
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[645], [1149]], score=-0.002367
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024127
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006476
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082196
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081557
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119782
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080683

Method: Skopt-GP
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203, 203, 203], [64, 64, 64, 64], [203, 203, 203, 203]], score=0.016766
    Step 3: arch=[[2048, 2048, 2048], [114, 114, 114, 114], [1149, 1149]], score=0.123031
    Step 4: arch=[[114, 114, 114, 114], [362, 362, 362, 362], [114, 114, 114]], score=0.018974
    Step 5: arch=[[362, 362], [645, 645]], score=-0.000210
    Step 6: arch=[[64, 64], [645, 645], [2048, 2048, 2048, 2048], [645, 645, 645]], score=0.121702
    Step 7: arch=[[645, 645, 645], [203, 203, 203], [1149, 1149, 1149], [2048, 2048, 2048], [645, 645]], score=0.000000
    Step 8: arch=[[64, 64, 64]], score=-0.024127
    Step 9: arch=[[362, 362, 362], [1149, 1149, 1149, 1149]], score=0.102281
    Step 10: arch=[[203, 203]], score=-0.027328
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[203, 203, 203, 203, 203], [645, 645], [2048, 2048, 2048, 2048, 2048], [1149, 1149], [203, 203, 203]], score=0.000000
    Step 3: arch=[[362, 362, 362], [2048, 2048], [1149, 1149, 1149]], score=0.122191
    Step 4: arch=[[64, 64, 64]], score=-0.024127
    Step 5: arch=[[645, 645], [645, 645]], score=0.015062
    Step 6: arch=[[114, 114, 114]], score=-0.022803
    Step 7: arch=[[2048, 2048, 2048], [362, 362, 362, 362, 362], [362, 362]], score=0.123090
    Step 8: arch=[[1149, 1149, 1149, 1149], [203]], score=0.069147
    Step 9: arch=[[1149, 1149, 1149, 1149], [203, 203], [1149, 1149, 1149, 1149]], score=0.119965
    Step 10: arch=[[203], [1149, 1149, 1149, 1149], [1149]], score=0.119664
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[645, 645, 645, 645, 645], [114, 114, 114, 114, 114]], score=0.054978
    Step 3: arch=[[203, 203, 203], [114, 114, 114], [2048, 2048, 2048, 2048], [203, 203]], score=0.119701
    Step 4: arch=[[362, 362]], score=-0.022623
    Step 5: arch=[[1149, 1149, 1149, 1149], [362, 362, 362], [114, 114, 114, 114, 114], [2048]], score=0.122145
    Step 6: arch=[[1149, 1149, 1149, 1149], [2048, 2048]], score=0.123332
    Step 7: arch=[[645, 645, 645], [362, 362, 362, 362, 362], [2048, 2048, 2048, 2048, 2048], [362, 362, 362]], score=0.000000
    Step 8: arch=[[362, 362, 362, 362, 362], [203, 203, 203, 203], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.120393
    Step 9: arch=[[1149, 1149], [1149, 1149]], score=0.081778
    Step 10: arch=[[114, 114, 114], [1149, 1149, 1149, 1149, 1149]], score=0.119555
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64]], score=-0.017431
    Step 3: arch=[[2048, 2048], [203, 203], [362, 362, 362]], score=0.103457
    Step 4: arch=[[645, 645, 645], [64, 64, 64, 64]], score=0.020979
    Step 5: arch=[[203, 203, 203], [362, 362, 362], [645, 645, 645, 645]], score=0.031368
    Step 6: arch=[[1149, 1149, 1149, 1149], [64, 64, 64, 64], [1149, 1149, 1149, 1149], [645, 645]], score=0.121853
    Step 7: arch=[[362, 362, 362], [362, 362, 362]], score=0.008436
    Step 8: arch=[[362, 362, 362, 362], [2048, 2048]], score=0.111709
    Step 9: arch=[[645, 645, 645, 645, 645], [203, 203, 203, 203]], score=0.051481
    Step 10: arch=[[1149, 1149, 1149], [1149, 1149, 1149, 1149, 1149], [203, 203, 203, 203], [1149, 1149]], score=0.000000
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114, 114], [645, 645, 645, 645], [1149, 1149, 1149], [645, 645, 645], [64, 64]], score=0.119699
    Step 3: arch=[[203, 203], [645, 645, 645], [1149, 1149, 1149]], score=0.065075
    Step 4: arch=[[1149, 1149, 1149], [2048, 2048, 2048], [1149], [1149, 1149], [203, 203, 203, 203]], score=0.000000
    Step 5: arch=[[203, 203]], score=-0.027328
    Step 6: arch=[[2048, 2048, 2048], [114, 114]], score=0.120833
    Step 7: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203], [1149, 1149, 1149, 1149, 1149], [645, 645, 645, 645]], score=0.000000
    Step 8: arch=[[114], [64], [2048], [114, 114]], score=0.024661
    Step 9: arch=[[2048, 2048], [114], [1149, 1149, 1149], [1149, 1149], [645, 645, 645, 645]], score=0.000000
    Step 10: arch=[[114, 114, 114, 114, 114], [2048, 2048], [203, 203, 203], [1149, 1149, 1149, 1149, 1149]], score=0.000000

Method: Skopt-RF
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051583
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023732
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=0.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016400
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119671
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.101957
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113463
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033549
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120485
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005573
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030728
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003858
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.011913
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015973
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=0.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=0.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113261
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070375
    Step 7: arch=[[645, 645, 645, 645]], score=0.013294
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=0.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077333
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=0.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149]], score=0.011753
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064671
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018560
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060628
    Step 7: arch=[[645, 645], [362, 362]], score=0.003491
    Step 8: arch=[[1149]], score=-0.014557
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052352
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015973
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[645], [1149]], score=-0.002367
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024127
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006476
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082196
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081557
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119782
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080683

Method: Skopt-ET
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051583
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023732
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=0.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016400
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119671
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.101957
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113463
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033549
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120485
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005573
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030728
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003858
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.011913
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015973
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=0.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=0.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113261
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070375
    Step 7: arch=[[645, 645, 645, 645]], score=0.013294
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=0.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077333
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=0.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149]], score=0.011753
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064671
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018560
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060628
    Step 7: arch=[[645, 645], [362, 362]], score=0.003491
    Step 8: arch=[[1149]], score=-0.014557
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052352
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015973
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[645], [1149]], score=-0.002367
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024127
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006476
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082196
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081557
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119782
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080683

Method: Skopt-GBRT
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064375
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051583
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023732
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=0.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016400
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119671
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.101957
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113463
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033549
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120485
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005573
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030728
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003858
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.011913
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090686
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015973
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=0.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=0.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113261
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070375
    Step 7: arch=[[645, 645, 645, 645]], score=0.013294
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=0.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077333
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=0.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[1149, 1149]], score=0.011753
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064671
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018560
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060628
    Step 7: arch=[[645, 645], [362, 362]], score=0.003491
    Step 8: arch=[[1149]], score=-0.014557
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052352
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015973
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025843
    Step 2: arch=[[645], [1149]], score=-0.002367
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=0.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024127
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006476
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082196
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081557
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119782
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009142
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080683

