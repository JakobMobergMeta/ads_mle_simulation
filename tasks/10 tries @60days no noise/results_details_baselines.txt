Reults Details:

Method: Random
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[362], [362, 362, 362, 362], [362, 362], [645, 645, 645], [64]], score=0.055471
    Step 3: arch=[[114, 114, 114], [114], [1149, 1149], [114], [362, 362, 362, 362, 362]], score=0.038462
    Step 4: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 5: arch=[[362, 362, 362]], score=-0.013907
    Step 6: arch=[[362, 362]], score=-0.022498
    Step 7: arch=[[2048, 2048, 2048, 2048], [114], [114, 114], [203]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [203, 203, 203, 203], [203, 203, 203, 203, 203], [64], [1149, 1149, 1149, 1149, 1149]], score=-100.000000
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[203, 203], [64, 64, 64], [114, 114], [114, 114], [2048, 2048, 2048, 2048]], score=0.109050
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64, 64], [362, 362], [64], [645, 645]], score=0.031396
    Step 3: arch=[[203, 203], [2048, 2048, 2048, 2048, 2048], [645, 645, 645], [645, 645, 645, 645], [645, 645, 645]], score=-100.000000
    Step 4: arch=[[114, 114, 114, 114, 114], [2048, 2048], [2048]], score=0.123649
    Step 5: arch=[[1149, 1149], [114, 114]], score=0.021231
    Step 6: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 7: arch=[[1149]], score=-0.014434
    Step 8: arch=[[114, 114, 114], [2048], [2048, 2048, 2048, 2048], [114, 114]], score=0.122180
    Step 9: arch=[[64, 64, 64, 64, 64], [362, 362], [203, 203, 203, 203, 203], [64, 64, 64, 64, 64]], score=0.025363
    Step 10: arch=[[203, 203], [645], [203, 203], [114, 114, 114]], score=-0.006038
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[2048]], score=0.004591
    Step 3: arch=[[362, 362, 362], [203], [362, 362], [645, 645, 645]], score=0.041219
    Step 4: arch=[[1149, 1149, 1149, 1149, 1149], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [362, 362, 362, 362], [114, 114, 114]], score=-100.000000
    Step 5: arch=[[362, 362, 362, 362, 362], [645], [114, 114, 114, 114]], score=0.017673
    Step 6: arch=[[645], [203, 203, 203, 203, 203], [203, 203, 203, 203, 203]], score=0.019938
    Step 7: arch=[[203], [114, 114, 114]], score=-0.020188
    Step 8: arch=[[2048, 2048]], score=0.073705
    Step 9: arch=[[1149, 1149, 1149]], score=0.038182
    Step 10: arch=[[114, 114], [203, 203, 203, 203, 203]], score=0.001150
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114], [64, 64, 64, 64], [64]], score=-0.016126
    Step 3: arch=[[362, 362, 362], [114, 114], [1149, 1149, 1149], [645]], score=0.072081
    Step 4: arch=[[203], [203, 203], [203, 203, 203], [114, 114, 114, 114, 114], [203, 203, 203, 203]], score=0.010151
    Step 5: arch=[[1149, 1149]], score=0.011874
    Step 6: arch=[[362], [362], [362, 362]], score=-0.014537
    Step 7: arch=[[2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 8: arch=[[645, 645, 645, 645, 645], [64]], score=0.026541
    Step 9: arch=[[645, 645, 645], [64]], score=0.000940
    Step 10: arch=[[114, 114], [362, 362, 362]], score=-0.009464
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64], [203], [203, 203]], score=-0.024195
    Step 3: arch=[[64, 64], [203, 203, 203, 203, 203], [2048, 2048, 2048, 2048, 2048], [645, 645, 645], [64, 64, 64, 64]], score=-100.000000
    Step 4: arch=[[203], [114]], score=-0.034022
    Step 5: arch=[[64, 64, 64], [362], [1149, 1149, 1149]], score=0.029180
    Step 6: arch=[[2048], [362, 362, 362, 362, 362]], score=0.060830
    Step 7: arch=[[203, 203, 203, 203], [203, 203], [64, 64]], score=-0.002372
    Step 8: arch=[[114, 114], [64, 64, 64, 64]], score=-0.009296
    Step 9: arch=[[2048, 2048, 2048], [2048, 2048, 2048, 2048], [64, 64, 64, 64], [2048, 2048, 2048], [114, 114, 114]], score=-100.000000
    Step 10: arch=[[64, 64, 64, 64], [362, 362, 362, 362, 362], [362, 362, 362, 362]], score=0.038222

Method: SimulatedAnnealing
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[256, 256]], score=-0.025718
    Step 3: arch=[[256, 256]], score=-0.025718
    Step 4: arch=[[256, 256, 256]], score=-0.018104
    Step 5: arch=[[256, 256, 256, 256]], score=-0.010490
    Step 6: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 7: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 8: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[114, 114, 114, 114, 114], [114]], score=-0.008820
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[256, 256]], score=-0.025718
    Step 3: arch=[[256, 256]], score=-0.025718
    Step 4: arch=[[256, 256, 256]], score=-0.018104
    Step 5: arch=[[362, 362, 362]], score=-0.013907
    Step 6: arch=[[362, 362, 362]], score=-0.013907
    Step 7: arch=[[645, 645, 645]], score=0.000576
    Step 8: arch=[[1149, 1149, 1149]], score=0.038182
    Step 9: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 10: arch=[[1149, 1149, 1149, 1149], [645, 645, 645]], score=0.112223
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[256, 256]], score=-0.025718
    Step 3: arch=[[256, 256]], score=-0.025718
    Step 4: arch=[[256]], score=-0.033332
    Step 5: arch=[[256, 256]], score=-0.025718
    Step 6: arch=[[256]], score=-0.033332
    Step 7: arch=[[362]], score=-0.031088
    Step 8: arch=[[645]], score=-0.025100
    Step 9: arch=[[362]], score=-0.031088
    Step 10: arch=[[362], [2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[256, 256]], score=-0.025718
    Step 3: arch=[[256, 256]], score=-0.025718
    Step 4: arch=[[256, 256, 256]], score=-0.018104
    Step 5: arch=[[114, 114, 114]], score=-0.022678
    Step 6: arch=[[114, 114]], score=-0.029507
    Step 7: arch=[[203, 203]], score=-0.027203
    Step 8: arch=[[362, 362]], score=-0.022498
    Step 9: arch=[[203, 203]], score=-0.027203
    Step 10: arch=[[362, 362]], score=-0.022498
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[256, 256]], score=-0.025718
    Step 3: arch=[[256, 256]], score=-0.025718
    Step 4: arch=[[256, 256]], score=-0.025718
    Step 5: arch=[[256, 256, 256]], score=-0.018104
    Step 6: arch=[[256, 256, 256, 256]], score=-0.010490
    Step 7: arch=[[362, 362, 362, 362]], score=-0.005316
    Step 8: arch=[[645, 645, 645, 645]], score=0.013414
    Step 9: arch=[[362, 362, 362, 362]], score=-0.005316
    Step 10: arch=[[362, 362, 362]], score=-0.013907

Method: TPE
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203]], score=-0.027203
    Step 3: arch=[[645, 645, 645, 645], [203, 203, 203], [362, 362, 362, 362]], score=0.047305
    Step 4: arch=[[2048, 2048, 2048], [64], [1149]], score=0.121788
    Step 5: arch=[[64, 64, 64, 64], [114, 114, 114, 114], [362, 362, 362, 362, 362]], score=0.021109
    Step 6: arch=[[645], [645, 645, 645, 645], [645, 645, 645, 645, 645]], score=0.069232
    Step 7: arch=[[114, 114, 114, 114], [203], [362, 362], [2048, 2048, 2048]], score=-100.000000
    Step 8: arch=[[114, 114, 114, 114]], score=-0.015849
    Step 9: arch=[[1149], [2048], [2048, 2048, 2048], [1149, 1149, 1149, 1149], [114]], score=-100.000000
    Step 10: arch=[[64, 64]], score=-0.030699
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203]], score=-0.027203
    Step 3: arch=[[64, 64, 64, 64], [114, 114], [114]], score=-0.008830
    Step 4: arch=[[2048, 2048], [645], [362, 362, 362], [114]], score=0.119792
    Step 5: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 6: arch=[[203, 203, 203, 203], [1149, 1149, 1149, 1149], [1149]], score=0.120684
    Step 7: arch=[[2048, 2048, 2048]], score=0.120512
    Step 8: arch=[[114, 114, 114]], score=-0.022678
    Step 9: arch=[[2048, 2048, 2048], [2048, 2048, 2048], [64], [203, 203, 203, 203, 203]], score=-100.000000
    Step 10: arch=[[1149, 1149, 1149, 1149], [645, 645, 645, 645, 645]], score=0.120465
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203]], score=-0.027203
    Step 3: arch=[[362], [203, 203, 203], [114, 114]], score=-0.010800
    Step 4: arch=[[362], [1149], [362, 362, 362, 362, 362]], score=0.007412
    Step 5: arch=[[64], [114, 114, 114], [114]], score=-0.021997
    Step 6: arch=[[203, 203, 203], [645, 645, 645, 645], [645]], score=0.053310
    Step 7: arch=[[362, 362, 362], [362, 362, 362, 362], [362, 362, 362, 362, 362]], score=0.037203
    Step 8: arch=[[64, 64]], score=-0.030699
    Step 9: arch=[[2048], [362, 362, 362]], score=0.042883
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015849
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203]], score=-0.027203
    Step 3: arch=[[203, 203, 203, 203], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.123002
    Step 4: arch=[[114, 114, 114, 114], [645, 645, 645, 645], [362]], score=0.045260
    Step 5: arch=[[362], [203, 203, 203, 203], [203, 203]], score=-0.000481
    Step 6: arch=[[64, 64], [362, 362, 362, 362], [114, 114], [362, 362, 362], [203, 203]], score=0.029401
    Step 7: arch=[[645, 645, 645, 645, 645], [114, 114], [114, 114, 114]], score=0.039284
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645, 645]], score=0.119840
    Step 9: arch=[[2048, 2048]], score=0.073705
    Step 10: arch=[[64]], score=-0.037395
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203]], score=-0.027203
    Step 3: arch=[[2048, 2048, 2048], [645, 645, 645, 645], [2048, 2048], [114], [1149, 1149, 1149]], score=-100.000000
    Step 4: arch=[[2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 5: arch=[[114, 114, 114, 114, 114], [645], [1149], [362, 362, 362]], score=0.063659
    Step 6: arch=[[362]], score=-0.031088
    Step 7: arch=[[645, 645, 645], [362, 362]], score=0.016217
    Step 8: arch=[[362, 362, 362, 362, 362]], score=0.003274
    Step 9: arch=[[645], [1149, 1149], [362, 362, 362, 362, 362]], score=0.055771
    Step 10: arch=[[1149, 1149], [64], [362, 362, 362, 362], [1149, 1149, 1149]], score=0.111127

Method: Skopt-Random
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051699
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023851
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=-100.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016520
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119778
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.102066
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113572
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033667
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120592
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005450
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030846
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003980
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.012033
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015849
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=-100.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=-100.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113369
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070488
    Step 7: arch=[[645, 645, 645, 645]], score=0.013414
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=-100.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077446
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149]], score=0.011874
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064785
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018680
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060742
    Step 7: arch=[[645, 645], [362, 362]], score=0.003613
    Step 8: arch=[[1149]], score=-0.014434
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052467
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015849
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[645], [1149]], score=-0.002245
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006353
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082308
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081669
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119889
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080795

Method: Skopt-GP
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203, 203, 203], [64, 64, 64, 64], [203, 203, 203, 203]], score=0.016886
    Step 3: arch=[[2048, 2048, 2048], [114, 114, 114, 114], [1149, 1149]], score=0.123138
    Step 4: arch=[[114, 114, 114, 114], [362, 362, 362, 362], [114, 114, 114]], score=0.019094
    Step 5: arch=[[362, 362], [645, 645]], score=-0.000088
    Step 6: arch=[[64, 64], [645, 645], [2048, 2048, 2048, 2048], [645, 645, 645]], score=0.121809
    Step 7: arch=[[645, 645, 645], [203, 203, 203], [1149, 1149, 1149], [2048, 2048, 2048], [645, 645]], score=-100.000000
    Step 8: arch=[[64, 64, 64]], score=-0.024003
    Step 9: arch=[[362, 362, 362], [1149, 1149, 1149, 1149]], score=0.102390
    Step 10: arch=[[203, 203]], score=-0.027203
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[203, 203, 203, 203, 203], [645, 645], [2048, 2048, 2048, 2048, 2048], [1149, 1149], [203, 203, 203]], score=-100.000000
    Step 3: arch=[[362, 362, 362], [2048, 2048], [1149, 1149, 1149]], score=0.122298
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[645, 645], [645, 645]], score=0.015182
    Step 6: arch=[[114, 114, 114]], score=-0.022678
    Step 7: arch=[[2048, 2048, 2048], [362, 362, 362, 362, 362], [362, 362]], score=0.123197
    Step 8: arch=[[1149, 1149, 1149, 1149], [203]], score=0.069261
    Step 9: arch=[[1149, 1149, 1149, 1149], [203, 203], [1149, 1149, 1149, 1149]], score=0.120072
    Step 10: arch=[[203], [1149, 1149, 1149, 1149], [1149]], score=0.119772
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[645, 645, 645, 645, 645], [114, 114, 114, 114, 114]], score=0.055093
    Step 3: arch=[[203, 203, 203], [114, 114, 114], [2048, 2048, 2048, 2048], [203, 203]], score=0.119809
    Step 4: arch=[[362, 362]], score=-0.022498
    Step 5: arch=[[1149, 1149, 1149, 1149], [362, 362, 362], [114, 114, 114, 114, 114], [2048]], score=0.122252
    Step 6: arch=[[1149, 1149, 1149, 1149], [2048, 2048]], score=0.123439
    Step 7: arch=[[645, 645, 645], [362, 362, 362, 362, 362], [2048, 2048, 2048, 2048, 2048], [362, 362, 362]], score=-100.000000
    Step 8: arch=[[362, 362, 362, 362, 362], [203, 203, 203, 203], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.120500
    Step 9: arch=[[1149, 1149], [1149, 1149]], score=0.081890
    Step 10: arch=[[114, 114, 114], [1149, 1149, 1149, 1149, 1149]], score=0.119662
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 3: arch=[[2048, 2048], [203, 203], [362, 362, 362]], score=0.103566
    Step 4: arch=[[645, 645, 645], [64, 64, 64, 64]], score=0.021098
    Step 5: arch=[[203, 203, 203], [362, 362, 362], [645, 645, 645, 645]], score=0.031486
    Step 6: arch=[[1149, 1149, 1149, 1149], [64, 64, 64, 64], [1149, 1149, 1149, 1149], [645, 645]], score=0.121960
    Step 7: arch=[[362, 362, 362], [362, 362, 362]], score=0.008557
    Step 8: arch=[[362, 362, 362, 362], [2048, 2048]], score=0.111818
    Step 9: arch=[[645, 645, 645, 645, 645], [203, 203, 203, 203]], score=0.051597
    Step 10: arch=[[1149, 1149, 1149], [1149, 1149, 1149, 1149, 1149], [203, 203, 203, 203], [1149, 1149]], score=-100.000000
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114, 114], [645, 645, 645, 645], [1149, 1149, 1149], [645, 645, 645], [64, 64]], score=0.119807
    Step 3: arch=[[203, 203], [645, 645, 645], [1149, 1149, 1149]], score=0.065189
    Step 4: arch=[[1149, 1149, 1149], [2048, 2048, 2048], [1149], [1149, 1149], [203, 203, 203, 203]], score=-100.000000
    Step 5: arch=[[203, 203]], score=-0.027203
    Step 6: arch=[[2048, 2048, 2048], [114, 114]], score=0.120940
    Step 7: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203], [1149, 1149, 1149, 1149, 1149], [645, 645, 645, 645]], score=-100.000000
    Step 8: arch=[[114], [64], [2048], [114, 114]], score=0.024780
    Step 9: arch=[[2048, 2048], [114], [1149, 1149, 1149], [1149, 1149], [645, 645, 645, 645]], score=-100.000000
    Step 10: arch=[[114, 114, 114, 114, 114], [2048, 2048], [203, 203, 203], [1149, 1149, 1149, 1149, 1149]], score=-100.000000

Method: Skopt-RF
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051699
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023851
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=-100.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016520
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119778
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.102066
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113572
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033667
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120592
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005450
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030846
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003980
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.012033
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015849
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=-100.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=-100.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113369
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070488
    Step 7: arch=[[645, 645, 645, 645]], score=0.013414
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=-100.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077446
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149]], score=0.011874
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064785
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018680
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060742
    Step 7: arch=[[645, 645], [362, 362]], score=0.003613
    Step 8: arch=[[1149]], score=-0.014434
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052467
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015849
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[645], [1149]], score=-0.002245
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006353
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082308
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081669
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119889
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080795

Method: Skopt-ET
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051699
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023851
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=-100.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016520
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119778
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.102066
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113572
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033667
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120592
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005450
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030846
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003980
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.012033
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015849
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=-100.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=-100.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113369
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070488
    Step 7: arch=[[645, 645, 645, 645]], score=0.013414
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=-100.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077446
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149]], score=0.011874
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064785
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018680
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060742
    Step 7: arch=[[645, 645], [362, 362]], score=0.003613
    Step 8: arch=[[1149]], score=-0.014434
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052467
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015849
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[645], [1149]], score=-0.002245
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006353
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082308
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081669
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119889
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080795

Method: Skopt-GBRT
  Seed 0:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149, 1149, 1149]], score=0.064489
    Step 3: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
    Step 4: arch=[[362, 362, 362, 362], [64], [114, 114, 114, 114], [362], [1149, 1149, 1149]], score=0.051699
    Step 5: arch=[[64, 64, 64, 64], [203], [645, 645], [362, 362]], score=0.023851
    Step 6: arch=[[645, 645, 645], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [2048]], score=-100.000000
    Step 7: arch=[[64, 64], [114, 114, 114, 114, 114], [114, 114], [114, 114, 114], [114, 114, 114]], score=0.016520
    Step 8: arch=[[1149, 1149, 1149, 1149], [645, 645, 645], [114, 114, 114, 114], [203]], score=0.119778
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645, 645, 645, 645], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64, 64, 64], [1149], [2048, 2048], [64, 64]], score=0.102066
  Seed 1:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[64, 64, 64, 64, 64], [114], [645, 645], [1149, 1149, 1149, 1149]], score=0.113572
    Step 3: arch=[[645, 645, 645], [203, 203, 203, 203, 203]], score=0.033667
    Step 4: arch=[[114, 114, 114, 114, 114], [1149, 1149], [2048, 2048]], score=0.120592
    Step 5: arch=[[203, 203, 203, 203, 203]], score=-0.005450
    Step 6: arch=[[362, 362], [645, 645, 645, 645]], score=0.030846
    Step 7: arch=[[203, 203], [203, 203, 203], [114], [64, 64, 64, 64, 64]], score=0.003980
    Step 8: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 9: arch=[[114, 114, 114, 114], [114, 114, 114, 114, 114]], score=0.012033
    Step 10: arch=[[1149, 1149, 1149, 1149, 1149]], score=0.090797
  Seed 2:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[114, 114, 114, 114]], score=-0.015849
    Step 3: arch=[[362, 362, 362, 362, 362], [2048, 2048, 2048, 2048], [203, 203, 203, 203, 203], [114, 114, 114], [203, 203, 203, 203]], score=-100.000000
    Step 4: arch=[[203, 203, 203, 203], [64], [645, 645, 645, 645, 645], [2048, 2048, 2048, 2048], [645, 645]], score=-100.000000
    Step 5: arch=[[1149, 1149, 1149, 1149, 1149], [203, 203, 203], [114, 114]], score=0.113369
    Step 6: arch=[[2048], [645, 645, 645]], score=0.070488
    Step 7: arch=[[645, 645, 645, 645]], score=0.013414
    Step 8: arch=[[645, 645], [64, 64, 64, 64], [114], [1149, 1149, 1149], [2048, 2048]], score=-100.000000
    Step 9: arch=[[645, 645], [1149, 1149, 1149]], score=0.077446
    Step 10: arch=[[1149, 1149, 1149, 1149], [64], [64], [2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[1149, 1149]], score=0.011874
    Step 3: arch=[[1149, 1149], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[203, 203, 203], [1149, 1149, 1149], [64, 64, 64, 64, 64]], score=0.064785
    Step 5: arch=[[362], [64, 64, 64, 64], [1149]], score=0.018680
    Step 6: arch=[[203, 203, 203, 203, 203], [645, 645, 645, 645, 645]], score=0.060742
    Step 7: arch=[[645, 645], [362, 362]], score=0.003613
    Step 8: arch=[[1149]], score=-0.014434
    Step 9: arch=[[645, 645, 645, 645, 645], [645, 645]], score=0.052467
    Step 10: arch=[[114, 114, 114, 114]], score=-0.015849
  Seed 4:
    Step 1: arch=[[256, 256]], score=-0.025718
    Step 2: arch=[[645], [1149]], score=-0.002245
    Step 3: arch=[[64, 64, 64], [1149, 1149, 1149, 1149, 1149], [1149, 1149, 1149], [114, 114, 114, 114, 114], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[203], [114, 114, 114, 114, 114]], score=-0.006353
    Step 6: arch=[[203, 203], [2048, 2048]], score=0.082308
    Step 7: arch=[[1149], [362, 362, 362], [64, 64, 64], [1149, 1149]], score=0.081669
    Step 8: arch=[[114, 114, 114, 114], [1149, 1149, 1149, 1149], [64, 64, 64, 64], [362, 362, 362, 362], [203]], score=0.119889
    Step 9: arch=[[114, 114, 114, 114, 114]], score=-0.009019
    Step 10: arch=[[645, 645, 645], [64, 64, 64, 64], [362, 362, 362, 362], [362, 362, 362, 362, 362], [1149]], score=0.080795

