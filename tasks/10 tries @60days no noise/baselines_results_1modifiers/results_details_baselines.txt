Reults Details:

=== Modifiers: default_modifier ===
Method: Random
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512], [512, 512, 512, 512], [512, 512], [1024, 1024, 1024], [64]], score=0.109698
    Step 3: arch=[[128, 128, 128], [128], [2048, 2048], [128], [512, 512, 512, 512, 512]], score=0.084679
    Step 4: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 5: arch=[[512, 512, 512]], score=-0.006824
    Step 6: arch=[[512, 512]], score=-0.017369
    Step 7: arch=[[64, 64, 64, 64], [128, 128], [64, 64], [1024, 1024, 1024]], score=0.060513
    Step 8: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 10: arch=[[256, 256], [64, 64, 64], [128, 128], [128, 128], [512, 512, 512, 512]], score=0.016745
    Step 11: arch=[[64, 64, 64, 64], [2048, 2048, 2048, 2048], [128, 128, 128, 128, 128]], score=-100.000000
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64, 64], [512, 512], [64], [1024, 1024]], score=0.057138
    Step 3: arch=[[256, 256], [2048, 2048, 2048, 2048, 2048], [1024, 1024, 1024], [1024, 1024, 1024, 1024], [1024, 1024, 1024]], score=-100.000000
    Step 4: arch=[[128, 128, 128, 128, 128], [64, 64], [128, 128]], score=0.001716
    Step 5: arch=[[64, 64], [128, 128, 128, 128, 128]], score=-0.002609
    Step 6: arch=[[2048]], score=0.004591
    Step 7: arch=[[128, 128, 128], [512], [128, 128], [1024, 1024, 1024, 1024]], score=0.068633
    Step 8: arch=[[512, 512]], score=-0.017369
    Step 9: arch=[[1024, 1024, 1024], [2048], [128, 128, 128, 128], [64, 64, 64], [128, 128, 128, 128, 128]], score=0.116892
    Step 10: arch=[[128, 128, 128], [128], [2048, 2048, 2048, 2048]], score=0.098349
    Step 11: arch=[[2048, 2048, 2048, 2048], [512, 512], [64], [256, 256, 256], [512, 512]], score=-100.000000
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512]], score=-0.027914
    Step 3: arch=[[64, 64, 64, 64], [128, 128, 128], [2048, 2048, 2048, 2048]], score=0.117017
    Step 4: arch=[[1024, 1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 5: arch=[[512, 512, 512, 512], [128, 128, 128], [1024, 1024, 1024]], score=0.059445
    Step 6: arch=[[1024], [128, 128, 128, 128], [64, 64, 64], [1024, 1024, 1024, 1024, 1024]], score=0.108714
    Step 7: arch=[[256, 256, 256, 256, 256], [64, 64], [2048, 2048, 2048]], score=0.100496
    Step 8: arch=[[2048, 2048], [128], [256]], score=0.083961
    Step 9: arch=[[128, 128], [256, 256, 256, 256, 256]], score=0.003896
    Step 10: arch=[[512], [256], [64, 64, 64], [256, 256, 256, 256, 256]], score=0.003257
    Step 11: arch=[[1024, 1024, 1024]], score=0.027444
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128], [64, 64, 64, 64], [64]], score=-0.015820
    Step 3: arch=[[512, 512, 512], [128, 128], [2048, 2048, 2048], [1024]], score=0.121264
    Step 4: arch=[[256], [256, 256], [256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256, 256]], score=0.016433
    Step 5: arch=[[2048, 2048]], score=0.073705
    Step 6: arch=[[512], [512], [512, 512]], score=0.000000
    Step 7: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 8: arch=[[64, 64, 64, 64, 64], [128], [1024, 1024, 1024], [64], [128, 128]], score=0.034239
    Step 9: arch=[[512, 512, 512], [1024, 1024, 1024, 1024, 1024]], score=0.119656
    Step 10: arch=[[64, 64, 64, 64], [64], [256], [512, 512, 512]], score=0.019850
    Step 11: arch=[[2048]], score=0.004591
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [256], [256, 256]], score=-0.022053
    Step 3: arch=[[64, 64], [256, 256, 256, 256, 256], [256, 256, 256, 256, 256], [512, 512, 512, 512, 512], [2048]], score=0.085902
    Step 4: arch=[[256], [128]], score=-0.032651
    Step 5: arch=[[64, 64, 64], [512], [2048, 2048, 2048]], score=0.091268
    Step 6: arch=[[2048], [512, 512, 512, 512, 512]], score=0.079476
    Step 7: arch=[[256, 256, 256, 256], [256, 256], [64, 64]], score=0.001105
    Step 8: arch=[[128, 128], [64, 64, 64, 64]], score=-0.008939
    Step 9: arch=[[512, 512, 512], [64, 64, 64, 64], [2048, 2048, 2048], [128, 128, 128], [2048, 2048, 2048]], score=0.123045
    Step 10: arch=[[2048], [512, 512, 512, 512, 512], [512, 512, 512, 512], [64, 64, 64, 64]], score=0.113385
    Step 11: arch=[[512], [2048, 2048, 2048]], score=0.122609
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128], [1024], [64, 64, 64, 64], [1024]], score=0.013121
    Step 3: arch=[[512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[1024, 1024], [128, 128, 128], [256, 256], [128, 128]], score=0.035597
    Step 5: arch=[[64, 64, 64], [64, 64, 64]], score=-0.010553
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024]], score=0.071967
    Step 7: arch=[[512, 512, 512, 512], [1024, 1024, 1024]], score=0.075745
    Step 8: arch=[[512, 512, 512, 512], [128, 128, 128]], score=0.018954
    Step 9: arch=[[2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [512, 512], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[2048, 2048], [256]], score=0.085738
    Step 11: arch=[[2048], [2048, 2048, 2048]], score=-100.000000
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512, 512], [256, 256, 256, 256, 256], [64, 64, 64]], score=0.021671
    Step 3: arch=[[512, 512], [256, 256]], score=-0.005871
    Step 4: arch=[[1024, 1024, 1024, 1024, 1024], [64, 64]], score=0.079033
    Step 5: arch=[[1024, 1024, 1024, 1024, 1024], [256, 256, 256, 256], [128, 128, 128]], score=0.106843
    Step 6: arch=[[2048, 2048, 2048, 2048], [1024, 1024], [256]], score=-100.000000
    Step 7: arch=[[2048, 2048, 2048, 2048], [1024, 1024, 1024, 1024, 1024], [128, 128, 128, 128]], score=-100.000000
    Step 8: arch=[[64, 64, 64], [256, 256, 256], [512, 512, 512]], score=0.012551
    Step 9: arch=[[256, 256], [128, 128, 128, 128], [128, 128, 128, 128], [64]], score=0.003030
    Step 10: arch=[[1024, 1024, 1024, 1024], [64, 64, 64, 64], [1024, 1024]], score=0.102885
    Step 11: arch=[[128, 128, 128, 128, 128], [128, 128, 128, 128], [1024, 1024]], score=0.046736
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512, 512], [1024, 1024, 1024, 1024], [64, 64], [256, 256], [64, 64, 64]], score=0.104956
    Step 3: arch=[[1024], [512], [512, 512, 512], [1024, 1024, 1024, 1024, 1024], [64]], score=0.119690
    Step 4: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 5: arch=[[64, 64, 64]], score=-0.024003
    Step 6: arch=[[128, 128, 128, 128, 128], [512, 512, 512, 512]], score=0.030271
    Step 7: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 8: arch=[[64], [1024, 1024, 1024, 1024, 1024]], score=0.082829
    Step 9: arch=[[128, 128, 128], [64, 64, 64, 64], [64, 64, 64, 64, 64], [512, 512, 512, 512, 512], [512, 512]], score=0.059095
    Step 10: arch=[[128, 128, 128, 128], [512, 512, 512, 512], [512, 512, 512, 512, 512], [512, 512]], score=0.078488
    Step 11: arch=[[2048, 2048], [256, 256]], score=0.093543
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128, 128], [2048, 2048], [64, 64, 64], [64, 64, 64, 64]], score=0.111952
    Step 3: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 4: arch=[[512, 512, 512], [2048, 2048, 2048, 2048, 2048], [2048, 2048], [512, 512, 512]], score=-100.000000
    Step 5: arch=[[128], [1024, 1024, 1024, 1024], [256, 256, 256, 256]], score=0.070949
    Step 6: arch=[[256, 256, 256], [2048, 2048]], score=0.094043
    Step 7: arch=[[1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=0.098210
    Step 8: arch=[[1024], [256, 256, 256, 256, 256], [2048], [1024, 1024, 1024], [64, 64, 64, 64]], score=0.122163
    Step 9: arch=[[512, 512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[256, 256, 256], [128, 128, 128], [128], [128, 128, 128]], score=0.008119
    Step 11: arch=[[512, 512, 512], [64, 64, 64, 64], [64, 64]], score=0.015305
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512], [1024, 1024], [64, 64, 64, 64], [128, 128, 128], [2048]], score=0.048587
    Step 3: arch=[[2048, 2048], [64, 64, 64, 64, 64], [512, 512, 512, 512, 512], [256]], score=0.120158
    Step 4: arch=[[1024, 1024, 1024]], score=0.027444
    Step 5: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 6: arch=[[64, 64]], score=-0.030699
    Step 7: arch=[[2048, 2048, 2048, 2048], [128, 128, 128, 128], [64], [64, 64]], score=-100.000000
    Step 8: arch=[[128, 128, 128], [256, 256, 256, 256, 256], [64, 64, 64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[256, 256, 256, 256, 256], [256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[512], [1024], [64, 64, 64, 64], [128], [2048, 2048, 2048]], score=0.078655
    Step 11: arch=[[512, 512, 512, 512, 512], [64, 64, 64], [256, 256, 256, 256, 256], [256, 256, 256]], score=0.057500

Method: SimulatedAnnealing
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.003361
    Step 5: arch=[[256, 256], [512, 512], [256], [64, 64], [64]], score=0.001411
    Step 6: arch=[[256, 256], [512, 512], [64, 64], [64]], score=-0.007511
    Step 7: arch=[[256, 256], [512, 512], [64, 64], [64], [128]], score=-0.007049
    Step 8: arch=[[256, 256], [1024, 1024], [64, 64], [64], [128]], score=0.014361
    Step 9: arch=[[1024, 1024], [64, 64], [64], [128]], score=0.015148
    Step 10: arch=[[1024, 1024], [64, 64], [64], [128, 128]], score=0.018646
    Step 11: arch=[[1024, 1024], [64], [64], [128, 128]], score=0.011931
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512], [256, 256], [64], [64]], score=-0.012115
    Step 5: arch=[[1024, 1024], [512], [256, 256], [64], [64]], score=0.029366
    Step 6: arch=[[1024, 1024], [512, 512], [256, 256], [64], [64]], score=0.041049
    Step 7: arch=[[1024, 1024], [512, 512], [256, 256], [64, 64], [64]], score=0.044410
    Step 8: arch=[[1024, 1024], [512, 512], [256, 256], [64, 64], [64, 64]], score=0.047757
    Step 9: arch=[[2048, 2048], [512, 512], [256, 256], [64, 64], [64, 64]], score=0.119845
    Step 10: arch=[[2048, 2048], [128, 128], [256, 256], [64, 64], [64, 64]], score=0.099602
    Step 11: arch=[[2048, 2048], [128, 128], [256, 256], [128, 128], [64, 64]], score=0.102573
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [256, 256], [128], [64]], score=0.002836
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [512], [64]], score=0.019837
    Step 6: arch=[[256, 256], [512, 512], [256, 256], [512], [128]], score=0.020781
    Step 7: arch=[[256, 256], [512, 512], [256], [512], [128]], score=0.018844
    Step 8: arch=[[256, 256], [512, 512], [256], [512, 512], [128]], score=0.024942
    Step 9: arch=[[256, 256], [512, 512], [256], [2048, 2048], [128]], score=0.120221
    Step 10: arch=[[256, 256], [512, 512], [256], [2048, 2048], [128, 128]], score=0.120366
    Step 11: arch=[[256, 256], [256], [256], [2048, 2048], [128, 128]], score=0.119705
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256], [512, 512], [256, 256], [64], [64]], score=-0.007562
    Step 5: arch=[[256], [512, 512], [256, 256], [256], [64]], score=0.000943
    Step 6: arch=[[128], [512, 512], [256, 256], [256], [64]], score=-0.003684
    Step 7: arch=[[128, 128, 128], [512, 512], [256, 256], [256], [64]], score=0.010050
    Step 8: arch=[[128, 128, 128], [512, 512], [256, 256], [256], [64, 64]], score=0.013396
    Step 9: arch=[[128, 128, 128], [128, 128], [256, 256], [256], [64, 64]], score=0.004459
    Step 10: arch=[[512, 512, 512], [128, 128], [256, 256], [256], [64, 64]], score=0.020909
    Step 11: arch=[[512, 512, 512], [512, 512], [256, 256], [256], [64, 64]], score=0.034131
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512, 512], [256, 256], [64], [64]], score=0.012115
    Step 5: arch=[[256, 256], [512, 512, 512], [256, 256], [64], [64, 64]], score=0.015462
    Step 6: arch=[[256, 256], [1024], [256, 256], [64], [64, 64]], score=-0.001791
    Step 7: arch=[[256, 256], [1024], [512, 512], [64], [64, 64]], score=0.011757
    Step 8: arch=[[256, 256], [2048], [512, 512], [64], [64, 64]], score=0.031106
    Step 9: arch=[[64, 64], [2048], [512, 512], [64], [64, 64]], score=0.014588
    Step 10: arch=[[512], [2048], [512, 512], [64], [64, 64]], score=0.044246
    Step 11: arch=[[512], [512, 512], [64], [64, 64]], score=-0.004132
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[64, 64], [512, 512], [256, 256], [64], [64]], score=-0.007822
    Step 5: arch=[[64, 64], [2048, 2048], [256, 256], [64], [64]], score=0.087572
    Step 6: arch=[[64, 64], [2048, 2048], [256, 256], [256], [64]], score=0.096038
    Step 7: arch=[[64, 64], [2048, 2048], [128, 128], [256], [64]], score=0.087104
    Step 8: arch=[[64, 64], [2048], [128, 128], [256], [64]], score=-0.010337
    Step 9: arch=[[64, 64], [2048], [128, 128], [64]], score=-0.018478
    Step 10: arch=[[64, 64], [2048, 2048], [128, 128], [64]], score=0.078963
    Step 11: arch=[[64, 64], [2048, 2048], [512, 512, 512, 512], [64]], score=0.110135
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [1024, 1024], [64], [64]], score=0.032684
    Step 5: arch=[[256, 256], [1024, 1024], [64], [64]], score=0.012223
    Step 6: arch=[[256, 256], [1024, 1024], [64], [64], [64, 64]], score=0.015569
    Step 7: arch=[[256, 256], [1024, 1024], [256], [64], [64, 64]], score=0.024811
    Step 8: arch=[[256, 256], [1024, 1024], [256, 256], [64], [64, 64]], score=0.026746
    Step 9: arch=[[512, 512], [1024, 1024], [256, 256], [64], [64, 64]], score=0.042162
    Step 10: arch=[[512, 512], [1024, 1024], [256, 256], [64], [64, 64, 64]], score=0.045508
    Step 11: arch=[[512, 512], [1024, 1024], [64, 64, 64], [64], [64, 64, 64]], score=0.037862
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512, 512, 512], [256, 256], [64], [64]], score=0.024230
    Step 5: arch=[[512, 512, 512, 512], [256, 256], [64], [64]], score=0.015205
    Step 6: arch=[[512, 512, 512, 512], [256, 256], [64, 64, 64], [64]], score=0.018560
    Step 7: arch=[[512, 512, 512, 512], [256, 256], [64, 64, 64], [64, 64]], score=0.021922
    Step 8: arch=[[512, 512, 512, 512], [256, 256], [64, 64, 64, 64], [64, 64]], score=0.023600
    Step 9: arch=[[512, 512, 512], [256, 256], [64, 64, 64, 64], [64, 64]], score=0.013159
    Step 10: arch=[[512, 512, 512], [256, 256], [128, 128, 128, 128], [64, 64]], score=0.015361
    Step 11: arch=[[512, 512, 512], [128, 128, 128, 128], [64, 64]], score=0.017178
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [64], [64]], score=-0.009188
    Step 5: arch=[[1024, 1024], [512, 512], [64], [64]], score=0.032107
    Step 6: arch=[[1024, 1024], [512, 512], [64], [128]], score=0.034727
    Step 7: arch=[[1024, 1024], [512, 512], [64, 64], [128]], score=0.036404
    Step 8: arch=[[1024, 1024], [128, 128], [64, 64], [128]], score=0.019171
    Step 9: arch=[[1024, 1024], [512, 512], [64, 64], [128]], score=0.036404
    Step 10: arch=[[2048, 2048], [512, 512], [64, 64], [128]], score=0.115973
    Step 11: arch=[[2048, 2048], [512, 512, 512], [64, 64], [128]], score=0.119853
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[2048, 2048, 2048, 2048], [512, 512], [256, 256], [64], [64]], score=-100.000000
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64], [64, 64, 64, 64]], score=0.010039
    Step 6: arch=[[256, 256], [512, 512], [256, 256], [256], [64, 64, 64, 64]], score=0.018543
    Step 7: arch=[[256, 256], [512, 512], [256, 256], [128], [64, 64, 64, 64]], score=0.012874
    Step 8: arch=[[256, 256], [512, 512], [256, 256], [128], [64, 64, 64]], score=0.009528
    Step 9: arch=[[256], [512, 512], [256, 256], [128], [64, 64, 64]], score=0.001966
    Step 10: arch=[[256, 256], [512, 512], [256, 256], [128], [64, 64, 64]], score=0.009528
    Step 11: arch=[[256, 256], [2048, 2048], [256, 256], [128], [64, 64, 64]], score=0.112114

Method: LogSpaceSimulatedAnnealing
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.007562
    Step 5: arch=[[128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.001545
    Step 6: arch=[[128, 128], [512, 512], [256, 256], [64], [64]], score=-0.005322
    Step 7: arch=[[128, 128], [256, 256], [256, 256], [64], [64]], score=-0.011983
    Step 8: arch=[[128, 128], [256, 256], [256, 256], [64], [128]], score=-0.011521
    Step 9: arch=[[128, 128], [256, 256], [256, 256], [64], [64]], score=-0.011983
    Step 10: arch=[[64, 64], [256, 256], [256, 256], [64], [64]], score=-0.013972
    Step 11: arch=[[64, 64], [256, 256], [256, 256], [128], [64]], score=-0.011133
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [256, 256], [64], [64, 64]], score=0.003346
    Step 5: arch=[[128, 128], [512, 512], [256, 256], [64], [64, 64]], score=-0.001976
    Step 6: arch=[[128, 128], [512, 512], [256, 256], [64], [128, 128]], score=-0.001427
    Step 7: arch=[[128, 128], [512, 512], [128, 128], [64], [128, 128]], score=-0.006494
    Step 8: arch=[[128, 128], [512, 512], [128, 128, 128], [64], [128, 128]], score=-0.004762
    Step 9: arch=[[128], [512, 512], [128, 128, 128], [64], [128, 128]], score=-0.011629
    Step 10: arch=[[128], [512], [128, 128, 128], [64], [128, 128]], score=-0.023906
    Step 11: arch=[[128], [512], [128, 128, 128], [128, 128, 128], [128, 128]], score=-0.014129
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[512, 512], [512, 512], [256, 256], [64], [64]], score=0.011942
    Step 5: arch=[[512, 512], [512, 512], [128, 128], [64], [64]], score=0.006965
    Step 6: arch=[[512, 512], [512, 512], [128, 128], [128], [64]], score=0.009683
    Step 7: arch=[[512, 512], [512, 512], [64, 64], [128], [64]], score=0.007178
    Step 8: arch=[[1024, 1024], [512, 512], [64, 64], [128], [64]], score=0.036442
    Step 9: arch=[[1024, 1024], [256, 256], [64, 64], [128], [64]], score=0.024349
    Step 10: arch=[[1024, 1024], [256, 256], [64, 64], [128], [128]], score=0.024883
    Step 11: arch=[[1024, 1024], [512, 512], [64, 64], [128], [128]], score=0.036976
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512, 512], [256, 256], [64], [64]], score=0.012115
    Step 5: arch=[[256, 256], [512, 512, 512], [256, 256], [64, 64], [64]], score=0.015477
    Step 6: arch=[[512, 512], [512, 512, 512], [256, 256], [64, 64], [64]], score=0.027267
    Step 7: arch=[[512, 512], [512, 512, 512], [256], [64, 64], [64]], score=0.025316
    Step 8: arch=[[512, 512], [512, 512, 512], [512], [64, 64], [64]], score=0.034607
    Step 9: arch=[[512, 512, 512], [512, 512, 512], [512], [64, 64], [64]], score=0.044944
    Step 10: arch=[[1024, 1024, 1024], [512, 512, 512], [512], [64, 64], [64]], score=0.084687
    Step 11: arch=[[512, 512, 512], [512, 512, 512], [512], [64, 64], [64]], score=0.044944
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512], [256, 256], [64], [64]], score=-0.012115
    Step 5: arch=[[256, 256], [512], [256, 256], [64], [64, 64]], score=-0.008769
    Step 6: arch=[[128, 128], [512], [256, 256], [64], [64, 64]], score=-0.014170
    Step 7: arch=[[128, 128], [512], [128, 128], [64], [64, 64]], score=-0.019319
    Step 8: arch=[[128, 128], [1024], [128, 128], [64], [64, 64]], score=-0.015989
    Step 9: arch=[[256, 256], [1024], [128, 128], [64], [64, 64]], score=-0.008461
    Step 10: arch=[[256, 256], [1024], [128, 128], [64], [64]], score=-0.011807
    Step 11: arch=[[256, 256], [512], [128, 128], [64], [64]], score=-0.017231
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.007562
    Step 5: arch=[[128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.001545
    Step 6: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.008412
    Step 7: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [128]], score=0.008874
    Step 8: arch=[[128, 128, 128, 128], [256, 256], [256, 256], [64], [128]], score=0.002225
    Step 9: arch=[[128, 128, 128, 128], [256, 256], [64], [64], [128]], score=-0.005884
    Step 10: arch=[[128, 128, 128, 128], [256, 256], [64], [64], [512, 512]], score=0.002057
    Step 11: arch=[[128, 128, 128, 128], [256, 256], [64], [64], [1024, 1024]], score=0.011301
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512], [128, 128], [64], [64]], score=-0.005036
    Step 5: arch=[[256, 256], [512], [128, 128], [64], [64]], score=-0.017231
    Step 6: arch=[[256, 256], [512], [128], [64], [64]], score=-0.018962
    Step 7: arch=[[256, 256], [512], [64], [64], [64]], score=-0.021423
    Step 8: arch=[[256, 256], [512], [128], [64], [64]], score=-0.018962
    Step 9: arch=[[256, 256], [256], [128], [64], [64]], score=-0.021729
    Step 10: arch=[[256, 256], [256, 256], [128], [64], [64]], score=-0.013702
    Step 11: arch=[[256, 256], [256, 256], [128], [64], [64, 64]], score=-0.010355
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [512, 512, 512, 512], [256, 256], [64], [64]], score=0.024230
    Step 5: arch=[[256, 256], [1024, 1024, 1024, 1024], [256, 256], [64], [64]], score=0.080473
    Step 6: arch=[[256, 256], [1024, 1024, 1024, 1024], [256, 256], [64], [1024]], score=0.087401
    Step 7: arch=[[256, 256], [1024, 1024, 1024, 1024], [128, 128], [64], [1024]], score=0.081683
    Step 8: arch=[[256, 256, 256], [1024, 1024, 1024, 1024], [128, 128], [64], [1024]], score=0.089197
    Step 9: arch=[[256, 256, 256, 256], [1024, 1024, 1024, 1024], [128, 128], [64], [1024]], score=0.096711
    Step 10: arch=[[256, 256, 256, 256], [512, 512, 512, 512], [128, 128], [64], [1024]], score=0.041405
    Step 11: arch=[[256, 256, 256, 256], [1024, 1024, 1024, 1024], [128, 128], [64], [1024]], score=0.096711
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[256, 256], [1024, 1024], [256, 256], [64], [64]], score=0.023399
    Step 5: arch=[[256, 256], [1024, 1024], [256, 256], [64], [128]], score=0.023861
    Step 6: arch=[[256, 256], [1024, 1024], [512, 512], [64], [128]], score=0.036802
    Step 7: arch=[[128, 128], [1024, 1024], [512, 512], [64], [128]], score=0.029780
    Step 8: arch=[[128, 128], [1024, 1024], [512, 512], [128], [128]], score=0.032897
    Step 9: arch=[[128, 128], [2048, 2048], [512, 512], [128], [128]], score=0.113214
    Step 10: arch=[[128, 128], [2048, 2048], [512, 512], [128], [256]], score=0.114272
    Step 11: arch=[[256, 256], [2048, 2048], [512, 512], [128], [256]], score=0.119721
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 4: arch=[[2048, 2048, 2048, 2048], [512, 512], [256, 256], [64], [64]], score=-100.000000
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64], [64, 64, 64, 64]], score=0.010039
    Step 6: arch=[[256, 256], [512, 512], [256, 256], [64], [64, 64, 64]], score=0.006693
    Step 7: arch=[[1024, 1024, 1024], [512, 512], [256, 256], [64], [64, 64, 64]], score=0.069176
    Step 8: arch=[[1024, 1024, 1024], [512, 512], [128], [64], [64, 64, 64]], score=0.062571
    Step 9: arch=[[1024, 1024, 1024], [512, 512], [128], [128], [64, 64, 64]], score=0.065289
    Step 10: arch=[[1024, 1024], [512, 512], [128], [128], [64, 64, 64]], score=0.043854
    Step 11: arch=[[1024, 1024], [512, 512], [128], [128], [128, 128, 128]], score=0.044560

Method: TPE
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[512, 512, 512, 512], [256, 256, 256], [256, 256, 256, 256]], score=0.035100
    Step 4: arch=[[2048, 2048, 2048], [64], [1024]], score=0.121645
    Step 5: arch=[[64, 64, 64, 64], [64, 64, 64, 64], [512, 512, 512, 512, 512]], score=0.026569
    Step 6: arch=[[512], [512, 512, 512, 512], [1024, 1024, 1024, 1024, 1024]], score=0.075942
    Step 7: arch=[[128, 128, 128, 128], [128], [512, 512], [2048, 2048, 2048]], score=-100.000000
    Step 8: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 9: arch=[[2048], [2048], [2048, 2048, 2048], [1024, 1024, 1024, 1024], [128]], score=-100.000000
    Step 10: arch=[[64, 64]], score=-0.030699
    Step 11: arch=[[128, 128, 128, 128, 128], [64, 64, 64, 64], [128, 128, 128, 128]], score=0.018636
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[64, 64, 64, 64], [64, 64], [128]], score=-0.008849
    Step 4: arch=[[2048, 2048], [1024], [512, 512, 512], [128]], score=0.121114
    Step 5: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64, 64]], score=-100.000000
    Step 6: arch=[[128, 128, 128, 128], [2048, 2048, 2048, 2048], [1024]], score=-100.000000
    Step 7: arch=[[2048, 2048, 2048]], score=0.120512
    Step 8: arch=[[64, 64, 64]], score=-0.024003
    Step 9: arch=[[2048, 2048, 2048], [2048, 2048, 2048], [64], [256, 256, 256, 256, 256]], score=-100.000000
    Step 10: arch=[[1024, 1024, 1024, 1024], [512, 512, 512, 512, 512]], score=0.110024
    Step 11: arch=[[64, 64, 64, 64], [256, 256, 256, 256, 256], [256, 256, 256], [2048, 2048]], score=0.121255
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[512], [256, 256, 256], [128, 128]], score=-0.004377
    Step 4: arch=[[512], [1024], [256, 256, 256, 256, 256]], score=0.006510
    Step 5: arch=[[64], [128, 128, 128], [128]], score=-0.021391
    Step 6: arch=[[256, 256, 256], [512, 512, 512, 512], [1024]], score=0.057076
    Step 7: arch=[[256, 256, 256], [512, 512, 512, 512], [512, 512, 512, 512, 512]], score=0.050309
    Step 8: arch=[[64, 64]], score=-0.030699
    Step 9: arch=[[2048], [512, 512, 512]], score=0.056857
    Step 10: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 11: arch=[[128], [1024], [128, 128, 128, 128], [512, 512, 512], [128, 128, 128, 128]], score=0.019783
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[128, 128, 128, 128], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.122756
    Step 4: arch=[[128, 128, 128, 128], [512, 512, 512, 512], [512]], score=0.040041
    Step 5: arch=[[512], [128, 128, 128, 128], [256, 256]], score=0.001950
    Step 6: arch=[[64, 64], [512, 512, 512, 512], [128, 128], [256, 256, 256], [128, 128]], score=0.032037
    Step 7: arch=[[512, 512, 512, 512, 512], [128, 128], [128, 128, 128]], score=0.027837
    Step 8: arch=[[1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024]], score=0.121189
    Step 9: arch=[[2048, 2048]], score=0.073705
    Step 10: arch=[[64]], score=-0.037395
    Step 11: arch=[[1024, 1024, 1024, 1024, 1024], [2048, 2048, 2048], [512, 512, 512, 512], [512, 512, 512, 512, 512], [512, 512]], score=-100.000000
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[2048, 2048, 2048], [1024, 1024, 1024, 1024], [2048, 2048], [128], [1024, 1024, 1024]], score=-100.000000
    Step 4: arch=[[2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 5: arch=[[128, 128, 128, 128, 128], [512], [1024], [512, 512, 512]], score=0.066121
    Step 6: arch=[[512]], score=-0.027914
    Step 7: arch=[[1024, 1024, 1024], [512, 512]], score=0.053148
    Step 8: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 9: arch=[[512], [1024, 1024], [512, 512, 512, 512, 512]], score=0.049608
    Step 10: arch=[[1024, 1024], [64], [512, 512, 512, 512], [2048, 2048, 2048]], score=-100.000000
    Step 11: arch=[[1024, 1024, 1024, 1024, 1024], [256], [256, 256, 256, 256, 256]], score=0.091468
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256]], score=0.024517
    Step 4: arch=[[64, 64, 64], [128, 128, 128, 128, 128], [128, 128, 128], [512, 512, 512, 512]], score=0.046769
    Step 5: arch=[[128, 128], [64]], score=-0.029114
    Step 6: arch=[[512], [512], [2048, 2048, 2048, 2048], [1024, 1024]], score=-100.000000
    Step 7: arch=[[2048, 2048, 2048]], score=0.120512
    Step 8: arch=[[512, 512, 512, 512, 512], [512, 512, 512, 512, 512]], score=0.069744
    Step 9: arch=[[512], [64, 64, 64, 64]], score=-0.007414
    Step 10: arch=[[2048, 2048, 2048], [64, 64, 64, 64, 64], [256, 256, 256, 256, 256]], score=0.122233
    Step 11: arch=[[2048], [256]], score=0.018290
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[1024, 1024], [64], [512, 512, 512], [256, 256, 256], [256, 256, 256, 256]], score=0.054292
    Step 4: arch=[[512, 512, 512], [2048, 2048, 2048, 2048], [256, 256, 256, 256, 256], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 5: arch=[[1024, 1024, 1024, 1024], [64, 64, 64], [256, 256, 256, 256, 256], [1024, 1024], [128, 128, 128, 128, 128]], score=0.120762
    Step 6: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256], [256, 256], [1024, 1024, 1024, 1024]], score=0.121207
    Step 7: arch=[[1024, 1024], [256], [1024, 1024, 1024, 1024]], score=0.061311
    Step 8: arch=[[128], [512, 512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [128, 128, 128, 128, 128]], score=0.122234
    Step 9: arch=[[1024, 1024, 1024, 1024], [64, 64, 64, 64], [64, 64, 64, 64]], score=0.075330
    Step 10: arch=[[512], [64, 64], [64, 64, 64, 64, 64], [256, 256, 256]], score=0.001793
    Step 11: arch=[[64, 64, 64], [128, 128, 128, 128], [64, 64, 64], [2048, 2048]], score=0.120015
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256, 256]], score=-0.010490
    Step 4: arch=[[64, 64], [2048, 2048], [256, 256], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.123527
    Step 5: arch=[[2048, 2048, 2048], [512]], score=0.121487
    Step 6: arch=[[2048, 2048], [128, 128, 128, 128], [128, 128, 128]], score=0.104587
    Step 7: arch=[[256, 256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256, 256]], score=0.029542
    Step 8: arch=[[1024]], score=-0.017079
    Step 9: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [128], [1024, 1024, 1024], [64, 64, 64]], score=-100.000000
    Step 10: arch=[[128, 128], [256]], score=-0.028371
    Step 11: arch=[[1024, 1024, 1024, 1024], [64, 64, 64, 64, 64], [128, 128, 128, 128, 128], [1024, 1024, 1024], [64, 64, 64, 64]], score=0.121486
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[2048, 2048, 2048, 2048, 2048], [128, 128, 128], [256], [512, 512, 512], [512, 512, 512]], score=-100.000000
    Step 4: arch=[[1024, 1024, 1024, 1024], [256, 256, 256, 256], [2048, 2048]], score=0.121274
    Step 5: arch=[[64, 64]], score=-0.030699
    Step 6: arch=[[128, 128, 128, 128, 128], [128, 128, 128], [512, 512, 512, 512, 512], [512]], score=0.051298
    Step 7: arch=[[2048, 2048, 2048, 2048], [64, 64, 64], [128, 128, 128]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128, 128, 128], [512, 512, 512], [128, 128, 128, 128]], score=0.012204
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [128, 128, 128, 128, 128], [256, 256]], score=0.109333
    Step 11: arch=[[128, 128, 128, 128], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [64, 64], [64, 64, 64, 64]], score=0.090793
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256]], score=-0.018104
    Step 4: arch=[[64, 64, 64, 64, 64], [512, 512, 512, 512], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024], [1024, 1024]], score=0.122656
    Step 5: arch=[[2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048], [512], [512, 512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[2048, 2048]], score=0.073705
    Step 7: arch=[[1024], [2048, 2048, 2048, 2048], [512], [256, 256, 256, 256], [64]], score=-100.000000
    Step 8: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 9: arch=[[256], [256, 256, 256]], score=-0.015496
    Step 10: arch=[[256, 256, 256], [512, 512, 512, 512], [2048, 2048]], score=0.112753
    Step 11: arch=[[512]], score=-0.027914

Method: Skopt-Random
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048], [64, 64], [128], [1024, 1024], [512, 512]], score=-100.000000
    Step 4: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 5: arch=[[1024, 1024]], score=0.005183
    Step 6: arch=[[128], [1024], [128, 128, 128, 128, 128]], score=-0.021018
    Step 7: arch=[[512, 512]], score=-0.017369
    Step 8: arch=[[1024, 1024], [1024, 1024, 1024], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 9: arch=[[128], [2048, 2048, 2048, 2048, 2048], [128, 128, 128, 128], [512, 512, 512], [64]], score=-100.000000
    Step 10: arch=[[2048, 2048]], score=0.073705
    Step 11: arch=[[256, 256]], score=-0.025718
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64, 64], [128], [1024, 1024], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256]], score=0.065480
    Step 4: arch=[[2048, 2048], [128, 128], [128], [64, 64], [1024, 1024]], score=0.108286
    Step 5: arch=[[64], [512]], score=-0.036658
    Step 6: arch=[[256, 256, 256, 256, 256], [1024], [64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [128]], score=-0.017449
    Step 8: arch=[[256, 256, 256, 256], [256, 256], [128, 128, 128, 128], [512], [1024]], score=0.039576
    Step 9: arch=[[64], [64], [2048, 2048]], score=0.037764
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=0.121761
    Step 11: arch=[[2048, 2048], [256], [1024, 1024, 1024, 1024, 1024], [128, 128, 128], [128]], score=0.120902
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 3: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256], [1024, 1024, 1024, 1024]], score=0.108267
    Step 4: arch=[[64], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024], [256, 256]], score=0.120997
    Step 5: arch=[[2048, 2048], [64], [128, 128, 128]], score=0.080032
    Step 6: arch=[[64, 64], [512, 512]], score=-0.017568
    Step 7: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 8: arch=[[256, 256, 256, 256, 256], [1024]], score=0.004679
    Step 9: arch=[[64], [2048, 2048, 2048], [512, 512, 512, 512]], score=0.122805
    Step 10: arch=[[512]], score=-0.027914
    Step 11: arch=[[2048, 2048, 2048], [1024, 1024, 1024, 1024], [1024], [512], [256, 256, 256]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048]], score=0.073705
    Step 3: arch=[[2048, 2048], [64, 64, 64]], score=0.088241
    Step 4: arch=[[2048, 2048, 2048], [64, 64, 64, 64, 64], [128, 128]], score=0.121826
    Step 5: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024], [2048], [64], [64, 64], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[1024, 1024], [512, 512]], score=0.031713
    Step 8: arch=[[2048]], score=0.004591
    Step 9: arch=[[1024, 1024], [256, 256, 256, 256, 256], [64, 64, 64], [1024, 1024, 1024], [64, 64, 64, 64, 64]], score=0.119964
    Step 10: arch=[[2048, 2048, 2048], [128], [64, 64, 64, 64, 64], [64, 64, 64, 64]], score=0.121393
    Step 11: arch=[[512]], score=-0.027914
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024], [2048]], score=0.045777
    Step 3: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [128, 128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[64], [512, 512], [256, 256, 256]], score=-0.012604
    Step 5: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 6: arch=[[512, 512], [512, 512, 512, 512]], score=0.026622
    Step 7: arch=[[512, 512], [512, 512, 512], [512, 512, 512, 512]], score=0.039640
    Step 8: arch=[[512], [64, 64, 64, 64]], score=-0.007414
    Step 9: arch=[[64, 64, 64, 64, 64], [1024, 1024, 1024]], score=0.050266
    Step 10: arch=[[512, 512, 512], [2048, 2048], [64, 64, 64, 64], [256, 256], [64, 64, 64, 64, 64]], score=0.120811
    Step 11: arch=[[128, 128, 128, 128]], score=-0.015400
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64]], score=-0.030699
    Step 3: arch=[[128, 128, 128, 128, 128], [128, 128, 128, 128], [256, 256], [128, 128, 128, 128, 128]], score=0.037097
    Step 4: arch=[[1024, 1024, 1024], [1024]], score=0.056134
    Step 5: arch=[[128, 128, 128, 128, 128], [2048, 2048], [1024, 1024, 1024, 1024]], score=0.121914
    Step 6: arch=[[512, 512, 512, 512], [512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [128, 128]], score=0.123161
    Step 7: arch=[[64, 64, 64]], score=-0.024003
    Step 8: arch=[[64, 64, 64, 64, 64], [64, 64, 64], [256], [1024, 1024, 1024, 1024], [2048]], score=0.119979
    Step 9: arch=[[2048, 2048], [64, 64, 64, 64, 64], [64, 64, 64], [128, 128, 128, 128, 128]], score=0.119614
    Step 10: arch=[[2048, 2048, 2048, 2048, 2048], [1024, 1024], [512], [256]], score=-100.000000
    Step 11: arch=[[512, 512, 512], [128, 128, 128, 128]], score=0.015439
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128]], score=0.012863
    Step 3: arch=[[256, 256], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=0.121314
    Step 4: arch=[[2048, 2048], [64, 64, 64], [256, 256, 256, 256]], score=0.099345
    Step 5: arch=[[64, 64, 64, 64, 64], [2048, 2048, 2048, 2048], [256, 256], [256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128, 128], [64, 64, 64], [64, 64, 64, 64]], score=0.025485
    Step 7: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024], [128], [2048, 2048]], score=-100.000000
    Step 8: arch=[[64, 64], [2048, 2048], [128, 128, 128, 128, 128], [128]], score=0.086803
    Step 9: arch=[[512, 512], [512, 512, 512, 512, 512], [128, 128, 128]], score=0.044797
    Step 10: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 11: arch=[[1024, 1024, 1024, 1024], [128, 128, 128, 128, 128], [1024, 1024, 1024, 1024, 1024]], score=0.120106
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [128, 128, 128, 128], [256, 256, 256, 256], [256, 256, 256, 256, 256], [64, 64]], score=0.029821
    Step 3: arch=[[512], [1024, 1024, 1024, 1024, 1024], [1024], [2048, 2048, 2048, 2048], [64, 64, 64]], score=-100.000000
    Step 4: arch=[[128]], score=-0.036040
    Step 5: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128]], score=0.004998
    Step 7: arch=[[512, 512, 512, 512], [128, 128, 128, 128]], score=0.025933
    Step 8: arch=[[512, 512, 512], [256, 256, 256, 256]], score=0.020581
    Step 9: arch=[[1024, 1024], [2048, 2048], [1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[512, 512, 512, 512, 512]], score=0.014265
    Step 11: arch=[[256, 256, 256, 256, 256], [2048], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024], [128, 128]], score=-100.000000
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [64, 64], [2048, 2048, 2048], [2048], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[128, 128]], score=-0.029160
    Step 5: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[128], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=0.058913
    Step 7: arch=[[128, 128, 128], [256, 256, 256], [128, 128, 128], [256, 256]], score=0.012428
    Step 8: arch=[[128, 128, 128, 128], [1024], [128, 128], [1024]], score=0.034550
    Step 9: arch=[[512, 512, 512], [512], [512, 512, 512, 512, 512]], score=0.029171
    Step 10: arch=[[512, 512, 512, 512], [1024, 1024, 1024]], score=0.075745
    Step 11: arch=[[64, 64, 64, 64]], score=-0.017307
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64], [256, 256, 256, 256], [128, 128], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.117579
    Step 3: arch=[[64, 64], [256, 256, 256, 256, 256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64], [512, 512, 512, 512, 512], [512, 512, 512], [2048], [512, 512]], score=0.120834
    Step 5: arch=[[256], [128]], score=-0.032651
    Step 6: arch=[[256, 256, 256], [64], [256, 256, 256, 256, 256]], score=-0.004896
    Step 7: arch=[[512, 512, 512, 512, 512], [64], [64, 64, 64, 64], [128], [256, 256, 256, 256, 256]], score=0.038911
    Step 8: arch=[[256, 256, 256, 256, 256], [2048, 2048, 2048, 2048], [256, 256, 256], [256]], score=-100.000000
    Step 9: arch=[[64, 64], [128, 128, 128], [64, 64, 64], [256, 256]], score=-0.001276
    Step 10: arch=[[64, 64, 64], [256], [1024], [512, 512, 512, 512], [64, 64, 64, 64]], score=0.059456
    Step 11: arch=[[64, 64, 64, 64, 64], [128, 128]], score=-0.003512

Method: Skopt-GP
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128], [64, 64, 64, 64], [128, 128, 128, 128]], score=0.011757
    Step 3: arch=[[2048, 2048, 2048], [128, 128, 128, 128], [1024, 1024]], score=0.122984
    Step 4: arch=[[128, 128, 128, 128], [256, 256, 256, 256], [128, 128, 128]], score=0.015257
    Step 5: arch=[[256, 256], [512, 512]], score=-0.009654
    Step 6: arch=[[64, 64], [512, 512], [2048, 2048, 2048, 2048], [512, 512, 512]], score=0.121017
    Step 7: arch=[[512, 512, 512], [256, 256, 256], [1024, 1024, 1024], [2048, 2048, 2048], [512, 512]], score=-100.000000
    Step 8: arch=[[64, 64, 64]], score=-0.024003
    Step 9: arch=[[512, 512, 512], [1024, 1024, 1024, 1024]], score=0.094110
    Step 10: arch=[[128, 128]], score=-0.029160
    Step 11: arch=[[256], [64, 64, 64, 64, 64]], score=-0.006293
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256, 256, 256, 256], [512, 512], [2048, 2048, 2048, 2048, 2048], [1024, 1024], [256, 256, 256]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [2048, 2048], [1024, 1024, 1024]], score=0.121523
    Step 4: arch=[[64, 64, 64]], score=-0.024003
    Step 5: arch=[[512, 512], [512, 512]], score=0.002403
    Step 6: arch=[[64, 64, 64]], score=-0.024003
    Step 7: arch=[[2048, 2048, 2048], [256, 256, 256, 256, 256], [512, 512]], score=0.122972
    Step 8: arch=[[1024, 1024, 1024, 1024], [256]], score=0.055598
    Step 9: arch=[[1024, 1024, 1024, 1024], [256, 256], [1024, 1024, 1024, 1024]], score=0.112808
    Step 10: arch=[[256], [1024, 1024, 1024, 1024], [1024]], score=0.103071
    Step 11: arch=[[1024], [512, 512], [128, 128], [256, 256, 256, 256, 256], [64]], score=0.039010
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512, 512, 512, 512, 512], [128, 128, 128, 128, 128]], score=0.043405
    Step 3: arch=[[256, 256, 256], [128, 128, 128], [2048, 2048, 2048, 2048], [128, 128]], score=0.119721
    Step 4: arch=[[512, 512]], score=-0.017369
    Step 5: arch=[[1024, 1024, 1024, 1024], [512, 512, 512], [128, 128, 128, 128, 128], [2048]], score=0.122043
    Step 6: arch=[[1024, 1024, 1024, 1024], [2048, 2048]], score=0.122648
    Step 7: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256], [2048, 2048, 2048, 2048, 2048], [256, 256, 256]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256], [2048, 2048, 2048], [64, 64, 64, 64, 64]], score=0.121156
    Step 9: arch=[[1024, 1024], [2048, 2048]], score=0.121008
    Step 10: arch=[[128, 128, 128], [1024, 1024, 1024, 1024, 1024]], score=0.099351
    Step 11: arch=[[64, 64, 64]], score=-0.024003
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 3: arch=[[2048, 2048], [256, 256], [512, 512, 512]], score=0.113073
    Step 4: arch=[[1024, 1024, 1024], [64, 64, 64, 64]], score=0.048129
    Step 5: arch=[[256, 256, 256], [512, 512, 512], [1024, 1024, 1024, 1024]], score=0.064434
    Step 6: arch=[[1024, 1024, 1024, 1024], [64, 64, 64, 64], [1024, 1024, 1024, 1024], [512, 512]], score=0.120639
    Step 7: arch=[[256, 256, 256], [512, 512, 512]], score=0.010178
    Step 8: arch=[[512, 512, 512, 512], [2048, 2048]], score=0.119872
    Step 9: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256]], score=0.041462
    Step 10: arch=[[1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024], [128, 128, 128, 128], [1024, 1024]], score=0.124140
    Step 11: arch=[[2048, 2048, 2048, 2048, 2048], [64, 64, 64], [128]], score=-100.000000
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128], [512, 512, 512, 512], [2048, 2048, 2048], [512, 512, 512], [64, 64]], score=0.121395
    Step 3: arch=[[128, 128], [512, 512, 512], [1024, 1024, 1024]], score=0.045432
    Step 4: arch=[[1024, 1024, 1024], [2048, 2048, 2048], [1024], [1024, 1024], [128, 128, 128, 128]], score=-100.000000
    Step 5: arch=[[256, 256]], score=-0.025718
    Step 6: arch=[[2048, 2048, 2048], [128, 128]], score=0.120973
    Step 7: arch=[[2048, 2048, 2048, 2048, 2048], [256, 256], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[128], [64], [2048], [128, 128]], score=0.026062
    Step 9: arch=[[2048, 2048], [128], [1024, 1024, 1024], [1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[128, 128, 128, 128, 128], [2048, 2048], [256, 256, 256], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 11: arch=[[1024, 1024, 1024, 1024], [64, 64], [256, 256, 256], [256, 256, 256, 256], [512, 512, 512, 512]], score=0.106561
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256, 256, 256]], score=-0.010490
    Step 3: arch=[[1024, 1024], [512, 512, 512, 512], [256], [1024, 1024]], score=0.119005
    Step 4: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 5: arch=[[64, 64, 64], [1024, 1024], [512, 512, 512, 512]], score=0.038093
    Step 6: arch=[[128, 128, 128], [128], [2048, 2048]], score=0.055870
    Step 7: arch=[[256, 256]], score=-0.025718
    Step 8: arch=[[512, 512, 512], [128, 128], [128, 128]], score=0.005113
    Step 9: arch=[[256, 256, 256, 256, 256], [256, 256, 256, 256, 256]], score=0.030947
    Step 10: arch=[[256, 256], [2048]], score=-0.010061
    Step 11: arch=[[64, 64, 64, 64, 64], [64, 64], [128], [2048, 2048, 2048]], score=-100.000000
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[512, 512], [512], [256, 256], [1024, 1024, 1024, 1024, 1024], [1024]], score=0.117323
    Step 3: arch=[[512, 512], [1024, 1024], [256, 256, 256, 256]], score=0.042651
    Step 4: arch=[[128, 128, 128], [1024, 1024, 1024]], score=0.040372
    Step 5: arch=[[1024, 1024, 1024, 1024], [256, 256, 256, 256], [256, 256, 256, 256, 256], [1024, 1024, 1024, 1024]], score=0.122043
    Step 6: arch=[[256, 256, 256, 256], [512, 512], [128, 128, 128, 128], [1024], [512, 512, 512, 512]], score=0.079494
    Step 7: arch=[[512, 512, 512], [1024, 1024, 1024]], score=0.065597
    Step 8: arch=[[256, 256, 256, 256, 256], [128, 128, 128], [64, 64, 64], [256, 256, 256], [512, 512, 512]], score=0.046079
    Step 9: arch=[[256, 256, 256, 256], [256], [64, 64, 64, 64]], score=-0.003577
    Step 10: arch=[[1024, 1024, 1024], [256, 256]], score=0.041685
    Step 11: arch=[[512, 512]], score=-0.017369
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [256, 256, 256, 256, 256]], score=0.001926
    Step 3: arch=[[2048, 2048, 2048], [128, 128, 128, 128]], score=0.121560
    Step 4: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128]], score=0.012863
    Step 5: arch=[[64, 64], [512, 512, 512]], score=-0.005172
    Step 6: arch=[[512, 512, 512], [512, 512, 512, 512, 512], [512, 512, 512, 512]], score=0.073617
    Step 7: arch=[[2048, 2048, 2048], [128, 128, 128, 128], [512, 512, 512, 512], [512, 512, 512, 512]], score=-100.000000
    Step 8: arch=[[64, 64, 64], [64, 64, 64, 64]], score=-0.003827
    Step 9: arch=[[1024, 1024, 1024], [256, 256, 256, 256], [128, 128, 128, 128, 128]], score=0.066622
    Step 10: arch=[[128, 128, 128, 128, 128], [128, 128]], score=-0.001241
    Step 11: arch=[[1024, 1024, 1024, 1024]], score=0.049706
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024, 1024]], score=0.005183
    Step 3: arch=[[1024, 1024, 1024], [64, 64, 64, 64], [128], [128, 128]], score=0.056057
    Step 4: arch=[[512, 512], [128, 128, 128]], score=-0.002034
    Step 5: arch=[[256, 256], [512, 512], [128], [512, 512, 512, 512]], score=0.030530
    Step 6: arch=[[256, 256], [128, 128, 128], [1024, 1024], [1024, 1024], [1024, 1024]], score=0.117804
    Step 7: arch=[[512, 512, 512], [512, 512, 512, 512], [256, 256, 256]], score=0.048117
    Step 8: arch=[[1024, 1024, 1024, 1024], [256, 256, 256, 256, 256]], score=0.087325
    Step 9: arch=[[1024, 1024]], score=0.005183
    Step 10: arch=[[256, 256, 256], [128, 128, 128]], score=-0.003472
    Step 11: arch=[[512, 512]], score=-0.017369
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128], [128]], score=-0.021989
    Step 3: arch=[[2048, 2048, 2048, 2048], [512, 512, 512, 512, 512]], score=-100.000000
    Step 4: arch=[[64, 64, 64, 64], [256, 256, 256], [128, 128, 128, 128], [2048]], score=0.089641
    Step 5: arch=[[128, 128, 128], [256, 256, 256, 256], [512], [128, 128, 128]], score=0.027079
    Step 6: arch=[[64, 64, 64, 64, 64], [128, 128, 128], [128, 128], [256, 256], [512, 512, 512, 512, 512]], score=0.044493
    Step 7: arch=[[256, 256], [64, 64]], score=-0.018856
    Step 8: arch=[[512, 512, 512, 512], [64], [1024, 1024], [512, 512, 512, 512], [512, 512]], score=0.089845
    Step 9: arch=[[64], [512, 512], [2048, 2048, 2048], [1024, 1024]], score=0.121313
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [64], [1024, 1024], [256, 256, 256, 256]], score=0.119859
    Step 11: arch=[[64]], score=-0.037395

Method: Skopt-RF
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048], [64, 64], [128], [1024, 1024], [512, 512]], score=-100.000000
    Step 4: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 5: arch=[[1024, 1024]], score=0.005183
    Step 6: arch=[[128], [1024], [128, 128, 128, 128, 128]], score=-0.021018
    Step 7: arch=[[512, 512]], score=-0.017369
    Step 8: arch=[[1024, 1024], [1024, 1024, 1024], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 9: arch=[[128], [2048, 2048, 2048, 2048, 2048], [128, 128, 128, 128], [512, 512, 512], [64]], score=-100.000000
    Step 10: arch=[[2048, 2048]], score=0.073705
    Step 11: arch=[[128]], score=-0.036040
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64, 64], [128], [1024, 1024], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256]], score=0.065480
    Step 4: arch=[[2048, 2048], [128, 128], [128], [64, 64], [1024, 1024]], score=0.108286
    Step 5: arch=[[64], [512]], score=-0.036658
    Step 6: arch=[[256, 256, 256, 256, 256], [1024], [64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [128]], score=-0.017449
    Step 8: arch=[[256, 256, 256, 256], [256, 256], [128, 128, 128, 128], [512], [1024]], score=0.039576
    Step 9: arch=[[64], [64], [2048, 2048]], score=0.037764
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=0.121761
    Step 11: arch=[[2048, 2048, 2048], [128, 128], [256, 256], [2048, 2048], [1024, 1024, 1024, 1024]], score=-100.000000
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 3: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256], [1024, 1024, 1024, 1024]], score=0.108267
    Step 4: arch=[[64], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024], [256, 256]], score=0.120997
    Step 5: arch=[[2048, 2048], [64], [128, 128, 128]], score=0.080032
    Step 6: arch=[[64, 64], [512, 512]], score=-0.017568
    Step 7: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 8: arch=[[256, 256, 256, 256, 256], [1024]], score=0.004679
    Step 9: arch=[[64], [2048, 2048, 2048], [512, 512, 512, 512]], score=0.122805
    Step 10: arch=[[512]], score=-0.027914
    Step 11: arch=[[64], [1024, 1024, 1024], [64, 64, 64, 64, 64], [512, 512, 512, 512, 512]], score=0.074176
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048]], score=0.073705
    Step 3: arch=[[2048, 2048], [64, 64, 64]], score=0.088241
    Step 4: arch=[[2048, 2048, 2048], [64, 64, 64, 64, 64], [128, 128]], score=0.121826
    Step 5: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024], [2048], [64], [64, 64], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[1024, 1024], [512, 512]], score=0.031713
    Step 8: arch=[[2048]], score=0.004591
    Step 9: arch=[[1024, 1024], [256, 256, 256, 256, 256], [64, 64, 64], [1024, 1024, 1024], [64, 64, 64, 64, 64]], score=0.119964
    Step 10: arch=[[2048, 2048, 2048], [128], [64, 64, 64, 64, 64], [64, 64, 64, 64]], score=0.121393
    Step 11: arch=[[2048, 2048], [64], [64, 64], [64], [2048, 2048, 2048]], score=0.121097
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024], [2048]], score=0.045777
    Step 3: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [128, 128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[64], [512, 512], [256, 256, 256]], score=-0.012604
    Step 5: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 6: arch=[[512, 512], [512, 512, 512, 512]], score=0.026622
    Step 7: arch=[[512, 512], [512, 512, 512], [512, 512, 512, 512]], score=0.039640
    Step 8: arch=[[512], [64, 64, 64, 64]], score=-0.007414
    Step 9: arch=[[64, 64, 64, 64, 64], [1024, 1024, 1024]], score=0.050266
    Step 10: arch=[[512, 512, 512], [2048, 2048], [64, 64, 64, 64], [256, 256], [64, 64, 64, 64, 64]], score=0.120811
    Step 11: arch=[[512, 512, 512, 512, 512], [2048], [128, 128, 128, 128, 128], [1024, 1024, 1024], [128, 128, 128, 128, 128]], score=0.120482
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64]], score=-0.030699
    Step 3: arch=[[128, 128, 128, 128, 128], [128, 128, 128, 128], [256, 256], [128, 128, 128, 128, 128]], score=0.037097
    Step 4: arch=[[1024, 1024, 1024], [1024]], score=0.056134
    Step 5: arch=[[128, 128, 128, 128, 128], [2048, 2048], [1024, 1024, 1024, 1024]], score=0.121914
    Step 6: arch=[[512, 512, 512, 512], [512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [128, 128]], score=0.123161
    Step 7: arch=[[64, 64, 64]], score=-0.024003
    Step 8: arch=[[64, 64, 64, 64, 64], [64, 64, 64], [256], [1024, 1024, 1024, 1024], [2048]], score=0.119979
    Step 9: arch=[[2048, 2048], [64, 64, 64, 64, 64], [64, 64, 64], [128, 128, 128, 128, 128]], score=0.119614
    Step 10: arch=[[2048, 2048, 2048, 2048, 2048], [1024, 1024], [512], [256]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048], [512], [2048]], score=-100.000000
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128]], score=0.012863
    Step 3: arch=[[256, 256], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=0.121314
    Step 4: arch=[[2048, 2048], [64, 64, 64], [256, 256, 256, 256]], score=0.099345
    Step 5: arch=[[64, 64, 64, 64, 64], [2048, 2048, 2048, 2048], [256, 256], [256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128, 128], [64, 64, 64], [64, 64, 64, 64]], score=0.025485
    Step 7: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024], [128], [2048, 2048]], score=-100.000000
    Step 8: arch=[[64, 64], [2048, 2048], [128, 128, 128, 128, 128], [128]], score=0.086803
    Step 9: arch=[[512, 512], [512, 512, 512, 512, 512], [128, 128, 128]], score=0.044797
    Step 10: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 11: arch=[[512, 512, 512], [1024, 1024, 1024, 1024]], score=0.094110
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [128, 128, 128, 128], [256, 256, 256, 256], [256, 256, 256, 256, 256], [64, 64]], score=0.029821
    Step 3: arch=[[512], [1024, 1024, 1024, 1024, 1024], [1024], [2048, 2048, 2048, 2048], [64, 64, 64]], score=-100.000000
    Step 4: arch=[[128]], score=-0.036040
    Step 5: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128]], score=0.004998
    Step 7: arch=[[512, 512, 512, 512], [128, 128, 128, 128]], score=0.025933
    Step 8: arch=[[512, 512, 512], [256, 256, 256, 256]], score=0.020581
    Step 9: arch=[[1024, 1024], [2048, 2048], [1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[512, 512, 512, 512, 512]], score=0.014265
    Step 11: arch=[[2048, 2048, 2048, 2048, 2048], [64, 64, 64], [512, 512, 512, 512, 512]], score=-100.000000
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [64, 64], [2048, 2048, 2048], [2048], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[128, 128]], score=-0.029160
    Step 5: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[128], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=0.058913
    Step 7: arch=[[128, 128, 128], [256, 256, 256], [128, 128, 128], [256, 256]], score=0.012428
    Step 8: arch=[[128, 128, 128, 128], [1024], [128, 128], [1024]], score=0.034550
    Step 9: arch=[[512, 512, 512], [512], [512, 512, 512, 512, 512]], score=0.029171
    Step 10: arch=[[512, 512, 512, 512], [1024, 1024, 1024]], score=0.075745
    Step 11: arch=[[2048], [512, 512, 512, 512, 512], [512, 512, 512, 512, 512], [1024], [64]], score=0.120882
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64], [256, 256, 256, 256], [128, 128], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.117579
    Step 3: arch=[[64, 64], [256, 256, 256, 256, 256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64], [512, 512, 512, 512, 512], [512, 512, 512], [2048], [512, 512]], score=0.120834
    Step 5: arch=[[256], [128]], score=-0.032651
    Step 6: arch=[[256, 256, 256], [64], [256, 256, 256, 256, 256]], score=-0.004896
    Step 7: arch=[[512, 512, 512, 512, 512], [64], [64, 64, 64, 64], [128], [256, 256, 256, 256, 256]], score=0.038911
    Step 8: arch=[[256, 256, 256, 256, 256], [2048, 2048, 2048, 2048], [256, 256, 256], [256]], score=-100.000000
    Step 9: arch=[[64, 64], [128, 128, 128], [64, 64, 64], [256, 256]], score=-0.001276
    Step 10: arch=[[64, 64, 64], [256], [1024], [512, 512, 512, 512], [64, 64, 64, 64]], score=0.059456
    Step 11: arch=[[2048, 2048, 2048, 2048], [512, 512, 512], [128, 128, 128, 128], [2048, 2048, 2048], [2048]], score=-100.000000

Method: Skopt-ET
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048], [64, 64], [128], [1024, 1024], [512, 512]], score=-100.000000
    Step 4: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 5: arch=[[1024, 1024]], score=0.005183
    Step 6: arch=[[128], [1024], [128, 128, 128, 128, 128]], score=-0.021018
    Step 7: arch=[[512, 512]], score=-0.017369
    Step 8: arch=[[1024, 1024], [1024, 1024, 1024], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 9: arch=[[128], [2048, 2048, 2048, 2048, 2048], [128, 128, 128, 128], [512, 512, 512], [64]], score=-100.000000
    Step 10: arch=[[2048, 2048]], score=0.073705
    Step 11: arch=[[512, 512, 512, 512]], score=0.003720
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64, 64], [128], [1024, 1024], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256]], score=0.065480
    Step 4: arch=[[2048, 2048], [128, 128], [128], [64, 64], [1024, 1024]], score=0.108286
    Step 5: arch=[[64], [512]], score=-0.036658
    Step 6: arch=[[256, 256, 256, 256, 256], [1024], [64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [128]], score=-0.017449
    Step 8: arch=[[256, 256, 256, 256], [256, 256], [128, 128, 128, 128], [512], [1024]], score=0.039576
    Step 9: arch=[[64], [64], [2048, 2048]], score=0.037764
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=0.121761
    Step 11: arch=[[128, 128, 128, 128, 128], [1024, 1024], [256, 256, 256, 256], [1024], [2048]], score=0.119769
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 3: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256], [1024, 1024, 1024, 1024]], score=0.108267
    Step 4: arch=[[64], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024], [256, 256]], score=0.120997
    Step 5: arch=[[2048, 2048], [64], [128, 128, 128]], score=0.080032
    Step 6: arch=[[64, 64], [512, 512]], score=-0.017568
    Step 7: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 8: arch=[[256, 256, 256, 256, 256], [1024]], score=0.004679
    Step 9: arch=[[64], [2048, 2048, 2048], [512, 512, 512, 512]], score=0.122805
    Step 10: arch=[[512]], score=-0.027914
    Step 11: arch=[[64], [2048, 2048, 2048, 2048, 2048], [1024, 1024, 1024, 1024, 1024], [64, 64, 64, 64, 64], [2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048]], score=0.073705
    Step 3: arch=[[2048, 2048], [64, 64, 64]], score=0.088241
    Step 4: arch=[[2048, 2048, 2048], [64, 64, 64, 64, 64], [128, 128]], score=0.121826
    Step 5: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024], [2048], [64], [64, 64], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[1024, 1024], [512, 512]], score=0.031713
    Step 8: arch=[[2048]], score=0.004591
    Step 9: arch=[[1024, 1024], [256, 256, 256, 256, 256], [64, 64, 64], [1024, 1024, 1024], [64, 64, 64, 64, 64]], score=0.119964
    Step 10: arch=[[2048, 2048, 2048], [128], [64, 64, 64, 64, 64], [64, 64, 64, 64]], score=0.121393
    Step 11: arch=[[1024], [128, 128, 128, 128, 128], [64], [2048, 2048, 2048, 2048], [1024, 1024, 1024]], score=-100.000000
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024], [2048]], score=0.045777
    Step 3: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [128, 128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[64], [512, 512], [256, 256, 256]], score=-0.012604
    Step 5: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 6: arch=[[512, 512], [512, 512, 512, 512]], score=0.026622
    Step 7: arch=[[512, 512], [512, 512, 512], [512, 512, 512, 512]], score=0.039640
    Step 8: arch=[[512], [64, 64, 64, 64]], score=-0.007414
    Step 9: arch=[[64, 64, 64, 64, 64], [1024, 1024, 1024]], score=0.050266
    Step 10: arch=[[512, 512, 512], [2048, 2048], [64, 64, 64, 64], [256, 256], [64, 64, 64, 64, 64]], score=0.120811
    Step 11: arch=[[128, 128, 128, 128, 128], [2048, 2048, 2048], [256, 256, 256, 256, 256], [512, 512, 512, 512], [64, 64, 64, 64, 64]], score=0.125713
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64]], score=-0.030699
    Step 3: arch=[[128, 128, 128, 128, 128], [128, 128, 128, 128], [256, 256], [128, 128, 128, 128, 128]], score=0.037097
    Step 4: arch=[[1024, 1024, 1024], [1024]], score=0.056134
    Step 5: arch=[[128, 128, 128, 128, 128], [2048, 2048], [1024, 1024, 1024, 1024]], score=0.121914
    Step 6: arch=[[512, 512, 512, 512], [512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [128, 128]], score=0.123161
    Step 7: arch=[[64, 64, 64]], score=-0.024003
    Step 8: arch=[[64, 64, 64, 64, 64], [64, 64, 64], [256], [1024, 1024, 1024, 1024], [2048]], score=0.119979
    Step 9: arch=[[2048, 2048], [64, 64, 64, 64, 64], [64, 64, 64], [128, 128, 128, 128, 128]], score=0.119614
    Step 10: arch=[[2048, 2048, 2048, 2048, 2048], [1024, 1024], [512], [256]], score=-100.000000
    Step 11: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024, 1024]], score=0.119600
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128]], score=0.012863
    Step 3: arch=[[256, 256], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=0.121314
    Step 4: arch=[[2048, 2048], [64, 64, 64], [256, 256, 256, 256]], score=0.099345
    Step 5: arch=[[64, 64, 64, 64, 64], [2048, 2048, 2048, 2048], [256, 256], [256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128, 128], [64, 64, 64], [64, 64, 64, 64]], score=0.025485
    Step 7: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024], [128], [2048, 2048]], score=-100.000000
    Step 8: arch=[[64, 64], [2048, 2048], [128, 128, 128, 128, 128], [128]], score=0.086803
    Step 9: arch=[[512, 512], [512, 512, 512, 512, 512], [128, 128, 128]], score=0.044797
    Step 10: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 11: arch=[[512, 512, 512, 512]], score=0.003720
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [128, 128, 128, 128], [256, 256, 256, 256], [256, 256, 256, 256, 256], [64, 64]], score=0.029821
    Step 3: arch=[[512], [1024, 1024, 1024, 1024, 1024], [1024], [2048, 2048, 2048, 2048], [64, 64, 64]], score=-100.000000
    Step 4: arch=[[128]], score=-0.036040
    Step 5: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128]], score=0.004998
    Step 7: arch=[[512, 512, 512, 512], [128, 128, 128, 128]], score=0.025933
    Step 8: arch=[[512, 512, 512], [256, 256, 256, 256]], score=0.020581
    Step 9: arch=[[1024, 1024], [2048, 2048], [1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[512, 512, 512, 512, 512]], score=0.014265
    Step 11: arch=[[2048, 2048, 2048, 2048, 2048], [64, 64], [512, 512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [64, 64], [2048, 2048, 2048], [2048], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[128, 128]], score=-0.029160
    Step 5: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[128], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=0.058913
    Step 7: arch=[[128, 128, 128], [256, 256, 256], [128, 128, 128], [256, 256]], score=0.012428
    Step 8: arch=[[128, 128, 128, 128], [1024], [128, 128], [1024]], score=0.034550
    Step 9: arch=[[512, 512, 512], [512], [512, 512, 512, 512, 512]], score=0.029171
    Step 10: arch=[[512, 512, 512, 512], [1024, 1024, 1024]], score=0.075745
    Step 11: arch=[[64, 64], [2048, 2048, 2048]], score=0.121660
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64], [256, 256, 256, 256], [128, 128], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.117579
    Step 3: arch=[[64, 64], [256, 256, 256, 256, 256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64], [512, 512, 512, 512, 512], [512, 512, 512], [2048], [512, 512]], score=0.120834
    Step 5: arch=[[256], [128]], score=-0.032651
    Step 6: arch=[[256, 256, 256], [64], [256, 256, 256, 256, 256]], score=-0.004896
    Step 7: arch=[[512, 512, 512, 512, 512], [64], [64, 64, 64, 64], [128], [256, 256, 256, 256, 256]], score=0.038911
    Step 8: arch=[[256, 256, 256, 256, 256], [2048, 2048, 2048, 2048], [256, 256, 256], [256]], score=-100.000000
    Step 9: arch=[[64, 64], [128, 128, 128], [64, 64, 64], [256, 256]], score=-0.001276
    Step 10: arch=[[64, 64, 64], [256], [1024], [512, 512, 512, 512], [64, 64, 64, 64]], score=0.059456
    Step 11: arch=[[64], [64, 64, 64, 64], [64, 64, 64, 64, 64], [64, 64, 64, 64], [512, 512]], score=0.007974

Method: Skopt-GBRT
  Seed 0:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048], [64, 64], [128], [1024, 1024], [512, 512]], score=-100.000000
    Step 4: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 5: arch=[[1024, 1024]], score=0.005183
    Step 6: arch=[[128], [1024], [128, 128, 128, 128, 128]], score=-0.021018
    Step 7: arch=[[512, 512]], score=-0.017369
    Step 8: arch=[[1024, 1024], [1024, 1024, 1024], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 9: arch=[[128], [2048, 2048, 2048, 2048, 2048], [128, 128, 128, 128], [512, 512, 512], [64]], score=-100.000000
    Step 10: arch=[[2048, 2048]], score=0.073705
    Step 11: arch=[[1024, 1024], [128], [64, 64, 64]], score=0.011270
  Seed 1:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64, 64, 64, 64], [128], [1024, 1024], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[1024, 1024, 1024], [256, 256, 256, 256, 256]], score=0.065480
    Step 4: arch=[[2048, 2048], [128, 128], [128], [64, 64], [1024, 1024]], score=0.108286
    Step 5: arch=[[64], [512]], score=-0.036658
    Step 6: arch=[[256, 256, 256, 256, 256], [1024], [64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [128]], score=-0.017449
    Step 8: arch=[[256, 256, 256, 256], [256, 256], [128, 128, 128, 128], [512], [1024]], score=0.039576
    Step 9: arch=[[64], [64], [2048, 2048]], score=0.037764
    Step 10: arch=[[1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=0.121761
    Step 11: arch=[[1024, 1024, 1024, 1024, 1024], [2048, 2048], [128], [1024, 1024, 1024, 1024]], score=-100.000000
  Seed 2:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128]], score=-0.015400
    Step 3: arch=[[512, 512, 512, 512, 512], [256, 256, 256, 256], [128, 128, 128, 128, 128], [256, 256, 256], [1024, 1024, 1024, 1024]], score=0.108267
    Step 4: arch=[[64], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024], [256, 256]], score=0.120997
    Step 5: arch=[[2048, 2048], [64], [128, 128, 128]], score=0.080032
    Step 6: arch=[[64, 64], [512, 512]], score=-0.017568
    Step 7: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 8: arch=[[256, 256, 256, 256, 256], [1024]], score=0.004679
    Step 9: arch=[[64], [2048, 2048, 2048], [512, 512, 512, 512]], score=0.122805
    Step 10: arch=[[512]], score=-0.027914
    Step 11: arch=[[64], [2048, 2048, 2048, 2048], [512, 512, 512, 512], [1024, 1024], [2048, 2048]], score=-100.000000
  Seed 3:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048, 2048]], score=0.073705
    Step 3: arch=[[2048, 2048], [64, 64, 64]], score=0.088241
    Step 4: arch=[[2048, 2048, 2048], [64, 64, 64, 64, 64], [128, 128]], score=0.121826
    Step 5: arch=[[64, 64, 64, 64]], score=-0.017307
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024], [2048], [64], [64, 64], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[1024, 1024], [512, 512]], score=0.031713
    Step 8: arch=[[2048]], score=0.004591
    Step 9: arch=[[1024, 1024], [256, 256, 256, 256, 256], [64, 64, 64], [1024, 1024, 1024], [64, 64, 64, 64, 64]], score=0.119964
    Step 10: arch=[[2048, 2048, 2048], [128], [64, 64, 64, 64, 64], [64, 64, 64, 64]], score=0.121393
    Step 11: arch=[[64, 64, 64, 64, 64], [512, 512, 512, 512, 512], [128, 128], [128, 128, 128], [64, 64, 64, 64, 64]], score=0.067221
  Seed 4:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024], [2048]], score=0.045777
    Step 3: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [128, 128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[64], [512, 512], [256, 256, 256]], score=-0.012604
    Step 5: arch=[[128, 128, 128, 128, 128]], score=-0.008520
    Step 6: arch=[[512, 512], [512, 512, 512, 512]], score=0.026622
    Step 7: arch=[[512, 512], [512, 512, 512], [512, 512, 512, 512]], score=0.039640
    Step 8: arch=[[512], [64, 64, 64, 64]], score=-0.007414
    Step 9: arch=[[64, 64, 64, 64, 64], [1024, 1024, 1024]], score=0.050266
    Step 10: arch=[[512, 512, 512], [2048, 2048], [64, 64, 64, 64], [256, 256], [64, 64, 64, 64, 64]], score=0.120811
    Step 11: arch=[[64, 64, 64, 64, 64], [256], [256, 256, 256, 256, 256]], score=0.003913
  Seed 5:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64]], score=-0.030699
    Step 3: arch=[[128, 128, 128, 128, 128], [128, 128, 128, 128], [256, 256], [128, 128, 128, 128, 128]], score=0.037097
    Step 4: arch=[[1024, 1024, 1024], [1024]], score=0.056134
    Step 5: arch=[[128, 128, 128, 128, 128], [2048, 2048], [1024, 1024, 1024, 1024]], score=0.121914
    Step 6: arch=[[512, 512, 512, 512], [512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [128, 128]], score=0.123161
    Step 7: arch=[[64, 64, 64]], score=-0.024003
    Step 8: arch=[[64, 64, 64, 64, 64], [64, 64, 64], [256], [1024, 1024, 1024, 1024], [2048]], score=0.119979
    Step 9: arch=[[2048, 2048], [64, 64, 64, 64, 64], [64, 64, 64], [128, 128, 128, 128, 128]], score=0.119614
    Step 10: arch=[[2048, 2048, 2048, 2048, 2048], [1024, 1024], [512], [256]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048], [512], [512]], score=-100.000000
  Seed 6:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128]], score=0.012863
    Step 3: arch=[[256, 256], [1024, 1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=0.121314
    Step 4: arch=[[2048, 2048], [64, 64, 64], [256, 256, 256, 256]], score=0.099345
    Step 5: arch=[[64, 64, 64, 64, 64], [2048, 2048, 2048, 2048], [256, 256], [256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128, 128], [64, 64, 64], [64, 64, 64, 64]], score=0.025485
    Step 7: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024], [128], [2048, 2048]], score=-100.000000
    Step 8: arch=[[64, 64], [2048, 2048], [128, 128, 128, 128, 128], [128]], score=0.086803
    Step 9: arch=[[512, 512], [512, 512, 512, 512, 512], [128, 128, 128]], score=0.044797
    Step 10: arch=[[256, 256, 256, 256, 256]], score=-0.002877
    Step 11: arch=[[512, 512, 512, 512]], score=0.003720
  Seed 7:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [128, 128, 128, 128], [256, 256, 256, 256], [256, 256, 256, 256, 256], [64, 64]], score=0.029821
    Step 3: arch=[[512], [1024, 1024, 1024, 1024, 1024], [1024], [2048, 2048, 2048, 2048], [64, 64, 64]], score=-100.000000
    Step 4: arch=[[128]], score=-0.036040
    Step 5: arch=[[2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[512, 512, 512, 512], [128]], score=0.004998
    Step 7: arch=[[512, 512, 512, 512], [128, 128, 128, 128]], score=0.025933
    Step 8: arch=[[512, 512, 512], [256, 256, 256, 256]], score=0.020581
    Step 9: arch=[[1024, 1024], [2048, 2048], [1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 10: arch=[[512, 512, 512, 512, 512]], score=0.014265
    Step 11: arch=[[256, 256, 256, 256, 256], [64, 64, 64], [256, 256, 256, 256, 256], [64, 64]], score=0.027163
  Seed 8:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64, 64], [64, 64], [2048, 2048, 2048], [2048], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[128, 128]], score=-0.029160
    Step 5: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[128], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=0.058913
    Step 7: arch=[[128, 128, 128], [256, 256, 256], [128, 128, 128], [256, 256]], score=0.012428
    Step 8: arch=[[128, 128, 128, 128], [1024], [128, 128], [1024]], score=0.034550
    Step 9: arch=[[512, 512, 512], [512], [512, 512, 512, 512, 512]], score=0.029171
    Step 10: arch=[[512, 512, 512, 512], [1024, 1024, 1024]], score=0.075745
    Step 11: arch=[[128, 128, 128, 128, 128]], score=-0.008520
  Seed 9:
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[64], [256, 256, 256, 256], [128, 128], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=0.117579
    Step 3: arch=[[64, 64], [256, 256, 256, 256, 256], [64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[64], [512, 512, 512, 512, 512], [512, 512, 512], [2048], [512, 512]], score=0.120834
    Step 5: arch=[[256], [128]], score=-0.032651
    Step 6: arch=[[256, 256, 256], [64], [256, 256, 256, 256, 256]], score=-0.004896
    Step 7: arch=[[512, 512, 512, 512, 512], [64], [64, 64, 64, 64], [128], [256, 256, 256, 256, 256]], score=0.038911
    Step 8: arch=[[256, 256, 256, 256, 256], [2048, 2048, 2048, 2048], [256, 256, 256], [256]], score=-100.000000
    Step 9: arch=[[64, 64], [128, 128, 128], [64, 64, 64], [256, 256]], score=-0.001276
    Step 10: arch=[[64, 64, 64], [256], [1024], [512, 512, 512, 512], [64, 64, 64, 64]], score=0.059456
    Step 11: arch=[[1024, 1024], [2048, 2048], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=-100.000000


