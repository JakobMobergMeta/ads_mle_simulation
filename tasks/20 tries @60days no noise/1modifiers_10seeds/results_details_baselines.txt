Reults Details:

=== Modifiers: config_01 ===
Method: Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64, 64], [16], [16, 16, 16, 16], [16, 16], [32, 32, 32]], score=0.000789
    Step 2: arch=[[512], [2048, 2048, 2048, 2048, 2048], [128, 128], [4], [512, 512]], score=-100.000000
    Step 3: arch=[[32, 32], [2, 2, 2, 2], [64, 64, 64, 64], [8], [512, 512, 512, 512]], score=0.009407
    Step 4: arch=[[16, 16], [16, 16, 16, 16], [4], [1024, 1024], [2048]], score=0.081275
    Step 5: arch=[[256, 256, 256, 256, 256], [4096, 4096, 4096, 4096], [256, 256, 256], [8, 8, 8, 8, 8], [2]], score=-100.000000
    Step 6: arch=[[64, 64, 64, 64, 64], [32], [32, 32], [2048, 2048], [512, 512, 512]], score=-100.000000
    Step 7: arch=[[4, 4], [1024, 1024], [128, 128, 128, 128], [8, 8, 8, 8], [2, 2, 2, 2]], score=0.023822
    Step 8: arch=[[64, 64, 64, 64], [1024, 1024, 1024, 1024, 1024], [32, 32, 32], [32, 32, 32, 32], [32, 32, 32, 32, 32]], score=0.119850
    Step 9: arch=[[8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [32], [2048, 2048, 2048, 2048], [4]], score=-100.000000
    Step 10: arch=[[16, 16], [64], [4], [32, 32, 32], [2, 2, 2]], score=-0.021869
    Step 11: arch=[[8, 8, 8, 8], [2, 2, 2], [2, 2], [8, 8, 8], [2048, 2048, 2048, 2048]], score=0.110795
    Step 12: arch=[[8, 8, 8, 8], [8, 8], [4096, 4096, 4096, 4096], [8, 8, 8, 8], [32, 32, 32, 32]], score=-100.000000
    Step 13: arch=[[8, 8], [1024, 1024, 1024, 1024], [4, 4, 4], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512]], score=-100.000000
    Step 14: arch=[[8, 8, 8, 8], [2, 2, 2, 2], [128], [128], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 15: arch=[[512, 512, 512, 512], [512, 512, 512, 512, 512], [8], [8, 8, 8, 8], [2, 2, 2, 2]], score=0.074994
    Step 16: arch=[[512], [512, 512, 512, 512], [8, 8, 8], [32], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 17: arch=[[32], [4096, 4096, 4096, 4096], [128, 128, 128, 128, 128], [4096, 4096], [2]], score=-100.000000
    Step 18: arch=[[64], [2, 2], [1024, 1024, 1024, 1024, 1024], [4, 4, 4, 4], [2]], score=0.026673
    Step 19: arch=[[4096, 4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024], [512], [8, 8], [128]], score=-100.000000
    Step 20: arch=[[128, 128, 128, 128], [4, 4], [512, 512, 512, 512, 512], [16], [16, 16, 16]], score=0.018189
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[8192, 8192, 8192, 8192], [1024], [64, 64, 64, 64], [2], [8192, 8192]], score=-100.000000
    Step 2: arch=[[128, 128, 128, 128, 128], [8, 8], [64, 64, 64, 64, 64], [32, 32, 32], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[8192, 8192, 8192], [32, 32, 32], [4, 4], [128], [1024, 1024]], score=-100.000000
    Step 4: arch=[[4, 4], [8192], [512, 512], [16], [1024, 1024, 1024]], score=0.100654
    Step 5: arch=[[256], [128, 128, 128, 128], [1024, 1024], [32, 32, 32, 32], [4]], score=0.030310
    Step 6: arch=[[8192, 8192, 8192, 8192], [32, 32, 32], [16], [8, 8], [32]], score=-100.000000
    Step 7: arch=[[8, 8], [1024, 1024, 1024], [128], [16, 16], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[16, 16], [2], [2048, 2048, 2048], [256, 256], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 9: arch=[[2, 2, 2], [256], [4, 4], [2, 2, 2, 2], [128]], score=-0.017827
    Step 10: arch=[[64, 64, 64, 64, 64], [8192, 8192, 8192], [64, 64, 64, 64], [256, 256, 256, 256], [4096]], score=-100.000000
    Step 11: arch=[[4096, 4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [1024, 1024, 1024, 1024, 1024], [8192], [2, 2, 2]], score=-100.000000
    Step 12: arch=[[256, 256, 256], [4, 4, 4, 4, 4], [512, 512], [8192, 8192, 8192], [2, 2, 2, 2, 2]], score=-100.000000
    Step 13: arch=[[4, 4, 4, 4, 4], [1024, 1024, 1024, 1024, 1024], [8], [4, 4, 4, 4], [8192, 8192, 8192]], score=-100.000000
    Step 14: arch=[[256, 256, 256, 256, 256], [2048, 2048, 2048], [1024], [128, 128, 128], [256, 256, 256]], score=-100.000000
    Step 15: arch=[[128], [2048, 2048], [128, 128, 128, 128, 128], [128], [8, 8]], score=0.087850
    Step 16: arch=[[64, 64], [2048, 2048, 2048, 2048, 2048], [256], [1024], [1024]], score=-100.000000
    Step 17: arch=[[1024, 1024, 1024, 1024], [32, 32], [4096, 4096, 4096, 4096, 4096], [4096], [4096]], score=-100.000000
    Step 18: arch=[[8, 8], [64, 64, 64, 64, 64], [64], [4096], [4, 4]], score=0.121302
    Step 19: arch=[[256], [8192], [16, 16, 16], [8, 8, 8, 8, 8], [4096]], score=0.063677
    Step 20: arch=[[64, 64, 64, 64], [8, 8], [16, 16, 16, 16, 16], [128], [8192]], score=0.062338
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[512], [8, 8, 8, 8], [512, 512, 512, 512], [4, 4, 4], [64, 64, 64, 64]], score=0.025474
    Step 2: arch=[[32, 32, 32], [32, 32, 32, 32, 32], [128, 128, 128, 128], [2048, 2048, 2048, 2048, 2048], [16, 16, 16, 16]], score=-100.000000
    Step 3: arch=[[4, 4, 4], [8192, 8192, 8192], [64, 64, 64, 64], [32], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 4: arch=[[2, 2, 2], [8192, 8192, 8192, 8192, 8192], [32, 32, 32], [4, 4, 4], [8]], score=-100.000000
    Step 5: arch=[[1024, 1024, 1024], [256], [128, 128], [2048], [1024, 1024]], score=-100.000000
    Step 6: arch=[[8192, 8192], [16, 16, 16], [4096], [2048], [512, 512, 512]], score=-100.000000
    Step 7: arch=[[2048, 2048, 2048, 2048, 2048], [8], [1024, 1024, 1024, 1024, 1024], [512, 512, 512, 512], [4, 4, 4]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512, 512], [128, 128], [64, 64], [8, 8], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32], [512, 512, 512], [16, 16, 16], [2, 2, 2, 2], [64]], score=0.016307
    Step 10: arch=[[64, 64, 64, 64], [2, 2, 2, 2], [128], [64, 64, 64], [4, 4, 4, 4]], score=0.020313
    Step 11: arch=[[256, 256, 256], [32, 32, 32, 32], [128, 128, 128, 128], [4, 4, 4, 4], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 12: arch=[[2, 2, 2, 2], [2048], [32, 32, 32, 32, 32], [8, 8, 8, 8], [256, 256]], score=-0.000547
    Step 13: arch=[[1024, 1024], [4, 4, 4], [2, 2, 2, 2], [512, 512], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 14: arch=[[4096, 4096], [256], [64], [2048, 2048, 2048, 2048], [64, 64, 64]], score=-100.000000
    Step 15: arch=[[4, 4, 4], [8192, 8192, 8192, 8192], [4, 4, 4, 4], [4096], [4096]], score=-100.000000
    Step 16: arch=[[4096, 4096], [256, 256, 256, 256], [1024], [2048, 2048, 2048, 2048, 2048], [64, 64]], score=-100.000000
    Step 17: arch=[[8, 8], [2048], [32], [4, 4, 4, 4], [64]], score=-0.025084
    Step 18: arch=[[64, 64], [8, 8, 8, 8, 8], [256], [4096, 4096, 4096, 4096], [32, 32, 32]], score=-100.000000
    Step 19: arch=[[128], [512, 512, 512, 512], [8192], [16, 16], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 20: arch=[[8, 8, 8, 8], [64, 64, 64], [8192, 8192, 8192, 8192, 8192], [8192, 8192], [64]], score=-100.000000
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[512, 512, 512], [16, 16], [512], [64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[1024, 1024, 1024, 1024], [2048, 2048], [32], [256, 256, 256, 256, 256], [2048]], score=-100.000000
    Step 3: arch=[[2048, 2048], [8, 8, 8], [4, 4, 4, 4, 4], [2048, 2048, 2048, 2048], [4]], score=-100.000000
    Step 4: arch=[[512, 512, 512], [256, 256, 256, 256], [4096], [4096, 4096], [64]], score=-100.000000
    Step 5: arch=[[4, 4, 4, 4, 4], [8192, 8192, 8192, 8192, 8192], [2], [8, 8], [64, 64, 64, 64, 64]], score=-100.000000
    Step 6: arch=[[512], [4, 4], [64, 64], [4096, 4096, 4096], [32, 32, 32, 32, 32]], score=-100.000000
    Step 7: arch=[[4096, 4096, 4096, 4096], [2], [2], [8, 8, 8], [256, 256, 256, 256]], score=-100.000000
    Step 8: arch=[[64], [4], [4, 4, 4, 4, 4], [8, 8, 8, 8, 8], [8192, 8192, 8192]], score=-100.000000
    Step 9: arch=[[2048, 2048, 2048, 2048, 2048], [8192], [4096], [128, 128, 128], [32]], score=-100.000000
    Step 10: arch=[[4, 4, 4, 4], [512, 512], [256], [2], [4, 4]], score=0.001450
    Step 11: arch=[[512, 512, 512, 512, 512], [32, 32, 32, 32], [2, 2, 2], [8192], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 12: arch=[[4096, 4096, 4096, 4096, 4096], [2, 2, 2, 2], [8], [4, 4, 4], [8, 8, 8, 8]], score=-100.000000
    Step 13: arch=[[4, 4, 4, 4, 4], [8, 8, 8], [32, 32, 32, 32], [128, 128], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 14: arch=[[4, 4], [2, 2, 2, 2], [8192, 8192, 8192, 8192, 8192], [2, 2, 2, 2, 2], [64, 64, 64, 64]], score=-100.000000
    Step 15: arch=[[512, 512, 512, 512], [512, 512, 512, 512, 512], [8192], [32, 32, 32, 32], [2048, 2048]], score=-100.000000
    Step 16: arch=[[8192, 8192, 8192], [256, 256, 256, 256, 256], [2048, 2048], [1024, 1024], [8192]], score=-100.000000
    Step 17: arch=[[32, 32, 32, 32, 32], [512, 512, 512], [2048, 2048, 2048, 2048, 2048], [32], [4, 4, 4, 4, 4]], score=-100.000000
    Step 18: arch=[[2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [4], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 19: arch=[[4096, 4096, 4096, 4096, 4096], [8192, 8192], [16, 16], [1024, 1024, 1024, 1024, 1024], [512]], score=-100.000000
    Step 20: arch=[[32, 32, 32, 32, 32], [512, 512, 512], [8192, 8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048], [16, 16, 16, 16]], score=-100.000000
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256, 256], [512, 512], [8], [2048, 2048], [256, 256, 256, 256, 256]], score=-100.000000
    Step 2: arch=[[512, 512], [8, 8, 8, 8, 8], [128, 128, 128, 128, 128], [32, 32, 32], [2, 2, 2, 2]], score=0.031939
    Step 3: arch=[[128, 128], [8], [4], [2048, 2048, 2048], [512]], score=-100.000000
    Step 4: arch=[[2048, 2048, 2048, 2048], [2, 2], [16, 16, 16, 16, 16], [16, 16, 16], [1024, 1024, 1024]], score=-100.000000
    Step 5: arch=[[4, 4, 4], [4], [1024, 1024], [2, 2, 2, 2], [256, 256, 256, 256, 256]], score=0.028876
    Step 6: arch=[[128, 128, 128], [4096, 4096, 4096, 4096], [8], [256, 256, 256], [8, 8]], score=-100.000000
    Step 7: arch=[[2, 2, 2, 2], [4096, 4096, 4096, 4096, 4096], [4096, 4096, 4096, 4096], [512, 512, 512, 512], [64, 64]], score=-100.000000
    Step 8: arch=[[4096], [128, 128, 128], [32], [512, 512, 512, 512], [512, 512, 512, 512, 512]], score=0.120172
    Step 9: arch=[[1024, 1024], [8, 8, 8, 8, 8], [16, 16, 16, 16], [256, 256, 256, 256, 256], [8192]], score=0.120173
    Step 10: arch=[[16], [64, 64, 64, 64], [2048, 2048, 2048, 2048, 2048], [4096, 4096], [8192, 8192]], score=-100.000000
    Step 11: arch=[[128, 128, 128, 128], [2048], [256], [4096], [32, 32, 32, 32, 32]], score=0.122815
    Step 12: arch=[[256], [4, 4, 4], [512, 512, 512], [4], [16, 16, 16, 16, 16]], score=0.007006
    Step 13: arch=[[16, 16], [32, 32, 32], [256], [2048, 2048, 2048, 2048], [128, 128]], score=-100.000000
    Step 14: arch=[[16, 16], [8, 8, 8], [32, 32], [4096, 4096, 4096, 4096, 4096], [2, 2, 2, 2]], score=-100.000000
    Step 15: arch=[[1024], [2048, 2048], [8], [8, 8, 8, 8, 8], [2, 2, 2, 2]], score=-100.000000
    Step 16: arch=[[128, 128, 128, 128], [1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2, 2], [8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 17: arch=[[512, 512, 512, 512, 512], [16, 16, 16], [16, 16, 16, 16], [4, 4], [512, 512, 512, 512, 512]], score=0.055086
    Step 18: arch=[[8192, 8192, 8192, 8192], [8], [2048, 2048, 2048, 2048, 2048], [1024, 1024], [1024]], score=-100.000000
    Step 19: arch=[[4, 4, 4, 4], [16, 16, 16], [1024, 1024, 1024], [8192, 8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 20: arch=[[256, 256, 256], [64, 64], [1024, 1024, 1024], [128, 128], [8192]], score=0.099696
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[128, 128, 128, 128], [1024], [32], [2, 2, 2, 2], [256]], score=-0.003722
    Step 2: arch=[[4, 4, 4, 4, 4], [4096], [4096, 4096, 4096, 4096, 4096], [32, 32], [1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048], [1024, 1024], [8, 8], [64], [2, 2, 2]], score=-100.000000
    Step 4: arch=[[32], [1024, 1024, 1024, 1024, 1024], [4096, 4096, 4096, 4096], [32, 32, 32], [16, 16]], score=-100.000000
    Step 5: arch=[[8, 8, 8, 8], [64, 64], [8192, 8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[256, 256], [4096, 4096, 4096, 4096], [4, 4, 4, 4], [64, 64], [2048]], score=-100.000000
    Step 7: arch=[[128, 128], [64], [4096, 4096, 4096], [128], [512, 512, 512, 512]], score=-100.000000
    Step 8: arch=[[8192], [64, 64, 64, 64, 64], [2, 2, 2], [2, 2, 2, 2], [512]], score=0.122055
    Step 9: arch=[[8192, 8192, 8192], [64, 64, 64, 64], [128, 128], [64, 64, 64, 64, 64], [8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[512, 512, 512, 512], [4], [128, 128, 128, 128, 128], [32, 32, 32, 32], [512, 512]], score=0.028366
    Step 11: arch=[[8], [4096, 4096, 4096, 4096, 4096], [32, 32, 32], [128, 128], [16, 16, 16]], score=-100.000000
    Step 12: arch=[[4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16, 16], [32, 32], [16, 16, 16], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 13: arch=[[2, 2, 2, 2, 2], [8192, 8192, 8192], [8, 8], [1024, 1024, 1024], [2, 2, 2, 2]], score=-100.000000
    Step 14: arch=[[512], [1024, 1024, 1024, 1024], [32, 32, 32, 32, 32], [512, 512, 512, 512], [128, 128, 128]], score=0.119733
    Step 15: arch=[[512, 512, 512, 512, 512], [64], [4096, 4096, 4096, 4096], [32, 32, 32, 32], [8]], score=-100.000000
    Step 16: arch=[[4, 4, 4], [4, 4, 4, 4], [256, 256], [128, 128, 128], [128, 128, 128, 128]], score=0.021999
    Step 17: arch=[[2], [4, 4], [2, 2], [256], [32, 32]], score=-0.021318
    Step 18: arch=[[4096, 4096], [8, 8, 8, 8, 8], [256, 256], [32, 32, 32, 32, 32], [8, 8, 8]], score=-100.000000
    Step 19: arch=[[8, 8], [4, 4, 4, 4], [32, 32, 32], [2, 2], [8, 8]], score=-0.005881
    Step 20: arch=[[512, 512, 512, 512], [64, 64, 64], [64, 64, 64], [16, 16, 16, 16, 16], [1024, 1024, 1024]], score=0.059750
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024], [32, 32, 32, 32], [2048, 2048, 2048], [1024], [4096, 4096]], score=-100.000000
    Step 2: arch=[[2048, 2048], [8192, 8192], [4, 4, 4, 4, 4], [8], [32, 32, 32, 32, 32]], score=-100.000000
    Step 3: arch=[[8, 8, 8, 8], [1024, 1024, 1024], [4096, 4096, 4096], [32, 32], [8]], score=-100.000000
    Step 4: arch=[[16, 16, 16], [8192, 8192, 8192, 8192, 8192], [1024, 1024, 1024, 1024], [2048, 2048, 2048], [64]], score=-100.000000
    Step 5: arch=[[2048, 2048, 2048], [16, 16, 16], [4, 4, 4, 4], [16, 16, 16], [4096, 4096]], score=-100.000000
    Step 6: arch=[[512, 512], [2048], [256, 256, 256, 256], [4096, 4096, 4096, 4096, 4096], [4]], score=-100.000000
    Step 7: arch=[[8, 8, 8, 8, 8], [4, 4, 4, 4, 4], [128, 128, 128, 128], [1024, 1024], [2, 2, 2, 2, 2]], score=0.088595
    Step 8: arch=[[512, 512, 512], [4, 4], [8, 8, 8], [64, 64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[4, 4, 4, 4, 4], [128, 128, 128, 128], [4, 4, 4, 4], [1024, 1024, 1024, 1024, 1024], [8192]], score=-100.000000
    Step 10: arch=[[2048, 2048, 2048], [32, 32, 32], [1024, 1024, 1024], [8, 8, 8, 8, 8], [4096, 4096, 4096]], score=-100.000000
    Step 11: arch=[[8192, 8192, 8192, 8192, 8192], [64, 64, 64, 64, 64], [8192, 8192, 8192, 8192, 8192], [8192, 8192], [4096, 4096]], score=-100.000000
    Step 12: arch=[[8, 8, 8, 8, 8], [512], [2], [8192, 8192, 8192], [512, 512, 512, 512, 512]], score=-100.000000
    Step 13: arch=[[8, 8], [8192], [256], [64, 64, 64, 64], [4, 4, 4, 4]], score=0.039463
    Step 14: arch=[[64], [4096, 4096], [128, 128, 128], [256, 256, 256, 256], [64, 64, 64, 64]], score=-100.000000
    Step 15: arch=[[512, 512, 512, 512], [2048, 2048, 2048, 2048], [16, 16], [2], [256, 256, 256, 256, 256]], score=-100.000000
    Step 16: arch=[[16], [8, 8, 8, 8], [16, 16, 16, 16, 16], [1024, 1024, 1024, 1024, 1024], [512]], score=-100.000000
    Step 17: arch=[[8, 8, 8, 8], [128, 128], [512], [2, 2], [4]], score=0.001255
    Step 18: arch=[[64], [8192, 8192], [64], [8192, 8192], [8192, 8192]], score=-100.000000
    Step 19: arch=[[8, 8], [1024, 1024], [128, 128, 128, 128], [2048, 2048, 2048, 2048, 2048], [32]], score=-100.000000
    Step 20: arch=[[128, 128, 128], [8192, 8192, 8192], [8192, 8192], [1024, 1024, 1024], [2, 2, 2]], score=-100.000000
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024, 1024, 1024], [16, 16, 16, 16], [1024, 1024, 1024, 1024, 1024], [1024], [2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[256], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [256, 256, 256, 256], [128, 128, 128]], score=0.025229
    Step 3: arch=[[8192, 8192, 8192, 8192], [64, 64, 64, 64, 64], [512], [4096], [8]], score=-100.000000
    Step 4: arch=[[1024], [1024, 1024, 1024, 1024, 1024], [16, 16, 16, 16], [16], [4]], score=0.119769
    Step 5: arch=[[2], [8192, 8192, 8192, 8192, 8192], [256, 256, 256, 256, 256], [1024, 1024, 1024], [2, 2, 2, 2]], score=-100.000000
    Step 6: arch=[[256, 256, 256, 256, 256], [64], [16, 16, 16, 16, 16], [16, 16], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 7: arch=[[16, 16], [32, 32, 32, 32], [4, 4, 4, 4], [1024, 1024, 1024, 1024], [4, 4]], score=-100.000000
    Step 8: arch=[[16, 16, 16], [8, 8, 8], [4096, 4096, 4096, 4096], [2, 2, 2], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 9: arch=[[1024, 1024], [16, 16, 16, 16, 16], [32, 32, 32, 32, 32], [4096, 4096, 4096, 4096, 4096], [2, 2, 2, 2]], score=-100.000000
    Step 10: arch=[[4096, 4096, 4096, 4096, 4096], [2048], [128, 128, 128], [256, 256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 11: arch=[[8192, 8192, 8192, 8192], [512, 512, 512, 512, 512], [4096, 4096, 4096, 4096, 4096], [2048, 2048], [32, 32, 32, 32, 32]], score=-100.000000
    Step 12: arch=[[1024, 1024], [2, 2, 2], [128, 128, 128, 128, 128], [8192, 8192, 8192], [8]], score=-100.000000
    Step 13: arch=[[2048, 2048, 2048, 2048], [4, 4, 4, 4, 4], [4, 4, 4], [128, 128], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 14: arch=[[8192], [256, 256], [4096, 4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024, 1024], [128, 128, 128, 128]], score=-100.000000
    Step 15: arch=[[4], [8192, 8192, 8192, 8192], [16], [8192, 8192], [32, 32, 32, 32, 32]], score=-100.000000
    Step 16: arch=[[1024, 1024, 1024], [4096, 4096, 4096, 4096], [8192, 8192, 8192], [64], [2, 2, 2, 2]], score=-100.000000
    Step 17: arch=[[512, 512], [4096, 4096, 4096, 4096, 4096], [2048, 2048], [8], [256]], score=-100.000000
    Step 18: arch=[[1024, 1024, 1024], [64, 64], [4, 4, 4, 4], [2], [4, 4]], score=0.038465
    Step 19: arch=[[64, 64], [8, 8, 8, 8], [2048], [32, 32, 32], [4096, 4096, 4096]], score=-100.000000
    Step 20: arch=[[512, 512, 512, 512, 512], [32, 32], [8192, 8192], [128, 128, 128, 128], [8192, 8192, 8192]], score=-100.000000
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[32, 32, 32, 32], [1024, 1024], [512, 512, 512], [512, 512, 512, 512], [64]], score=0.079745
    Step 2: arch=[[4, 4, 4, 4, 4], [2048, 2048, 2048, 2048], [8192, 8192, 8192, 8192], [8, 8], [8, 8, 8, 8]], score=-100.000000
    Step 3: arch=[[1024], [32, 32, 32, 32], [2048, 2048, 2048, 2048], [2048, 2048], [128, 128, 128]], score=-100.000000
    Step 4: arch=[[64, 64], [4096, 4096], [4096, 4096, 4096, 4096, 4096], [128, 128, 128, 128], [64, 64, 64, 64, 64]], score=-100.000000
    Step 5: arch=[[8192], [2048, 2048, 2048, 2048, 2048], [256], [128, 128, 128], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 6: arch=[[1024], [128, 128, 128, 128, 128], [32, 32, 32, 32], [8, 8, 8, 8], [128, 128, 128]], score=0.032684
    Step 7: arch=[[1024, 1024, 1024], [1024], [256, 256, 256], [8, 8], [16, 16, 16]], score=0.077244
    Step 8: arch=[[2, 2, 2, 2], [2, 2], [128], [256, 256], [256, 256, 256, 256, 256]], score=0.018669
    Step 9: arch=[[32, 32], [8], [512, 512, 512], [64, 64, 64, 64, 64], [16, 16, 16]], score=0.005603
    Step 10: arch=[[4096, 4096, 4096, 4096], [8192, 8192, 8192, 8192], [256], [256, 256], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 11: arch=[[2], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16, 16], [1024], [4096]], score=-100.000000
    Step 12: arch=[[4, 4, 4], [128, 128, 128], [512, 512, 512, 512], [1024, 1024, 1024], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[16, 16], [2, 2, 2, 2, 2], [8192], [128], [4]], score=0.123632
    Step 14: arch=[[512], [64, 64], [2048, 2048, 2048, 2048, 2048], [8, 8, 8], [8, 8, 8, 8, 8]], score=-100.000000
    Step 15: arch=[[2, 2, 2], [16, 16, 16, 16, 16], [32, 32, 32], [64, 64], [16, 16, 16, 16]], score=0.016512
    Step 16: arch=[[8192], [128, 128, 128, 128, 128], [32], [512, 512], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 17: arch=[[8], [2048, 2048, 2048, 2048], [2048, 2048, 2048], [1024, 1024, 1024, 1024], [8192, 8192, 8192]], score=-100.000000
    Step 18: arch=[[1024, 1024, 1024], [8192, 8192, 8192], [8192, 8192, 8192], [4, 4, 4, 4], [1024, 1024]], score=-100.000000
    Step 19: arch=[[8192, 8192, 8192, 8192], [8], [2], [64, 64], [8192, 8192, 8192]], score=-100.000000
    Step 20: arch=[[8, 8, 8, 8], [64, 64, 64, 64, 64], [4, 4], [1024], [512, 512, 512, 512, 512]], score=0.077527
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64, 64], [4096], [128, 128], [4096, 4096, 4096, 4096, 4096], [2048]], score=-100.000000
    Step 2: arch=[[512, 512], [4, 4, 4, 4], [2, 2, 2, 2, 2], [4096, 4096, 4096, 4096, 4096], [2048]], score=-100.000000
    Step 3: arch=[[2048], [512, 512, 512, 512, 512], [8, 8, 8, 8, 8], [4], [16]], score=0.081725
    Step 4: arch=[[64, 64, 64, 64], [128, 128, 128, 128], [2, 2], [4], [4096]], score=0.026890
    Step 5: arch=[[4, 4, 4], [2048, 2048, 2048, 2048, 2048], [512, 512, 512], [64, 64, 64, 64, 64], [32, 32, 32, 32]], score=-100.000000
    Step 6: arch=[[2, 2, 2], [512, 512, 512], [32], [512, 512, 512, 512, 512], [512, 512, 512, 512]], score=0.062849
    Step 7: arch=[[4096, 4096, 4096, 4096, 4096], [2], [8, 8], [8192, 8192, 8192, 8192], [256, 256, 256, 256]], score=-100.000000
    Step 8: arch=[[2, 2, 2], [128, 128, 128, 128, 128], [8, 8, 8], [16, 16, 16], [2048, 2048]], score=0.054812
    Step 9: arch=[[4, 4, 4], [2, 2, 2, 2], [2, 2], [2, 2, 2], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[2], [256, 256, 256, 256], [2, 2, 2, 2], [32, 32, 32], [2, 2, 2, 2]], score=0.003499
    Step 11: arch=[[128, 128], [256, 256, 256, 256, 256], [256, 256], [128, 128, 128, 128, 128], [64, 64, 64]], score=0.035601
    Step 12: arch=[[2], [64, 64], [256, 256, 256, 256], [8192], [128, 128, 128, 128]], score=-100.000000
    Step 13: arch=[[8, 8], [64, 64, 64, 64, 64], [1024], [64], [64, 64, 64]], score=0.027830
    Step 14: arch=[[16, 16, 16], [4, 4, 4, 4], [512, 512], [128], [4]], score=0.011713
    Step 15: arch=[[2, 2, 2], [2048, 2048], [128, 128, 128, 128], [2, 2, 2], [8, 8, 8, 8, 8]], score=0.101201
    Step 16: arch=[[4096], [4], [32, 32, 32], [4096, 4096, 4096], [4]], score=-100.000000
    Step 17: arch=[[1024, 1024, 1024, 1024, 1024], [16, 16, 16, 16], [1024, 1024], [8, 8, 8, 8, 8], [256, 256]], score=0.120308
    Step 18: arch=[[512, 512], [2048, 2048, 2048], [256, 256], [32, 32, 32, 32], [16, 16, 16]], score=-100.000000
    Step 19: arch=[[16, 16, 16], [2048, 2048], [2048, 2048, 2048], [128, 128, 128, 128], [4, 4, 4, 4]], score=-100.000000
    Step 20: arch=[[8192, 8192, 8192], [1024, 1024, 1024, 1024, 1024], [4096, 4096, 4096, 4096], [8192, 8192, 8192], [16, 16]], score=-100.000000

Method: SimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.003361
    Step 4: arch=[[256, 256], [512, 512], [256], [64, 64], [64]], score=0.001411
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.003361
    Step 6: arch=[[256, 256], [2048, 2048], [256, 256], [64, 64], [64]], score=0.105960
    Step 7: arch=[[256, 256], [16, 16, 16, 16, 16], [256, 256], [64, 64], [64]], score=0.010881
    Step 8: arch=[[256, 256, 256], [16, 16, 16, 16, 16], [256, 256], [64, 64], [64]], score=0.018494
    Step 9: arch=[[256, 256, 256], [16, 16, 16, 16, 16], [256, 256], [16, 16], [64]], score=0.016321
    Step 10: arch=[[256, 256, 256], [4, 4, 4, 4, 4], [256, 256], [16, 16], [64]], score=0.016132
    Step 11: arch=[[256, 256, 256], [4, 4, 4, 4, 4], [256, 256], [32, 32], [64]], score=0.016851
    Step 12: arch=[[128, 128, 128], [4, 4, 4, 4, 4], [256, 256], [32, 32], [64]], score=0.012838
    Step 13: arch=[[128, 128, 128], [4, 4, 4, 4, 4], [256, 256], [32, 32], [64, 64]], score=0.016184
    Step 14: arch=[[512, 512, 512], [4, 4, 4, 4, 4], [256, 256], [32, 32], [64, 64]], score=0.031165
    Step 15: arch=[[512, 512, 512], [128, 128, 128, 128], [256, 256], [32, 32], [64, 64]], score=0.028238
    Step 16: arch=[[512, 512, 512], [128, 128, 128, 128], [256, 256], [16, 16], [64, 64]], score=0.027519
    Step 17: arch=[[512, 512, 512], [128, 128, 128, 128], [512, 512], [16, 16], [64, 64]], score=0.035605
    Step 18: arch=[[512, 512, 512], [128, 128, 128, 128], [512, 512], [16, 16], [16, 16]], score=0.035270
    Step 19: arch=[[512, 512, 512], [128, 128, 128, 128], [512, 512], [16, 16], [4, 4]], score=0.035191
    Step 20: arch=[[2048, 2048, 2048], [128, 128, 128, 128], [512, 512], [16, 16], [4, 4]], score=-100.000000
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512], [256, 256], [64], [64]], score=-0.012115
    Step 4: arch=[[8192, 8192], [512], [256, 256], [64], [64]], score=-100.000000
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 6: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.003361
    Step 7: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [256]], score=0.004746
    Step 8: arch=[[512, 512], [512, 512], [256, 256], [64, 64], [256]], score=0.016688
    Step 9: arch=[[512, 512], [512, 512, 512], [256, 256], [64, 64], [256]], score=0.028651
    Step 10: arch=[[512, 512], [512, 512, 512], [256, 256], [16, 16], [256]], score=0.026326
    Step 11: arch=[[512, 512], [512, 512, 512], [256, 256], [32, 32], [256]], score=0.027096
    Step 12: arch=[[2048, 2048], [512, 512, 512], [256, 256], [32, 32], [256]], score=-100.000000
    Step 13: arch=[[512, 512], [512, 512, 512], [256, 256], [32, 32, 32], [256]], score=0.030424
    Step 14: arch=[[512, 512], [512, 512, 512], [256, 256, 256], [32, 32, 32], [256]], score=0.032376
    Step 15: arch=[[16, 16], [512, 512, 512], [256, 256, 256], [32, 32, 32], [256]], score=0.011111
    Step 16: arch=[[16, 16], [512, 512, 512], [256, 256, 256], [32, 32, 32], [1024]], score=0.016256
    Step 17: arch=[[8], [512, 512, 512], [256, 256, 256], [32, 32, 32], [1024]], score=0.009331
    Step 18: arch=[[8], [2048, 2048, 2048], [256, 256, 256], [32, 32, 32], [1024]], score=-100.000000
    Step 19: arch=[[16], [512, 512, 512], [256, 256, 256], [32, 32, 32], [1024]], score=0.009618
    Step 20: arch=[[16], [512, 512, 512], [256, 256, 256], [32, 32, 32, 32], [1024]], score=0.012945
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [128], [64]], score=0.002836
    Step 4: arch=[[256, 256], [512, 512], [256, 256], [512], [64]], score=0.019837
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [512], [128]], score=0.020781
    Step 6: arch=[[256, 256], [512, 512], [1024, 1024], [512], [128]], score=0.057826
    Step 7: arch=[[256, 256], [512, 512], [1024], [512], [128]], score=0.051728
    Step 8: arch=[[256, 256], [512, 512], [1024], [512, 512], [128]], score=0.057603
    Step 9: arch=[[256, 256], [512, 512], [1024], [512, 512], [64]], score=0.056720
    Step 10: arch=[[256, 256], [8], [1024], [512, 512], [64]], score=0.029465
    Step 11: arch=[[256, 256, 256], [8], [1024], [512, 512], [64]], score=0.037079
    Step 12: arch=[[256, 256, 256], [8, 8], [1024], [512, 512], [64]], score=0.043715
    Step 13: arch=[[256, 256, 256], [8, 8], [1024], [512], [64]], score=0.037822
    Step 14: arch=[[256, 256, 256], [8, 8], [1024], [512], [32]], score=0.037371
    Step 15: arch=[[256, 256, 256], [8, 8], [1024], [512, 512], [32]], score=0.043272
    Step 16: arch=[[256, 256, 256], [8, 8, 8], [1024], [512, 512], [32]], score=0.049908
    Step 17: arch=[[256, 256, 256], [8, 8, 8], [1024], [512, 512, 512], [32]], score=0.055809
    Step 18: arch=[[256, 256, 256], [8, 8, 8], [1024], [512, 512, 512, 512], [32]], score=0.061710
    Step 19: arch=[[256, 256, 256], [8, 8, 8], [1024], [128, 128, 128, 128], [32]], score=0.033504
    Step 20: arch=[[256, 256, 256], [8, 8, 8], [1024], [512, 512, 512, 512], [32]], score=0.061710
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256], [512, 512], [256, 256], [64], [64]], score=-0.007562
    Step 4: arch=[[256], [512, 512], [256, 256], [256], [64]], score=0.000943
    Step 5: arch=[[128], [512, 512], [256, 256], [256], [64]], score=-0.003684
    Step 6: arch=[[4, 4, 4], [512, 512], [256, 256], [256], [64]], score=0.005072
    Step 7: arch=[[4, 4, 4], [512, 512], [256, 256], [256], [256]], score=0.007081
    Step 8: arch=[[4, 4, 4], [128, 128], [256, 256], [256], [256]], score=-0.000348
    Step 9: arch=[[16, 16, 16], [128, 128], [256, 256], [256], [256]], score=-0.000052
    Step 10: arch=[[16, 16, 16], [128, 128], [256, 256], [256], [256, 256]], score=0.003719
    Step 11: arch=[[16, 16, 16], [128, 128], [256, 256], [256], [256]], score=-0.000052
    Step 12: arch=[[16, 16, 16], [128, 128], [256, 256], [256], [256, 256]], score=0.003719
    Step 13: arch=[[16, 16, 16], [4, 4], [256, 256], [256], [256, 256]], score=0.002621
    Step 14: arch=[[16, 16, 16], [4, 4], [256, 256], [128], [256, 256]], score=-0.003467
    Step 15: arch=[[8, 8, 8], [4, 4], [256, 256], [128], [256, 256]], score=-0.003631
    Step 16: arch=[[8, 8], [4, 4], [256, 256], [128], [256, 256]], score=-0.010266
    Step 17: arch=[[8, 8], [8, 8], [256, 256], [128], [256, 256]], score=-0.010242
    Step 18: arch=[[8, 8], [8, 8], [256, 256], [128], [128, 128]], score=-0.011650
    Step 19: arch=[[8], [8, 8], [256, 256], [128], [128, 128]], score=-0.018285
    Step 20: arch=[[32], [8, 8], [256, 256], [128], [128, 128]], score=-0.017805
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [1024, 1024], [256, 256], [64], [64]], score=0.023399
    Step 4: arch=[[256, 256], [1024, 1024], [256, 256], [64], [256]], score=0.024785
    Step 5: arch=[[256, 256], [32], [256, 256], [64], [256]], score=-0.017428
    Step 6: arch=[[256, 256], [32], [512, 512], [64], [256]], score=-0.009697
    Step 7: arch=[[256, 256], [64], [512, 512], [64], [256]], score=-0.009054
    Step 8: arch=[[64, 64], [64], [512, 512], [64], [256]], score=-0.014174
    Step 9: arch=[[16], [64], [512, 512], [64], [256]], score=-0.021921
    Step 10: arch=[[16], [64], [512, 512], [64], [64]], score=-0.023307
    Step 11: arch=[[16], [64, 64], [512, 512], [64], [64]], score=-0.016586
    Step 12: arch=[[16], [16, 16], [512, 512], [64], [64]], score=-0.017257
    Step 13: arch=[[16], [16, 16], [512, 512], [32], [64]], score=-0.018794
    Step 14: arch=[[16], [16, 16], [512, 512, 512], [32], [64]], score=-0.015897
    Step 15: arch=[[4], [16, 16], [512, 512, 512], [32], [64]], score=-0.016141
    Step 16: arch=[[4], [16, 16], [512, 512, 512], [32, 32], [64]], score=-0.012813
    Step 17: arch=[[4], [16, 16], [512, 512], [32, 32], [64]], score=-0.015710
    Step 18: arch=[[4], [16, 16], [512, 512], [32, 32, 32], [64]], score=-0.012382
    Step 19: arch=[[4], [16, 16, 16], [512, 512], [32, 32, 32], [64]], score=-0.005742
    Step 20: arch=[[4], [16, 16, 16], [512, 512], [32, 32, 32, 32], [64]], score=-0.002414
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.007562
    Step 4: arch=[[256, 256, 256], [512, 512], [256, 256], [2], [64]], score=0.004814
    Step 5: arch=[[64, 64, 64], [512, 512], [256, 256], [2], [64]], score=-0.003877
    Step 6: arch=[[64, 64, 64], [512, 512], [256, 256], [2], [64, 64]], score=-0.000530
    Step 7: arch=[[64, 64, 64], [2048, 2048], [256, 256], [2], [64, 64]], score=0.094868
    Step 8: arch=[[64, 64, 64], [2048, 2048], [64, 64], [2], [64, 64]], score=0.082118
    Step 9: arch=[[64, 64, 64], [2048, 2048], [2], [2], [64, 64]], score=0.076345
    Step 10: arch=[[64, 64, 64], [2048, 2048], [2], [2], [16, 16]], score=0.076025
    Step 11: arch=[[64, 64, 64], [8192, 8192], [2], [2], [16, 16]], score=-100.000000
    Step 12: arch=[[64, 64, 64], [2048, 2048], [2], [2], [16]], score=0.072706
    Step 13: arch=[[64, 64, 64], [2048, 2048], [2], [4], [16]], score=0.072786
    Step 14: arch=[[64, 64, 64], [2048, 2048], [2], [16], [16]], score=0.073263
    Step 15: arch=[[64, 64, 64], [2048, 2048], [2, 2], [16], [16]], score=0.074922
    Step 16: arch=[[4096, 4096, 4096], [2048, 2048], [2, 2], [16], [16]], score=-100.000000
    Step 17: arch=[[16, 16, 16], [2048, 2048], [2, 2], [16], [16]], score=0.071129
    Step 18: arch=[[16, 16, 16], [2048, 2048], [4, 4], [16], [16]], score=0.071263
    Step 19: arch=[[8, 8, 8], [2048, 2048], [4, 4], [16], [16]], score=0.070640
    Step 20: arch=[[8, 8, 8], [2048, 2048], [4, 4], [64], [16]], score=0.072552
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [1024, 1024], [64], [64]], score=0.032684
    Step 4: arch=[[256, 256], [512, 512, 512], [1024, 1024], [64], [64]], score=0.044367
    Step 5: arch=[[256, 256], [512, 512, 512], [1024, 1024], [64], [32]], score=0.044136
    Step 6: arch=[[256, 256], [512, 512, 512], [1024, 1024], [64], [128]], score=0.044829
    Step 7: arch=[[256, 256], [512, 512], [1024, 1024], [64], [128]], score=0.033146
    Step 8: arch=[[256, 256], [512, 512], [1024, 1024], [64], [128, 128]], score=0.036579
    Step 9: arch=[[256, 256], [512, 512], [64, 64, 64, 64], [64], [128, 128]], score=-0.000262
    Step 10: arch=[[256, 256], [512, 512], [32, 32, 32, 32], [64], [128, 128]], score=-0.001516
    Step 11: arch=[[256, 256], [512, 512], [32, 32, 32, 32, 32], [64], [128, 128]], score=0.000147
    Step 12: arch=[[256, 256], [512, 512, 512], [32, 32, 32, 32, 32], [64], [128, 128]], score=0.012403
    Step 13: arch=[[128, 128], [512, 512, 512], [32, 32, 32, 32, 32], [64], [128, 128]], score=0.007108
    Step 14: arch=[[32, 32], [512, 512, 512], [32, 32, 32, 32, 32], [64], [128, 128]], score=0.003420
    Step 15: arch=[[32, 32], [512, 512, 512], [32, 32, 32, 32, 32], [128], [128, 128]], score=0.006119
    Step 16: arch=[[512, 512, 512], [512, 512, 512], [32, 32, 32, 32, 32], [128], [128, 128]], score=0.037326
    Step 17: arch=[[512, 512, 512], [512, 512, 512], [64, 64, 64, 64, 64], [128], [128, 128]], score=0.038589
    Step 18: arch=[[512, 512, 512], [1024, 1024, 1024], [64, 64, 64, 64, 64], [128], [128, 128]], score=0.079675
    Step 19: arch=[[512, 512, 512], [1024, 1024, 1024, 1024], [64, 64, 64, 64, 64], [128], [128, 128]], score=0.108057
    Step 20: arch=[[512, 512, 512], [1024, 1024, 1024, 1024], [64, 64, 64, 64, 64], [128], [64, 64]], score=0.107437
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [16, 16, 16, 16], [256, 256], [64], [64]], score=0.000880
    Step 4: arch=[[256], [16, 16, 16, 16], [256, 256], [64], [64]], score=-0.006733
    Step 5: arch=[[256], [16, 16, 16, 16], [256, 256], [64], [128]], score=-0.006271
    Step 6: arch=[[256], [16, 16, 16, 16], [512, 512], [64], [128]], score=0.001364
    Step 7: arch=[[512], [16, 16, 16, 16], [512, 512], [64], [128]], score=0.006580
    Step 8: arch=[[512], [16, 16, 16, 16], [512, 512], [8], [128]], score=0.003829
    Step 9: arch=[[512], [16, 16, 16, 16], [512, 512], [8], [256]], score=0.004635
    Step 10: arch=[[512], [16, 16, 16, 16], [512, 512], [16], [256]], score=0.005045
    Step 11: arch=[[512], [16, 16, 16, 16], [512, 512], [16], [128]], score=0.004222
    Step 12: arch=[[512], [16, 16, 16, 16], [512, 512], [32], [128]], score=0.005008
    Step 13: arch=[[128], [16, 16, 16, 16], [512, 512], [32], [128]], score=-0.002811
    Step 14: arch=[[128], [16, 16, 16, 16], [512, 512], [128], [128]], score=0.001902
    Step 15: arch=[[128], [16, 16, 16, 16], [512, 512], [256], [128]], score=0.008179
    Step 16: arch=[[128], [16, 16, 16, 16], [128, 128], [256], [128]], score=-0.004073
    Step 17: arch=[[128], [16, 16, 16, 16], [128, 128], [256, 256], [128]], score=-0.000050
    Step 18: arch=[[128], [16, 16, 16, 16], [128, 128], [1024, 1024], [128]], score=0.043950
    Step 19: arch=[[128], [16, 16, 16, 16], [128, 128], [1024, 1024], [128, 128]], score=0.047372
    Step 20: arch=[[256], [16, 16, 16, 16], [128, 128], [1024, 1024], [128, 128]], score=0.049965
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256, 256], [64], [64]], score=0.001951
    Step 4: arch=[[256, 256], [512, 512], [256, 256, 256], [64], [256]], score=0.003336
    Step 5: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64], [256]], score=0.105893
    Step 6: arch=[[1024, 1024], [2048, 2048], [256, 256, 256], [64], [256]], score=-100.000000
    Step 7: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64, 64], [256]], score=0.109253
    Step 8: arch=[[256, 256], [4096, 4096], [256, 256, 256], [64, 64], [256]], score=-100.000000
    Step 9: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64, 64], [1024]], score=0.114792
    Step 10: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64, 64], [2, 2, 2]], score=0.114056
    Step 11: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64, 64], [2, 2]], score=0.110739
    Step 12: arch=[[256, 256], [2048, 2048], [256, 256, 256], [64, 64], [8, 8]], score=0.110782
    Step 13: arch=[[256, 256], [2048, 2048], [256, 256, 256, 256], [64, 64], [8, 8]], score=0.112691
    Step 14: arch=[[256, 256], [2048, 2048], [64, 64, 64, 64], [64, 64], [8, 8]], score=0.099570
    Step 15: arch=[[256, 256], [2048, 2048], [64, 64, 64, 64], [16, 16], [8, 8]], score=0.097582
    Step 16: arch=[[256, 256], [2048], [64, 64, 64, 64], [16, 16], [8, 8]], score=0.001465
    Step 17: arch=[[256, 256], [2048, 2048], [64, 64, 64], [16, 16], [8, 8]], score=0.095908
    Step 18: arch=[[256, 256], [2048, 2048], [64, 64], [16, 16], [8, 8]], score=0.094233
    Step 19: arch=[[256, 256], [2048, 2048], [64, 64], [16, 16], [256]], score=0.092496
    Step 20: arch=[[256, 256], [2048, 2048], [64, 64], [8, 8], [256]], score=0.092135
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.008412
    Step 4: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [512, 512, 512, 512]], score=0.027153
    Step 5: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [256], [512, 512, 512, 512]], score=0.036964
    Step 6: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [128], [512, 512, 512, 512]], score=0.030426
    Step 7: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [128], [256, 256, 256, 256]], score=0.024175
    Step 8: arch=[[512, 512, 512, 512], [512, 512], [256, 256], [128], [256, 256, 256, 256]], score=0.048381
    Step 9: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256], [128], [256, 256, 256, 256]], score=0.060344
    Step 10: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256], [128, 128], [256, 256, 256, 256]], score=0.063833
    Step 11: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256, 256], [128, 128], [256, 256, 256, 256]], score=0.065782
    Step 12: arch=[[256, 256, 256, 256], [512, 512, 512], [256, 256, 256], [128, 128], [256, 256, 256, 256]], score=0.048440
    Step 13: arch=[[256, 256, 256, 256], [512, 512, 512], [256, 256, 256], [128, 128], [16]], score=0.035118
    Step 14: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256, 256], [128, 128], [16]], score=0.052460
    Step 15: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256, 256], [128, 128, 128], [16]], score=0.055954
    Step 16: arch=[[512, 512, 512, 512], [512, 512, 512], [256, 256, 256], [128, 128, 128], [16, 16]], score=0.059273
    Step 17: arch=[[512, 512, 512, 512], [512, 512, 512], [16, 16, 16], [128, 128, 128], [16, 16]], score=0.049674
    Step 18: arch=[[512, 512, 512, 512], [512, 512, 512], [16, 16], [128, 128, 128], [16, 16]], score=0.048015
    Step 19: arch=[[256, 256, 256, 256], [512, 512, 512], [16, 16], [128, 128, 128], [16, 16]], score=0.030569
    Step 20: arch=[[256, 256, 256, 256], [512, 512, 512], [16, 16], [128, 128, 128, 128], [16, 16]], score=0.034068

Method: LogSpaceSimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [32], [64]], score=-0.001418
    Step 4: arch=[[256, 256, 256], [512, 512], [256, 256], [32], [64]], score=0.006144
    Step 5: arch=[[128, 128, 128], [512, 512], [256, 256], [32], [64]], score=0.000127
    Step 6: arch=[[128, 128], [512, 512], [256, 256], [32], [64]], score=-0.006740
    Step 7: arch=[[128, 128], [512, 512], [256, 256], [16], [64]], score=-0.007450
    Step 8: arch=[[128, 128], [512], [256, 256], [16], [64]], score=-0.019644
    Step 9: arch=[[128, 128], [512], [256, 256], [32], [64]], score=-0.018935
    Step 10: arch=[[128, 128], [512], [128, 128], [32], [64]], score=-0.024025
    Step 11: arch=[[64, 64], [512], [128, 128], [32], [64]], score=-0.026582
    Step 12: arch=[[64, 64], [512], [128, 128], [64], [64]], score=-0.025223
    Step 13: arch=[[64, 64], [512], [128, 128], [64], [32]], score=-0.025454
    Step 14: arch=[[64, 64], [512], [128, 128], [64], [16]], score=-0.025570
    Step 15: arch=[[64, 64], [512], [128, 128], [64], [32]], score=-0.025454
    Step 16: arch=[[32, 32], [512], [128, 128], [64], [32]], score=-0.026693
    Step 17: arch=[[32, 32], [512], [128, 128], [2048, 2048, 2048], [32]], score=-100.000000
    Step 18: arch=[[32, 32], [1024], [128, 128], [64], [32]], score=-0.024974
    Step 19: arch=[[32, 32], [1024], [256, 256], [64], [32]], score=-0.018176
    Step 20: arch=[[32, 32], [1024], [256, 256], [64, 64], [32]], score=-0.014814
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64], [64, 64]], score=0.003346
    Step 4: arch=[[128, 128], [512, 512], [256, 256], [64], [64, 64]], score=-0.001976
    Step 5: arch=[[128, 128], [512, 512], [256, 256], [64], [128, 128]], score=-0.001427
    Step 6: arch=[[128, 128], [512, 512], [128, 128], [64], [128, 128]], score=-0.006494
    Step 7: arch=[[128, 128], [512, 512], [128, 128, 128], [64], [128, 128]], score=-0.004762
    Step 8: arch=[[128], [512, 512], [128, 128, 128], [64], [128, 128]], score=-0.011629
    Step 9: arch=[[128], [512], [128, 128, 128], [64], [128, 128]], score=-0.023906
    Step 10: arch=[[128], [512], [128, 128, 128], [1024, 1024, 1024], [128, 128]], score=0.047037
    Step 11: arch=[[128], [256], [128, 128, 128], [1024, 1024, 1024], [128, 128]], score=0.045358
    Step 12: arch=[[128], [256], [128, 128, 128], [1024, 1024, 1024], [128, 128, 128]], score=0.048780
    Step 13: arch=[[128], [256], [32], [1024, 1024, 1024], [128, 128, 128]], score=0.041143
    Step 14: arch=[[128], [256], [32, 32], [1024, 1024, 1024], [128, 128, 128]], score=0.042806
    Step 15: arch=[[128], [512], [32, 32], [1024, 1024, 1024], [128, 128, 128]], score=0.043884
    Step 16: arch=[[128], [512], [32, 32], [1024, 1024], [128, 128, 128]], score=0.029169
    Step 17: arch=[[128], [256], [32, 32], [1024, 1024], [128, 128, 128]], score=0.028090
    Step 18: arch=[[128], [128], [32, 32], [1024, 1024], [128, 128, 128]], score=0.027547
    Step 19: arch=[[128], [128], [32, 32], [1024, 1024], [8192, 8192, 8192]], score=-100.000000
    Step 20: arch=[[128], [128], [32, 32], [4096], [128, 128, 128]], score=0.120476
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[512, 512], [512, 512], [256, 256], [64], [64]], score=0.011942
    Step 4: arch=[[512, 512], [512, 512], [128, 128], [64], [64]], score=0.006965
    Step 5: arch=[[512, 512], [512, 512], [128, 128], [128], [64]], score=0.009683
    Step 6: arch=[[512, 512], [512, 512], [64, 64], [128], [64]], score=0.007178
    Step 7: arch=[[1024, 1024], [512, 512], [64, 64], [128], [64]], score=0.036442
    Step 8: arch=[[1024, 1024], [256, 256], [64, 64], [128], [64]], score=0.024349
    Step 9: arch=[[1024, 1024], [256, 256], [64, 64], [128], [128]], score=0.024883
    Step 10: arch=[[1024, 1024], [512, 512], [64, 64], [128], [128]], score=0.036976
    Step 11: arch=[[2048, 2048], [512, 512], [64, 64], [128], [128]], score=-100.000000
    Step 12: arch=[[1024, 1024], [1024, 1024], [64, 64], [128], [128]], score=0.068447
    Step 13: arch=[[1024, 1024], [1024, 1024], [64, 64], [64], [128]], score=0.065717
    Step 14: arch=[[2048, 2048], [1024, 1024], [64, 64], [64], [128]], score=-100.000000
    Step 15: arch=[[1024, 1024], [1024, 1024], [64, 64], [64], [128, 128]], score=0.069150
    Step 16: arch=[[1024, 1024], [32, 32, 32], [64, 64], [64], [128, 128]], score=0.023640
    Step 17: arch=[[1024, 1024], [32, 32, 32], [32, 32], [64], [128, 128]], score=0.022773
    Step 18: arch=[[1024, 1024, 1024], [32, 32, 32], [32, 32], [64], [128, 128]], score=0.044996
    Step 19: arch=[[1024, 1024, 1024], [32, 32, 32], [16, 16], [64], [128, 128]], score=0.044566
    Step 20: arch=[[1024, 1024, 1024], [32, 32, 32], [16, 16], [32, 32], [128, 128]], score=0.046553
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512, 512], [256, 256], [64], [64]], score=0.012115
    Step 4: arch=[[256, 256], [512, 512, 512], [256, 256], [64, 64], [64]], score=0.015477
    Step 5: arch=[[512, 512], [512, 512, 512], [256, 256], [64, 64], [64]], score=0.027267
    Step 6: arch=[[512, 512], [512, 512, 512], [256], [64, 64], [64]], score=0.025316
    Step 7: arch=[[512, 512], [512, 512, 512], [512], [64, 64], [64]], score=0.034607
    Step 8: arch=[[512, 512], [512, 512, 512], [512], [32, 32], [64]], score=0.033039
    Step 9: arch=[[512, 512], [1024, 1024, 1024], [512], [32, 32], [64]], score=0.077926
    Step 10: arch=[[1024], [1024, 1024, 1024], [512], [32, 32], [64]], score=0.091244
    Step 11: arch=[[1024], [1024, 1024, 1024], [512], [16, 16], [64]], score=0.090471
    Step 12: arch=[[1024], [1024, 1024, 1024], [256], [16, 16], [64]], score=0.079656
    Step 13: arch=[[512], [1024, 1024, 1024], [256], [16, 16], [64]], score=0.055857
    Step 14: arch=[[512], [1024, 1024, 1024], [8192, 8192, 8192], [16, 16], [64]], score=-100.000000
    Step 15: arch=[[512], [1024, 1024, 1024], [256], [16, 16], [64, 64]], score=0.059203
    Step 16: arch=[[256], [1024, 1024, 1024], [256], [16, 16], [64, 64]], score=0.047029
    Step 17: arch=[[256], [1024, 1024, 1024], [256], [32, 32], [64, 64]], score=0.047745
    Step 18: arch=[[256], [8, 8, 8, 8], [256], [32, 32], [64, 64]], score=-0.003575
    Step 19: arch=[[256], [8, 8, 8, 8], [256, 256, 256], [32, 32], [64, 64]], score=0.000363
    Step 20: arch=[[256], [4, 4, 4, 4], [256, 256, 256], [32, 32], [64, 64]], score=0.000303
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512], [256, 256], [64], [64]], score=-0.012115
    Step 4: arch=[[256, 256], [512], [256, 256], [64], [64, 64]], score=-0.008769
    Step 5: arch=[[128, 128], [512], [256, 256], [64], [64, 64]], score=-0.014170
    Step 6: arch=[[128, 128], [512], [128, 128], [64], [64, 64]], score=-0.019319
    Step 7: arch=[[128, 128], [1024], [128, 128], [64], [64, 64]], score=-0.015989
    Step 8: arch=[[256, 256], [1024], [128, 128], [64], [64, 64]], score=-0.008461
    Step 9: arch=[[256, 256], [1024], [128, 128], [64], [64]], score=-0.011807
    Step 10: arch=[[256, 256], [512], [128, 128], [64], [64]], score=-0.017231
    Step 11: arch=[[256, 256], [512], [256, 256], [64], [64]], score=-0.012115
    Step 12: arch=[[256, 256], [512], [512, 512], [64], [64]], score=-0.001543
    Step 13: arch=[[256, 256], [512], [512, 512], [128], [64]], score=0.001518
    Step 14: arch=[[256, 256], [512], [512, 512], [64], [64]], score=-0.001543
    Step 15: arch=[[256, 256, 256], [512], [512, 512], [64], [64]], score=0.006019
    Step 16: arch=[[256, 256, 256, 256], [512], [512, 512], [64], [64]], score=0.013581
    Step 17: arch=[[256, 256, 256, 256], [512], [512], [64], [64]], score=0.010756
    Step 18: arch=[[256, 256, 256, 256], [1024], [512], [64], [64]], score=0.020677
    Step 19: arch=[[128, 128, 128, 128], [1024], [512], [64], [64]], score=0.012037
    Step 20: arch=[[128, 128, 128, 128], [1024], [512, 512], [64], [64]], score=0.014800
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.007562
    Step 4: arch=[[128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.001545
    Step 5: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.008412
    Step 6: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [128]], score=0.008874
    Step 7: arch=[[128, 128, 128, 128], [256, 256], [256, 256], [64], [128]], score=0.002225
    Step 8: arch=[[128, 128, 128, 128], [256, 256], [2], [64], [128]], score=-0.007876
    Step 9: arch=[[128, 128, 128, 128], [256, 256], [2], [64], [16, 16]], score=-0.005366
    Step 10: arch=[[128, 128, 128, 128], [256, 256], [2], [64], [32, 32]], score=-0.005245
    Step 11: arch=[[128, 128, 128, 128], [256], [2], [64], [32, 32]], score=-0.013313
    Step 12: arch=[[128, 128, 128, 128], [256], [128, 128], [64], [32, 32]], score=-0.007512
    Step 13: arch=[[128, 128, 128, 128], [256], [64, 64], [64], [32, 32]], score=-0.009632
    Step 14: arch=[[128, 128, 128, 128], [256], [64, 64], [32], [32, 32]], score=-0.010943
    Step 15: arch=[[128, 128, 128, 128], [256], [128, 128], [32], [32, 32]], score=-0.008853
    Step 16: arch=[[64, 64, 64, 64], [256], [128, 128], [32], [32, 32]], score=-0.011218
    Step 17: arch=[[64, 64, 64, 64], [256], [128, 128], [32, 32], [32, 32]], score=-0.007889
    Step 18: arch=[[64, 64, 64, 64], [256], [128, 128], [32, 32], [16, 16]], score=-0.008001
    Step 19: arch=[[64, 64, 64, 64], [256], [128, 128], [32, 32], [16]], score=-0.011320
    Step 20: arch=[[64, 64, 64, 64], [256], [128, 128], [32, 32], [16, 16]], score=-0.008001
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [128, 128], [64], [64]], score=-0.005036
    Step 4: arch=[[256, 256], [512], [128, 128], [64], [64]], score=-0.017231
    Step 5: arch=[[256, 256], [512], [128], [64], [64]], score=-0.018962
    Step 6: arch=[[256, 256], [512], [128], [64], [32]], score=-0.019193
    Step 7: arch=[[256, 256], [512], [64], [64], [32]], score=-0.021654
    Step 8: arch=[[256, 256], [512], [128], [64], [32]], score=-0.019193
    Step 9: arch=[[256, 256], [256], [128], [64], [32]], score=-0.021960
    Step 10: arch=[[256, 256], [256, 256], [128], [64], [32]], score=-0.013933
    Step 11: arch=[[256, 256], [256, 256], [128], [64], [32, 32]], score=-0.010608
    Step 12: arch=[[256, 256], [512, 512], [128], [64], [32, 32]], score=-0.003674
    Step 13: arch=[[256, 256], [512], [128], [64], [32, 32]], score=-0.015869
    Step 14: arch=[[256, 256], [1024], [128], [64], [32, 32]], score=-0.010441
    Step 15: arch=[[256, 256], [1024], [256], [64], [32, 32]], score=-0.003979
    Step 16: arch=[[256, 256], [1024], [256], [64], [32]], score=-0.007303
    Step 17: arch=[[256, 256], [1024], [256], [64], [64, 64, 64, 64, 64]], score=0.006313
    Step 18: arch=[[256, 256], [1024], [256], [64], [8192, 8192]], score=-100.000000
    Step 19: arch=[[256, 256], [1024], [256], [64], [32, 32, 32, 32, 32]], score=0.005995
    Step 20: arch=[[128, 128], [1024], [256], [64], [32, 32, 32, 32, 32]], score=-0.001461
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [16, 16, 16, 16], [256, 256], [64], [64]], score=0.000880
    Step 4: arch=[[256, 256], [16, 16, 16, 16], [256, 256], [64], [32]], score=0.000649
    Step 5: arch=[[256, 256], [16, 16, 16, 16], [512, 512, 512], [64], [32]], score=0.011176
    Step 6: arch=[[256, 256], [16, 16, 16, 16], [512, 512, 512], [64], [32, 32]], score=0.014501
    Step 7: arch=[[256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [32, 32]], score=0.005941
    Step 8: arch=[[256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [32, 32]], score=0.013554
    Step 9: arch=[[256, 256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [32, 32]], score=0.021167
    Step 10: arch=[[256, 256, 256, 256], [8, 8, 8, 8], [256, 256, 256], [64], [32, 32]], score=0.021044
    Step 11: arch=[[256, 256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [32, 32]], score=0.021167
    Step 12: arch=[[256, 256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [64, 64]], score=0.021420
    Step 13: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64], [64, 64]], score=0.029033
    Step 14: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16], [256, 256, 256], [64, 64], [64, 64]], score=0.032395
    Step 15: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [256, 256, 256], [64, 64], [64, 64]], score=0.039035
    Step 16: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [512, 512, 512], [64, 64], [64, 64]], score=0.047593
    Step 17: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [512, 512, 512], [32, 32], [64, 64]], score=0.046028
    Step 18: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [512, 512, 512], [32], [64, 64]], score=0.042700
    Step 19: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [512, 512, 512], [32], [32, 32]], score=0.042464
    Step 20: arch=[[256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [512, 512, 512], [32], [32, 32]], score=0.042464
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [1024, 1024], [256, 256], [64], [64]], score=0.023399
    Step 4: arch=[[256, 256], [1024, 1024], [256, 256], [64], [128]], score=0.023861
    Step 5: arch=[[256, 256], [1024, 1024], [512, 512], [64], [128]], score=0.036802
    Step 6: arch=[[128, 128], [1024, 1024], [512, 512], [64], [128]], score=0.029780
    Step 7: arch=[[128, 128], [1024, 1024], [512, 512], [128], [128]], score=0.032897
    Step 8: arch=[[128, 128], [2048, 2048], [512, 512], [128], [128]], score=0.113214
    Step 9: arch=[[128, 128], [2048, 2048], [512, 512], [128], [256]], score=0.114272
    Step 10: arch=[[256, 256], [2048, 2048], [512, 512], [128], [256]], score=-100.000000
    Step 11: arch=[[128, 128], [2048, 2048], [256, 256], [128], [256]], score=0.096926
    Step 12: arch=[[128, 128], [128, 128, 128, 128, 128], [256, 256], [128], [256]], score=0.011104
    Step 13: arch=[[128, 128], [128, 128, 128, 128, 128], [256, 256], [256], [256]], score=0.017195
    Step 14: arch=[[128, 128], [128, 128, 128, 128, 128], [256, 256, 256], [256], [256]], score=0.019152
    Step 15: arch=[[128, 128], [128, 128, 128, 128, 128], [128, 128, 128], [256], [256]], score=0.014665
    Step 16: arch=[[128, 128], [128, 128, 128, 128, 128], [128, 128, 128], [256], [128]], score=0.013320
    Step 17: arch=[[128, 128], [128, 128, 128, 128, 128], [64, 64, 64], [256], [128]], score=0.011180
    Step 18: arch=[[128, 128], [128, 128, 128, 128, 128], [128, 128, 128], [512], [128]], score=0.024471
    Step 19: arch=[[128, 128], [2048, 2048, 2048, 2048], [128, 128, 128], [512], [128]], score=-100.000000
    Step 20: arch=[[128, 128], [128, 128, 128, 128, 128], [128, 128, 128], [512], [128, 128]], score=0.027898
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [64]], score=0.008412
    Step 4: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [512, 512, 512, 512]], score=0.027153
    Step 5: arch=[[128, 128, 128, 128], [512, 512], [256, 256], [64], [512, 512, 512]], score=0.021983
    Step 6: arch=[[8192, 8192, 8192], [512, 512], [256, 256], [64], [512, 512, 512]], score=-100.000000
    Step 7: arch=[[128, 128, 128, 128], [512, 512], [4], [64], [512, 512, 512]], score=0.010456
    Step 8: arch=[[128, 128, 128, 128], [512, 512], [4], [128], [512, 512, 512]], score=0.013525
    Step 9: arch=[[128, 128, 128], [512, 512], [4], [128], [512, 512, 512]], score=0.006658
    Step 10: arch=[[128, 128, 128], [512, 512], [4], [128], [1024, 1024, 1024]], score=0.021900
    Step 11: arch=[[128, 128, 128], [512, 512], [4], [128], [512, 512, 512]], score=0.006658
    Step 12: arch=[[128, 128, 128], [512, 512], [4], [128], [1024, 1024, 1024]], score=0.021900
    Step 13: arch=[[128, 128, 128], [512, 512], [4, 4], [128], [1024, 1024, 1024]], score=0.023559
    Step 14: arch=[[128, 128, 128], [512, 512], [4, 4, 4], [128], [1024, 1024, 1024]], score=0.025218
    Step 15: arch=[[128, 128, 128], [512, 512], [8, 8, 8], [128], [1024, 1024, 1024]], score=0.025375
    Step 16: arch=[[128, 128, 128], [512, 512], [4, 4, 4], [128], [1024, 1024, 1024]], score=0.025218
    Step 17: arch=[[128, 128, 128], [512, 512], [8, 8, 8], [128], [1024, 1024, 1024]], score=0.025375
    Step 18: arch=[[128, 128, 128], [512, 512], [8, 8, 8], [128, 128], [1024, 1024, 1024]], score=0.028854
    Step 19: arch=[[128, 128, 128], [512, 512], [8, 8, 8], [256, 256], [1024, 1024, 1024]], score=0.036370
    Step 20: arch=[[128, 128, 128], [1024, 1024], [8, 8, 8], [256, 256], [1024, 1024, 1024]], score=0.055297

Method: TPE
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024, 1024, 1024], [256, 256, 256, 256], [512, 512, 512], [4096, 4096, 4096], [32, 32, 32, 32, 32]], score=-100.000000
    Step 3: arch=[[128, 128, 128, 128], [8192, 8192, 8192], [4], [2048], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 4: arch=[[2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [512], [8192], [64, 64, 64]], score=-100.000000
    Step 5: arch=[[2048, 2048], [256, 256, 256], [512], [512, 512, 512, 512], [512, 512, 512, 512, 512]], score=-100.000000
    Step 6: arch=[[64, 64], [2, 2, 2, 2], [512, 512, 512, 512], [4, 4], [32, 32]], score=0.012849
    Step 7: arch=[[64, 64, 64], [4, 4, 4, 4, 4], [8, 8], [16, 16, 16, 16], [16, 16, 16]], score=0.016924
    Step 8: arch=[[4], [4, 4, 4, 4], [32], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]], score=0.004036
    Step 9: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256], [2, 2, 2, 2], [4, 4], [4, 4]], score=0.031546
    Step 10: arch=[[64, 64], [1024], [16, 16, 16], [4, 4, 4], [8192, 8192, 8192]], score=-100.000000
    Step 11: arch=[[4, 4, 4, 4, 4], [32, 32, 32, 32, 32], [8192, 8192, 8192, 8192, 8192], [64, 64], [2]], score=-100.000000
    Step 12: arch=[[16, 16, 16, 16], [16, 16, 16, 16, 16], [2, 2, 2, 2], [16, 16, 16, 16], [8, 8]], score=0.022309
    Step 13: arch=[[16, 16, 16, 16], [32, 32, 32, 32, 32], [2, 2, 2, 2, 2], [16, 16, 16, 16, 16], [8, 8]], score=0.027348
    Step 14: arch=[[16, 16, 16, 16], [64, 64, 64, 64, 64], [64, 64, 64, 64, 64], [16, 16, 16, 16, 16], [256, 256]], score=0.031376
    Step 15: arch=[[512, 512, 512, 512, 512], [64, 64, 64, 64], [64, 64, 64, 64], [2, 2], [256, 256]], score=0.045408
    Step 16: arch=[[8192, 8192, 8192, 8192, 8192], [128, 128, 128, 128], [4096, 4096, 4096, 4096], [2, 2], [1024]], score=-100.000000
    Step 17: arch=[[512, 512, 512, 512, 512], [2048, 2048, 2048, 2048], [64, 64, 64, 64], [256, 256], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 18: arch=[[256, 256, 256, 256, 256], [16, 16], [2048, 2048, 2048], [2, 2, 2], [128, 128]], score=0.104963
    Step 19: arch=[[4096, 4096, 4096], [8], [2048, 2048, 2048], [2, 2, 2], [256, 256, 256, 256]], score=-100.000000
    Step 20: arch=[[512, 512, 512, 512], [16, 16], [2048, 2048], [64, 64, 64], [128]], score=0.090670
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024, 1024, 1024], [16], [4], [32], [256, 256]], score=0.028662
    Step 3: arch=[[512, 512, 512], [4096, 4096], [512], [256, 256, 256], [8]], score=-100.000000
    Step 4: arch=[[8192, 8192, 8192, 8192, 8192], [1024, 1024], [4096, 4096, 4096, 4096, 4096], [2], [4096]], score=-100.000000
    Step 5: arch=[[64], [128, 128, 128, 128, 128], [32, 32, 32, 32], [2048, 2048, 2048, 2048], [1024]], score=-100.000000
    Step 6: arch=[[1024, 1024, 1024, 1024, 1024], [2048, 2048], [64], [16, 16, 16, 16, 16], [4, 4]], score=-100.000000
    Step 7: arch=[[512], [16, 16], [2, 2, 2], [4, 4, 4], [1024, 1024, 1024]], score=0.011583
    Step 8: arch=[[64], [64, 64, 64, 64], [128], [128, 128, 128, 128], [256, 256, 256, 256, 256]], score=0.014433
    Step 9: arch=[[4, 4, 4, 4, 4], [2048], [8, 8], [32, 32, 32, 32, 32], [1024, 1024, 1024, 1024]], score=0.037414
    Step 10: arch=[[512, 512, 512, 512, 512], [32, 32, 32, 32], [4096, 4096], [8192, 8192, 8192], [512, 512, 512, 512]], score=-100.000000
    Step 11: arch=[[4, 4, 4, 4], [2], [16, 16, 16], [512, 512, 512, 512, 512], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 12: arch=[[2, 2, 2], [4], [2, 2], [16, 16], [64, 64, 64]], score=-0.017394
    Step 13: arch=[[16, 16, 16, 16], [8192], [8, 8], [32, 32], [16, 16, 16, 16]], score=-0.006189
    Step 14: arch=[[8192, 8192, 8192, 8192], [256, 256, 256], [8], [8, 8, 8, 8], [2048, 2048]], score=-100.000000
    Step 15: arch=[[2048, 2048], [8], [4, 4], [64, 64], [128, 128, 128, 128]], score=0.085773
    Step 16: arch=[[16, 16], [8, 8, 8], [1024, 1024, 1024, 1024], [512, 512], [64, 64, 64, 64]], score=0.065997
    Step 17: arch=[[16, 16], [8, 8, 8], [1024, 1024, 1024, 1024], [1024, 1024], [64, 64, 64, 64]], score=0.100917
    Step 18: arch=[[16, 16], [2, 2, 2, 2], [2048, 2048, 2048, 2048], [2048, 2048], [16, 16, 16, 16, 16]], score=-100.000000
    Step 19: arch=[[4096, 4096], [64, 64, 64, 64, 64], [8192, 8192, 8192, 8192, 8192], [1024, 1024], [2, 2, 2]], score=-100.000000
    Step 20: arch=[[64, 64], [8, 8, 8], [512, 512, 512], [8192, 8192, 8192], [32, 32, 32, 32]], score=-100.000000
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2, 2, 2], [64, 64, 64], [32, 32, 32], [512, 512], [16, 16]], score=0.017610
    Step 3: arch=[[128, 128, 128, 128], [128], [2048], [128, 128, 128, 128, 128], [4, 4, 4, 4, 4]], score=0.072972
    Step 4: arch=[[2, 2, 2], [4, 4, 4], [256], [4, 4], [32, 32]], score=-0.003522
    Step 5: arch=[[8, 8, 8], [128, 128, 128, 128], [64, 64, 64], [256, 256, 256, 256], [1024]], score=0.028874
    Step 6: arch=[[128, 128, 128, 128, 128], [32, 32, 32, 32, 32], [64, 64, 64], [2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 7: arch=[[4, 4, 4], [4096, 4096], [2, 2, 2], [2, 2], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 8: arch=[[256, 256, 256, 256, 256], [8, 8, 8, 8], [128, 128], [2, 2], [64, 64, 64, 64, 64]], score=0.034108
    Step 9: arch=[[32, 32, 32], [64, 64], [1024, 1024, 1024, 1024, 1024], [2, 2], [16, 16, 16, 16]], score=0.044118
    Step 10: arch=[[2, 2, 2], [64, 64, 64, 64], [64, 64, 64], [256, 256], [4, 4, 4, 4, 4]], score=0.022693
    Step 11: arch=[[8192, 8192, 8192, 8192, 8192], [1024], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [2, 2, 2, 2]], score=-100.000000
    Step 12: arch=[[32], [512], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16, 16], [8, 8, 8, 8]], score=-100.000000
    Step 13: arch=[[2048, 2048, 2048, 2048], [16, 16], [2048], [8192, 8192, 8192, 8192], [256, 256, 256, 256]], score=-100.000000
    Step 14: arch=[[64, 64, 64, 64], [256], [1024, 1024, 1024, 1024], [8, 8, 8, 8], [2, 2, 2, 2]], score=0.049762
    Step 15: arch=[[1024, 1024, 1024, 1024], [2048], [1024, 1024, 1024, 1024], [16, 16, 16, 16], [2, 2, 2]], score=-100.000000
    Step 16: arch=[[32, 32, 32, 32], [256], [1024, 1024, 1024, 1024], [8, 8, 8, 8, 8], [256, 256, 256, 256, 256]], score=0.058850
    Step 17: arch=[[16, 16, 16, 16], [2], [8192, 8192, 8192, 8192], [64, 64, 64, 64, 64], [512, 512, 512, 512, 512]], score=-100.000000
    Step 18: arch=[[1024, 1024], [8192, 8192], [8, 8], [2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 19: arch=[[128, 128, 128, 128], [256, 256, 256], [512], [128, 128, 128], [128, 128, 128]], score=0.033389
    Step 20: arch=[[16, 16], [1024], [2048, 2048, 2048, 2048], [1024, 1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[1024, 1024, 1024], [128, 128], [4096, 4096, 4096, 4096, 4096], [8], [64]], score=-100.000000
    Step 3: arch=[[64], [16, 16, 16, 16], [256, 256, 256, 256], [256], [64, 64]], score=0.005163
    Step 4: arch=[[1024, 1024], [8, 8, 8], [2048, 2048, 2048], [8, 8], [8192, 8192]], score=-100.000000
    Step 5: arch=[[512, 512, 512, 512, 512], [2048, 2048, 2048, 2048, 2048], [4, 4], [256, 256, 256, 256], [8, 8]], score=-100.000000
    Step 6: arch=[[128, 128, 128], [16, 16], [4096, 4096, 4096], [16, 16, 16], [64, 64]], score=-100.000000
    Step 7: arch=[[8, 8], [4, 4, 4], [32, 32, 32], [1024, 1024, 1024, 1024], [512, 512, 512, 512]], score=-100.000000
    Step 8: arch=[[512, 512], [256, 256], [64, 64], [16], [8, 8, 8, 8, 8]], score=0.006922
    Step 9: arch=[[512, 512, 512, 512], [128, 128, 128, 128], [2, 2, 2], [8], [4]], score=0.024882
    Step 10: arch=[[256], [8192], [256, 256, 256, 256], [16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 11: arch=[[8192, 8192, 8192, 8192, 8192], [64, 64, 64, 64, 64], [2], [2, 2, 2, 2, 2], [2, 2, 2]], score=-100.000000
    Step 12: arch=[[8192, 8192, 8192, 8192], [512, 512, 512, 512], [16], [8192, 8192], [8, 8, 8, 8, 8]], score=-100.000000
    Step 13: arch=[[32, 32, 32, 32], [512, 512, 512, 512], [16, 16], [2, 2], [2, 2, 2, 2]], score=0.030000
    Step 14: arch=[[16, 16, 16, 16], [2048, 2048, 2048, 2048], [8, 8, 8, 8], [2, 2], [2, 2, 2, 2]], score=-100.000000
    Step 15: arch=[[2, 2, 2, 2], [64, 64, 64, 64], [2, 2], [2, 2], [16, 16, 16, 16]], score=0.011756
    Step 16: arch=[[32, 32, 32, 32], [2048, 2048, 2048, 2048, 2048], [8], [64, 64, 64], [2, 2, 2]], score=-100.000000
    Step 17: arch=[[4, 4, 4, 4, 4], [64, 64, 64], [32, 32, 32, 32, 32], [4, 4], [256, 256, 256, 256]], score=0.020449
    Step 18: arch=[[32, 32, 32], [512, 512, 512, 512], [8, 8], [64], [16, 16, 16]], score=0.018985
    Step 19: arch=[[4096, 4096, 4096, 4096], [2, 2, 2, 2, 2], [2, 2, 2], [8, 8, 8], [4]], score=-100.000000
    Step 20: arch=[[2048, 2048, 2048, 2048, 2048], [8192, 8192, 8192, 8192], [1024, 1024, 1024, 1024], [1024, 1024, 1024], [16, 16, 16]], score=-100.000000
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256, 256, 256, 256], [1024, 1024, 1024, 1024, 1024], [8, 8, 8, 8], [2, 2, 2, 2, 2], [64, 64]], score=0.120332
    Step 3: arch=[[8, 8, 8, 8], [8192, 8192, 8192, 8192, 8192], [256], [64], [8192]], score=-100.000000
    Step 4: arch=[[8192, 8192, 8192], [4096, 4096, 4096, 4096], [2], [8, 8, 8, 8], [64, 64, 64, 64]], score=-100.000000
    Step 5: arch=[[8192, 8192, 8192], [4, 4, 4], [256], [512, 512, 512], [512, 512, 512]], score=-100.000000
    Step 6: arch=[[512, 512], [8, 8, 8, 8], [128, 128], [16, 16, 16, 16], [512, 512, 512]], score=0.026402
    Step 7: arch=[[32, 32, 32, 32, 32], [8, 8, 8, 8], [8, 8, 8], [64, 64, 64, 64, 64], [64, 64, 64, 64, 64]], score=0.037022
    Step 8: arch=[[64, 64, 64, 64, 64], [256, 256], [4096, 4096, 4096, 4096, 4096], [4, 4, 4], [16, 16, 16]], score=-100.000000
    Step 9: arch=[[4096, 4096, 4096, 4096], [256, 256, 256], [256], [256], [1024, 1024]], score=-100.000000
    Step 10: arch=[[4], [128, 128, 128, 128], [2048, 2048, 2048], [2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 11: arch=[[1024, 1024, 1024, 1024], [2048], [16, 16, 16, 16, 16], [4096, 4096, 4096, 4096, 4096], [2, 2]], score=-100.000000
    Step 12: arch=[[32, 32, 32, 32, 32], [32, 32, 32, 32, 32], [2, 2, 2, 2], [2, 2, 2, 2, 2], [8, 8, 8, 8, 8]], score=0.042093
    Step 13: arch=[[16, 16, 16, 16, 16], [32, 32, 32, 32, 32], [2, 2, 2, 2], [2, 2, 2, 2, 2], [4, 4, 4, 4, 4]], score=0.041689
    Step 14: arch=[[128, 128, 128, 128, 128], [32, 32, 32, 32, 32], [16, 16, 16, 16], [2, 2, 2, 2], [8, 8, 8, 8]], score=0.038732
    Step 15: arch=[[64, 64, 64, 64], [1024, 1024, 1024, 1024, 1024], [8, 8, 8, 8], [16, 16, 16, 16, 16], [16, 16]], score=0.119564
    Step 16: arch=[[1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024], [32, 32, 32, 32], [16, 16], [32, 32]], score=-100.000000
    Step 17: arch=[[2, 2, 2, 2], [2048, 2048, 2048, 2048], [64, 64, 64, 64, 64], [16, 16, 16, 16], [256, 256]], score=-100.000000
    Step 18: arch=[[128, 128, 128], [8192, 8192, 8192], [8, 8, 8], [8, 8, 8, 8, 8], [2048]], score=-100.000000
    Step 19: arch=[[1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024], [8, 8, 8, 8], [32, 32], [128, 128]], score=-100.000000
    Step 20: arch=[[256, 256], [128], [4, 4], [512, 512, 512, 512], [16, 16, 16, 16]], score=0.021023
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[4096, 4096], [4096, 4096], [256, 256, 256], [128, 128, 128, 128], [8, 8]], score=-100.000000
    Step 3: arch=[[1024], [8, 8, 8], [16, 16, 16, 16, 16], [16, 16, 16], [256, 256, 256, 256]], score=0.017611
    Step 4: arch=[[16, 16, 16], [16, 16], [4, 4], [8192], [8, 8, 8, 8, 8]], score=0.127968
    Step 5: arch=[[8], [2048, 2048, 2048, 2048], [256], [128], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[2048, 2048], [4096, 4096, 4096, 4096, 4096], [128], [64, 64, 64, 64, 64], [256, 256, 256, 256, 256]], score=-100.000000
    Step 7: arch=[[128, 128, 128, 128], [4], [16], [512, 512, 512, 512, 512], [256, 256, 256, 256, 256]], score=0.043818
    Step 8: arch=[[2048, 2048, 2048, 2048], [4096, 4096, 4096, 4096, 4096], [4, 4, 4, 4, 4], [2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[8], [16, 16], [32, 32, 32, 32], [128, 128, 128, 128], [8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[4, 4, 4, 4, 4], [32, 32, 32, 32, 32], [32], [8192, 8192, 8192], [2, 2]], score=-100.000000
    Step 11: arch=[[32, 32, 32], [128], [8192, 8192, 8192], [8192, 8192], [16, 16, 16, 16]], score=-100.000000
    Step 12: arch=[[64, 64, 64, 64], [4], [2, 2], [1024, 1024, 1024, 1024, 1024], [32, 32, 32, 32, 32]], score=-100.000000
    Step 13: arch=[[256, 256, 256, 256], [2], [8, 8], [1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 14: arch=[[32, 32, 32], [64, 64, 64], [2, 2], [1024, 1024], [2, 2, 2, 2, 2]], score=0.054318
    Step 15: arch=[[2, 2, 2], [128, 128, 128], [2, 2], [2048, 2048], [2, 2, 2, 2]], score=-100.000000
    Step 16: arch=[[32, 32, 32], [32, 32, 32, 32], [2048, 2048, 2048], [4096], [8, 8, 8, 8, 8]], score=-100.000000
    Step 17: arch=[[16, 16, 16, 16, 16], [512, 512, 512], [2, 2, 2, 2], [512, 512], [4, 4, 4, 4]], score=0.049499
    Step 18: arch=[[2, 2], [64, 64, 64, 64], [8, 8], [2048], [32, 32, 32]], score=0.074332
    Step 19: arch=[[2, 2], [512, 512, 512, 512], [64, 64, 64, 64], [4096], [64, 64]], score=0.122136
    Step 20: arch=[[8, 8], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [8192], [64]], score=-100.000000
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[32, 32, 32, 32, 32], [2, 2, 2, 2, 2], [256], [64, 64, 64], [512, 512]], score=0.035002
    Step 3: arch=[[1024, 1024, 1024], [256, 256, 256], [8192, 8192, 8192, 8192], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 4: arch=[[1024], [1024, 1024, 1024, 1024, 1024], [256, 256, 256, 256], [8192], [8, 8, 8]], score=-100.000000
    Step 5: arch=[[8192, 8192, 8192, 8192], [512, 512], [1024, 1024, 1024], [32, 32, 32, 32, 32], [64, 64]], score=-100.000000
    Step 6: arch=[[1024, 1024, 1024, 1024], [8192, 8192, 8192], [32, 32, 32], [4, 4, 4, 4], [2048, 2048]], score=-100.000000
    Step 7: arch=[[16, 16, 16, 16], [128], [1024, 1024], [32], [256, 256, 256, 256, 256]], score=0.030478
    Step 8: arch=[[8192, 8192, 8192, 8192, 8192], [8, 8, 8, 8, 8], [128, 128, 128, 128], [1024, 1024, 1024], [512, 512, 512, 512, 512]], score=-100.000000
    Step 9: arch=[[1024], [8], [64, 64, 64, 64, 64], [512], [512]], score=0.013627
    Step 10: arch=[[2, 2], [2, 2, 2, 2, 2], [32, 32, 32], [2048, 2048, 2048, 2048], [256, 256, 256, 256]], score=-100.000000
    Step 11: arch=[[32, 32, 32, 32, 32], [32, 32, 32, 32], [2], [2, 2, 2], [4, 4, 4]], score=0.017166
    Step 12: arch=[[16, 16, 16, 16], [64], [2048], [16, 16], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[8, 8, 8, 8, 8], [4096, 4096, 4096, 4096], [1024, 1024], [256, 256], [32, 32]], score=-100.000000
    Step 14: arch=[[64, 64, 64, 64], [2, 2], [8192, 8192], [16, 16], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 15: arch=[[4, 4, 4], [16, 16, 16, 16], [2], [8, 8, 8, 8], [16, 16]], score=0.003533
    Step 16: arch=[[128, 128, 128, 128, 128], [128], [8, 8], [128, 128], [256, 256, 256, 256, 256]], score=0.014682
    Step 17: arch=[[16, 16, 16, 16], [2048, 2048, 2048], [2048], [128, 128, 128], [1024, 1024, 1024]], score=-100.000000
    Step 18: arch=[[64, 64, 64, 64, 64], [4, 4], [512, 512], [32], [128, 128, 128, 128]], score=0.019523
    Step 19: arch=[[256, 256, 256], [64, 64, 64, 64], [4096], [8, 8, 8, 8], [4096]], score=0.120561
    Step 20: arch=[[256, 256], [32, 32, 32, 32], [4096], [2, 2, 2, 2], [8192, 8192]], score=-100.000000
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2048], [1024, 1024, 1024], [256, 256, 256, 256, 256], [2, 2, 2], [128, 128]], score=0.120379
    Step 3: arch=[[2048, 2048, 2048, 2048], [2, 2], [4096, 4096], [64, 64], [2, 2, 2, 2, 2]], score=-100.000000
    Step 4: arch=[[8192, 8192, 8192, 8192], [256, 256], [4, 4, 4, 4, 4], [1024, 1024, 1024], [128, 128, 128, 128]], score=-100.000000
    Step 5: arch=[[128, 128], [128, 128], [2048, 2048], [32, 32, 32, 32], [16, 16, 16]], score=0.070478
    Step 6: arch=[[32, 32, 32], [32, 32, 32, 32], [1024, 1024, 1024], [4096, 4096, 4096], [1024]], score=-100.000000
    Step 7: arch=[[64, 64, 64], [128, 128, 128, 128], [2, 2, 2], [1024], [1024, 1024, 1024]], score=0.079350
    Step 8: arch=[[512, 512, 512, 512, 512], [32], [16, 16, 16], [8192, 8192, 8192, 8192, 8192], [128, 128, 128, 128, 128]], score=-100.000000
    Step 9: arch=[[4, 4, 4, 4, 4], [128, 128], [128, 128, 128, 128], [32], [16, 16]], score=0.003570
    Step 10: arch=[[64], [2048, 2048, 2048], [128, 128, 128, 128], [2048, 2048, 2048], [512, 512, 512, 512, 512]], score=-100.000000
    Step 11: arch=[[8192], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [2, 2, 2, 2, 2], [8192, 8192]], score=-100.000000
    Step 12: arch=[[8, 8], [2048, 2048, 2048, 2048], [2], [2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 13: arch=[[1024, 1024, 1024], [1024, 1024, 1024, 1024], [16, 16, 16, 16], [256, 256], [512, 512]], score=-100.000000
    Step 14: arch=[[16], [32, 32, 32, 32, 32], [512, 512, 512, 512, 512], [512, 512, 512, 512], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 15: arch=[[2, 2, 2, 2], [8, 8, 8], [8192, 8192, 8192], [8], [32, 32, 32]], score=-100.000000
    Step 16: arch=[[2048, 2048], [8192, 8192, 8192, 8192], [64, 64, 64, 64], [8, 8, 8, 8], [512, 512]], score=-100.000000
    Step 17: arch=[[64, 64, 64], [512, 512, 512], [8], [256, 256], [4, 4, 4, 4]], score=0.021035
    Step 18: arch=[[256], [64, 64, 64, 64, 64], [256, 256], [8], [256]], score=-0.000370
    Step 19: arch=[[2048, 2048, 2048, 2048], [8, 8, 8], [2, 2, 2], [1024, 1024, 1024, 1024], [2048, 2048]], score=-100.000000
    Step 20: arch=[[16, 16], [2048], [32, 32, 32, 32], [8192, 8192], [64, 64, 64]], score=-100.000000
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[8192, 8192, 8192, 8192, 8192], [128, 128, 128, 128, 128], [2, 2], [64, 64, 64], [128, 128, 128]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [1024, 1024, 1024, 1024], [64, 64, 64, 64], [8192, 8192], [8, 8]], score=-100.000000
    Step 4: arch=[[8192], [32], [8], [4096, 4096], [8192, 8192]], score=-100.000000
    Step 5: arch=[[32], [1024, 1024], [32, 32, 32, 32, 32], [16, 16, 16], [512, 512, 512, 512, 512]], score=0.026476
    Step 6: arch=[[256], [2, 2, 2, 2], [2048, 2048, 2048], [256, 256, 256, 256, 256], [64]], score=0.108337
    Step 7: arch=[[512], [4, 4], [4, 4, 4], [8192, 8192, 8192, 8192], [32, 32, 32, 32, 32]], score=-100.000000
    Step 8: arch=[[512, 512, 512], [128, 128, 128], [2], [64, 64, 64], [128]], score=0.013923
    Step 9: arch=[[1024, 1024, 1024], [64, 64], [256, 256, 256, 256, 256], [128, 128, 128, 128], [1024, 1024, 1024, 1024, 1024]], score=0.111648
    Step 10: arch=[[8, 8, 8, 8, 8], [128, 128], [256, 256, 256], [128, 128, 128, 128, 128], [1024, 1024, 1024, 1024, 1024]], score=0.071775
    Step 11: arch=[[2048, 2048, 2048, 2048], [8192], [8192, 8192, 8192, 8192, 8192], [2, 2, 2, 2], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 12: arch=[[32, 32], [2, 2, 2, 2], [4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024, 1024], [4, 4, 4]], score=-100.000000
    Step 13: arch=[[2048, 2048], [16, 16, 16, 16], [1024, 1024, 1024, 1024], [512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 14: arch=[[2, 2, 2, 2], [32, 32, 32], [1024, 1024], [512, 512, 512, 512, 512], [16, 16]], score=0.077208
    Step 15: arch=[[2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [8, 8, 8, 8], [512, 512, 512, 512]], score=-100.000000
    Step 16: arch=[[64, 64], [2, 2, 2], [2048, 2048, 2048, 2048, 2048], [1024, 1024, 1024, 1024, 1024], [256]], score=-100.000000
    Step 17: arch=[[1024, 1024, 1024], [8192, 8192, 8192, 8192], [256, 256, 256], [256, 256, 256, 256], [4096, 4096, 4096]], score=-100.000000
    Step 18: arch=[[128], [32, 32, 32, 32, 32], [32, 32], [8, 8, 8, 8, 8], [2, 2, 2, 2]], score=0.011828
    Step 19: arch=[[16, 16, 16], [8], [8192, 8192, 8192], [2048, 2048, 2048], [32, 32]], score=-100.000000
    Step 20: arch=[[128, 128], [512, 512, 512], [512, 512, 512, 512], [32, 32, 32, 32], [2048, 2048, 2048]], score=0.110706
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[128], [4, 4, 4], [8], [16, 16, 16], [32]], score=-0.019987
    Step 3: arch=[[4096], [2, 2, 2, 2, 2], [256, 256, 256, 256], [512, 512, 512, 512, 512], [1024, 1024, 1024]], score=0.121190
    Step 4: arch=[[1024, 1024], [128, 128, 128, 128, 128], [2048, 2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [8192, 8192, 8192]], score=-100.000000
    Step 5: arch=[[4096, 4096, 4096, 4096], [8, 8, 8, 8, 8], [4096, 4096], [1024, 1024, 1024, 1024, 1024], [128, 128]], score=-100.000000
    Step 6: arch=[[128, 128, 128, 128], [64, 64, 64], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [2, 2, 2, 2, 2]], score=-100.000000
    Step 7: arch=[[512, 512, 512, 512], [2, 2, 2], [8], [8, 8, 8, 8], [32]], score=0.022238
    Step 8: arch=[[1024, 1024, 1024], [16, 16, 16, 16, 16], [2, 2, 2, 2, 2], [8, 8], [64, 64]], score=0.062434
    Step 9: arch=[[64, 64, 64], [8, 8], [1024, 1024], [256, 256, 256], [64, 64, 64]], score=0.039143
    Step 10: arch=[[256, 256, 256, 256], [8192, 8192], [4, 4], [128, 128, 128, 128], [4]], score=-100.000000
    Step 11: arch=[[4], [1024, 1024, 1024, 1024], [64, 64, 64, 64], [8192, 8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 12: arch=[[8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [64, 64, 64, 64], [2], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 13: arch=[[2048, 2048], [16, 16, 16, 16], [256, 256, 256, 256], [1024, 1024], [512, 512]], score=-100.000000
    Step 14: arch=[[16, 16, 16], [2, 2, 2, 2], [2, 2, 2, 2, 2], [32, 32], [512, 512]], score=0.009894
    Step 15: arch=[[8192], [16], [64, 64, 64], [2, 2], [8, 8, 8, 8]], score=0.120586
    Step 16: arch=[[8192], [2], [32, 32, 32], [2, 2], [4, 4, 4, 4]], score=0.120426
    Step 17: arch=[[4096], [512], [512, 512, 512], [256, 256, 256], [8, 8, 8, 8]], score=0.120803
    Step 18: arch=[[2048, 2048], [512], [512, 512, 512, 512], [4096, 4096, 4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 19: arch=[[16], [4096, 4096], [8192, 8192, 8192], [256, 256, 256], [2048, 2048, 2048]], score=-100.000000
    Step 20: arch=[[2048, 2048], [128, 128, 128, 128], [1024, 1024, 1024, 1024], [512, 512, 512], [16, 16, 16, 16, 16]], score=-100.000000

Method: Skopt-Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16], [64, 64, 64, 64], [8, 8, 8, 8], [32, 32, 32, 32], [256, 256]], score=-0.001080
    Step 2: arch=[[128], [256], [256, 256, 256, 256, 256], [512, 512, 512], [4, 4]], score=0.013507
    Step 3: arch=[[2, 2], [16], [64, 64], [2, 2, 2, 2, 2], [8, 8, 8, 8]], score=-0.010166
    Step 4: arch=[[16, 16, 16, 16], [256], [2, 2], [4, 4, 4, 4], [1024, 1024, 1024, 1024]], score=0.027120
    Step 5: arch=[[4096, 4096], [8], [256, 256, 256], [8192, 8192, 8192, 8192, 8192], [8, 8, 8, 8]], score=-100.000000
    Step 6: arch=[[4], [32], [1024, 1024, 1024, 1024, 1024], [2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[16], [128, 128], [256, 256], [4096, 4096], [8, 8]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [32], [4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [128, 128]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32, 32], [512, 512, 512, 512, 512], [32, 32, 32, 32], [16, 16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64], [2, 2], [4, 4], [8, 8, 8, 8], [32]], score=-0.023339
    Step 11: arch=[[2, 2, 2], [256], [64, 64, 64, 64], [1024, 1024, 1024], [2, 2, 2]], score=0.054386
    Step 12: arch=[[8, 8, 8], [1024, 1024, 1024], [8, 8, 8, 8], [16, 16, 16], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 13: arch=[[8, 8, 8, 8], [4096, 4096, 4096], [1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048], [4, 4]], score=-100.000000
    Step 14: arch=[[8, 8, 8, 8, 8], [16, 16, 16], [2, 2, 2, 2], [2], [128, 128, 128, 128]], score=0.012697
    Step 15: arch=[[8192], [512, 512, 512, 512], [512, 512, 512], [8, 8, 8, 8], [16]], score=-100.000000
    Step 16: arch=[[16, 16, 16], [512, 512, 512, 512], [2048], [8], [512]], score=0.082208
    Step 17: arch=[[16, 16, 16, 16, 16], [4096, 4096, 4096, 4096], [8192, 8192, 8192, 8192, 8192], [128], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 18: arch=[[2, 2, 2, 2], [8192], [1024], [128], [64, 64]], score=-100.000000
    Step 19: arch=[[4096, 4096, 4096, 4096], [4096, 4096], [1024], [128], [64, 64, 64, 64, 64]], score=-100.000000
    Step 20: arch=[[128], [4096], [128, 128], [1024, 1024, 1024], [4]], score=0.061749
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64], [2, 2, 2, 2, 2], [2], [4, 4], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 2: arch=[[32, 32, 32, 32, 32], [4096, 4096], [8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[128, 128, 128], [1024, 1024, 1024, 1024, 1024], [1024, 1024], [256, 256], [128]], score=-100.000000
    Step 4: arch=[[512, 512], [512, 512], [16], [2048, 2048, 2048, 2048, 2048], [1024, 1024]], score=-100.000000
    Step 5: arch=[[32], [512, 512, 512, 512], [4, 4], [4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[8, 8, 8], [2, 2, 2, 2, 2], [32], [1024, 1024, 1024, 1024], [8, 8]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [256, 256], [32], [4096, 4096], [64, 64, 64, 64]], score=-100.000000
    Step 8: arch=[[2048, 2048], [256, 256, 256, 256], [256], [1024], [256, 256, 256]], score=-100.000000
    Step 9: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [4, 4, 4], [4], [16]], score=0.022231
    Step 10: arch=[[4096], [64], [4096, 4096, 4096, 4096, 4096], [256, 256, 256], [512, 512, 512, 512, 512]], score=-100.000000
    Step 11: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [32, 32, 32, 32], [1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2, 2]], score=-100.000000
    Step 12: arch=[[4, 4, 4, 4, 4], [256, 256, 256], [1024], [512, 512, 512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 13: arch=[[8192, 8192, 8192, 8192, 8192], [1024, 1024, 1024, 1024, 1024], [512], [8, 8, 8, 8, 8], [16, 16]], score=-100.000000
    Step 14: arch=[[2048, 2048], [128, 128, 128], [2, 2, 2, 2, 2], [1024, 1024, 1024, 1024, 1024], [8, 8, 8]], score=-100.000000
    Step 15: arch=[[128, 128, 128], [2], [128, 128], [64, 64, 64], [4, 4, 4, 4, 4]], score=0.000400
    Step 16: arch=[[256, 256, 256], [512, 512], [1024, 1024, 1024, 1024, 1024], [64, 64, 64], [256]], score=0.067302
    Step 17: arch=[[32], [32, 32], [4096, 4096, 4096, 4096], [128, 128], [512, 512]], score=-100.000000
    Step 18: arch=[[256, 256, 256, 256], [64], [64, 64, 64, 64], [32, 32], [64, 64, 64]], score=0.003363
    Step 19: arch=[[512], [256], [2, 2, 2, 2], [8192, 8192], [2048, 2048]], score=-100.000000
    Step 20: arch=[[16, 16, 16, 16], [64, 64, 64, 64, 64], [4, 4, 4], [8], [32, 32, 32, 32]], score=0.017549
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256], [8, 8, 8, 8], [4, 4, 4], [4096, 4096, 4096, 4096], [64]], score=-100.000000
    Step 2: arch=[[128, 128, 128], [32, 32, 32, 32, 32], [2048, 2048, 2048, 2048, 2048], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [512, 512], [32, 32, 32], [128, 128, 128, 128, 128], [16, 16, 16, 16]], score=0.017890
    Step 4: arch=[[8, 8], [32, 32, 32], [2048], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256]], score=0.059692
    Step 5: arch=[[256], [4, 4, 4], [128, 128, 128], [512, 512], [2048]], score=0.037167
    Step 6: arch=[[16, 16], [2, 2], [4096, 4096], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[8, 8, 8], [8192], [1024, 1024, 1024, 1024, 1024], [128, 128, 128], [64]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512], [4], [128, 128, 128], [1024, 1024], [64, 64, 64, 64, 64]], score=0.076919
    Step 9: arch=[[32, 32], [64, 64, 64], [2048, 2048, 2048, 2048, 2048], [512, 512, 512], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[64, 64, 64, 64], [4096, 4096, 4096, 4096], [2], [512], [128, 128, 128, 128]], score=-100.000000
    Step 11: arch=[[32, 32, 32], [16, 16, 16, 16], [128, 128], [4096, 4096, 4096], [4, 4, 4, 4]], score=-100.000000
    Step 12: arch=[[2048, 2048, 2048, 2048, 2048], [64, 64, 64], [8192, 8192, 8192, 8192], [32], [4096]], score=-100.000000
    Step 13: arch=[[4, 4, 4], [4096, 4096], [2, 2], [256, 256], [4, 4, 4]], score=-100.000000
    Step 14: arch=[[2], [256, 256, 256, 256, 256], [2, 2, 2, 2], [64, 64], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 15: arch=[[8192, 8192, 8192], [16, 16, 16], [4, 4, 4], [512, 512], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 16: arch=[[256], [2, 2, 2, 2], [1024, 1024], [8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 17: arch=[[2, 2], [32, 32], [128, 128, 128], [16], [4, 4, 4]], score=-0.016100
    Step 18: arch=[[256], [16, 16], [4096, 4096, 4096, 4096, 4096], [2048, 2048, 2048], [32]], score=-100.000000
    Step 19: arch=[[64], [4, 4, 4, 4], [16], [16], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 20: arch=[[128, 128, 128, 128], [4, 4, 4], [8192, 8192, 8192], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2]], score=-100.000000
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [64, 64], [16, 16, 16, 16], [2048], [4096]], score=-100.000000
    Step 2: arch=[[8192, 8192], [256, 256], [512, 512, 512], [2048], [4, 4, 4, 4, 4]], score=-100.000000
    Step 3: arch=[[16, 16, 16], [2048, 2048, 2048], [64, 64, 64], [512, 512, 512, 512, 512], [4, 4]], score=-100.000000
    Step 4: arch=[[4, 4, 4], [4096], [2, 2, 2, 2], [64], [32, 32, 32, 32]], score=-0.014895
    Step 5: arch=[[1024, 1024], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [64], [512]], score=0.039557
    Step 6: arch=[[4096], [8192, 8192], [32, 32], [16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 7: arch=[[8], [4096], [256], [2], [64, 64, 64]], score=-0.006211
    Step 8: arch=[[8], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128], [2, 2, 2, 2, 2], [32], [4096, 4096, 4096, 4096], [4, 4, 4]], score=-100.000000
    Step 10: arch=[[1024, 1024], [4], [256], [8192], [512]], score=-100.000000
    Step 11: arch=[[8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [8192, 8192, 8192], [8192], [4096]], score=-100.000000
    Step 12: arch=[[4, 4, 4, 4], [16], [8], [32, 32, 32], [4, 4, 4]], score=-0.008707
    Step 13: arch=[[128, 128, 128], [8192, 8192, 8192], [4096, 4096, 4096, 4096], [256, 256, 256, 256, 256], [1024, 1024]], score=-100.000000
    Step 14: arch=[[8192, 8192], [2, 2, 2, 2], [4096], [64, 64, 64, 64, 64], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 15: arch=[[16], [32, 32, 32, 32, 32], [1024], [2048], [8, 8, 8, 8, 8]], score=0.120091
    Step 16: arch=[[1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2, 2], [8192, 8192], [256, 256, 256], [8192, 8192]], score=-100.000000
    Step 17: arch=[[512, 512, 512, 512, 512], [32, 32, 32], [8192], [4, 4, 4, 4, 4], [32, 32, 32]], score=0.125389
    Step 18: arch=[[8192], [64, 64, 64, 64, 64], [16], [2048], [8192, 8192]], score=-100.000000
    Step 19: arch=[[256, 256, 256, 256], [32, 32], [1024, 1024, 1024, 1024, 1024], [2, 2], [512, 512, 512, 512]], score=0.066254
    Step 20: arch=[[8192, 8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [2048, 2048, 2048], [4096], [16, 16, 16, 16, 16]], score=-100.000000
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2048, 2048], [8192], [256], [256, 256, 256], [256, 256]], score=-100.000000
    Step 2: arch=[[128, 128], [2048], [32, 32, 32, 32, 32], [16, 16, 16], [2, 2, 2, 2, 2]], score=0.002303
    Step 3: arch=[[8, 8], [2048], [256, 256, 256], [2], [512, 512]], score=-0.006258
    Step 4: arch=[[16, 16, 16, 16], [8, 8, 8], [16, 16], [8], [1024, 1024, 1024, 1024, 1024]], score=0.041906
    Step 5: arch=[[1024, 1024, 1024], [4096, 4096], [2], [8192, 8192], [256, 256]], score=-100.000000
    Step 6: arch=[[128, 128, 128], [256, 256, 256, 256], [2048, 2048, 2048, 2048], [256], [1024, 1024, 1024]], score=-100.000000
    Step 7: arch=[[4096, 4096, 4096], [4096, 4096, 4096, 4096], [16], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[128], [4096, 4096, 4096, 4096], [512, 512, 512], [32], [512, 512, 512, 512, 512]], score=-100.000000
    Step 9: arch=[[16, 16], [32, 32], [256, 256, 256, 256, 256], [128, 128, 128], [128, 128, 128, 128]], score=0.008422
    Step 10: arch=[[64], [128, 128, 128, 128, 128], [8192], [2048, 2048, 2048, 2048], [4, 4, 4, 4]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048], [512, 512], [256, 256, 256, 256, 256], [64, 64, 64, 64], [256]], score=-100.000000
    Step 12: arch=[[256], [8, 8, 8, 8], [4, 4, 4, 4, 4], [2048, 2048, 2048, 2048, 2048], [512]], score=-100.000000
    Step 13: arch=[[16], [128, 128], [256, 256, 256, 256, 256], [2048, 2048, 2048, 2048], [32, 32]], score=-100.000000
    Step 14: arch=[[16], [2048, 2048, 2048, 2048], [8, 8, 8], [256, 256], [128, 128]], score=-100.000000
    Step 15: arch=[[2, 2], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2], [1024, 1024, 1024, 1024], [64, 64, 64, 64]], score=-100.000000
    Step 16: arch=[[8, 8], [16, 16, 16], [2], [16, 16, 16], [128, 128, 128, 128, 128]], score=-0.001526
    Step 17: arch=[[8192, 8192, 8192, 8192, 8192], [8192, 8192], [4096, 4096, 4096, 4096, 4096], [32], [512, 512, 512, 512]], score=-100.000000
    Step 18: arch=[[4, 4, 4], [32, 32, 32, 32], [512, 512, 512, 512], [16, 16, 16, 16], [8192, 8192]], score=-100.000000
    Step 19: arch=[[1024], [2, 2, 2], [1024, 1024, 1024, 1024, 1024], [16, 16, 16], [4, 4]], score=0.053218
    Step 20: arch=[[8192, 8192, 8192], [8192, 8192, 8192, 8192], [2048, 2048, 2048], [64, 64], [8, 8, 8, 8, 8]], score=-100.000000
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [2, 2], [256], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4]], score=-100.000000
    Step 2: arch=[[32], [128, 128, 128, 128], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [1024, 1024]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [2, 2], [64, 64], [2048, 2048], [2, 2, 2]], score=-100.000000
    Step 4: arch=[[4096], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [128, 128], [1024, 1024, 1024, 1024]], score=0.119662
    Step 5: arch=[[8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096], [4096, 4096, 4096], [16, 16], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[1024, 1024], [64, 64, 64, 64], [256, 256, 256, 256], [2, 2, 2, 2], [2048, 2048]], score=0.089852
    Step 7: arch=[[128, 128], [4096], [512, 512, 512], [2, 2, 2, 2], [8192]], score=0.108932
    Step 8: arch=[[2, 2, 2, 2, 2], [512, 512, 512], [2048], [8192, 8192, 8192, 8192], [64]], score=-100.000000
    Step 9: arch=[[4096, 4096, 4096, 4096], [512, 512], [512, 512, 512, 512, 512], [4, 4, 4], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[8, 8, 8, 8], [8192, 8192, 8192, 8192, 8192], [4096, 4096], [8], [32]], score=-100.000000
    Step 11: arch=[[8192, 8192], [16, 16, 16], [4, 4, 4, 4], [32, 32, 32, 32, 32], [8, 8, 8, 8]], score=-100.000000
    Step 12: arch=[[2048, 2048, 2048, 2048], [8192, 8192, 8192, 8192, 8192], [128, 128], [128, 128, 128, 128, 128], [1024]], score=-100.000000
    Step 13: arch=[[512, 512, 512], [512, 512, 512], [4096, 4096], [1024, 1024, 1024, 1024], [256]], score=-100.000000
    Step 14: arch=[[128, 128, 128, 128, 128], [8192, 8192, 8192, 8192, 8192], [512, 512, 512, 512], [2], [64, 64, 64]], score=-100.000000
    Step 15: arch=[[8, 8, 8, 8], [8, 8, 8, 8], [4, 4, 4, 4], [4096, 4096, 4096, 4096, 4096], [4]], score=-100.000000
    Step 16: arch=[[1024, 1024], [4, 4, 4], [1024, 1024, 1024, 1024], [2], [512]], score=0.061458
    Step 17: arch=[[8, 8], [4, 4, 4, 4, 4], [256, 256], [64, 64, 64, 64], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 18: arch=[[16, 16, 16, 16, 16], [4, 4, 4], [8, 8, 8], [32, 32], [1024, 1024, 1024]], score=0.033115
    Step 19: arch=[[2048], [64, 64], [2048, 2048, 2048], [64, 64, 64, 64], [32]], score=0.119405
    Step 20: arch=[[64, 64, 64, 64], [4, 4, 4], [4, 4], [2, 2], [8192, 8192]], score=-100.000000
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2, 2], [1024, 1024, 1024, 1024], [4, 4, 4, 4, 4], [4096, 4096, 4096], [1024, 1024, 1024]], score=-100.000000
    Step 2: arch=[[512, 512, 512], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [4096, 4096]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [64, 64, 64], [4, 4], [32, 32, 32], [64, 64, 64, 64]], score=0.004863
    Step 4: arch=[[8192], [4096, 4096, 4096], [1024, 1024, 1024], [64, 64, 64, 64], [8, 8, 8, 8, 8]], score=-100.000000
    Step 5: arch=[[16, 16, 16], [64], [4096, 4096, 4096], [4, 4, 4], [8, 8, 8]], score=-100.000000
    Step 6: arch=[[2, 2, 2, 2], [2048, 2048], [16, 16, 16, 16], [256, 256], [32]], score=0.094747
    Step 7: arch=[[32, 32, 32, 32], [4], [64, 64], [64, 64, 64, 64, 64], [4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[512, 512], [1024, 1024], [4, 4, 4, 4, 4], [8], [8, 8, 8]], score=0.035603
    Step 9: arch=[[4096, 4096], [128, 128, 128, 128, 128], [16, 16, 16], [4, 4, 4, 4, 4], [32, 32]], score=-100.000000
    Step 10: arch=[[2048, 2048], [32], [128, 128, 128, 128, 128], [8, 8, 8], [1024, 1024, 1024]], score=0.113451
    Step 11: arch=[[8192, 8192, 8192, 8192, 8192], [256, 256, 256], [8192, 8192, 8192], [64, 64, 64, 64], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 12: arch=[[256, 256, 256, 256, 256], [64, 64], [32, 32, 32, 32, 32], [8, 8], [512, 512, 512, 512]], score=0.029109
    Step 13: arch=[[8192], [512], [1024], [8, 8, 8], [2, 2, 2, 2, 2]], score=-100.000000
    Step 14: arch=[[512, 512, 512, 512, 512], [64], [1024, 1024, 1024, 1024], [4096, 4096, 4096, 4096], [2048, 2048]], score=-100.000000
    Step 15: arch=[[2048, 2048, 2048, 2048], [64, 64, 64, 64], [1024, 1024, 1024, 1024], [16], [512, 512, 512, 512]], score=-100.000000
    Step 16: arch=[[8], [8192, 8192, 8192, 8192, 8192], [16], [32, 32, 32, 32], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 17: arch=[[128], [512], [512, 512, 512, 512], [1024, 1024, 1024], [2, 2]], score=0.067887
    Step 18: arch=[[512], [64, 64], [1024], [8192, 8192], [4, 4, 4, 4, 4]], score=-100.000000
    Step 19: arch=[[64, 64, 64, 64, 64], [4096, 4096], [128, 128, 128], [32, 32], [2048, 2048]], score=-100.000000
    Step 20: arch=[[4], [8192, 8192, 8192, 8192, 8192], [2048, 2048, 2048], [1024, 1024, 1024], [8, 8, 8, 8, 8]], score=-100.000000
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024, 1024, 1024], [256, 256], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[2, 2, 2], [4096], [256, 256, 256, 256, 256], [2048], [128, 128, 128, 128, 128]], score=0.112805
    Step 3: arch=[[256, 256, 256, 256], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2], [4096], [2]], score=0.122131
    Step 4: arch=[[256, 256, 256], [16], [16, 16], [512, 512, 512, 512, 512], [16, 16]], score=0.027711
    Step 5: arch=[[8192], [8192, 8192], [256], [256], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[64, 64], [32, 32, 32, 32], [16], [4, 4, 4, 4, 4], [16]], score=-0.001562
    Step 7: arch=[[32, 32, 32, 32], [16, 16, 16, 16], [4, 4], [4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[8, 8], [64, 64], [256, 256, 256], [16, 16, 16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 9: arch=[[1024, 1024, 1024], [8192], [16, 16, 16, 16, 16], [8192, 8192, 8192, 8192], [32, 32]], score=-100.000000
    Step 10: arch=[[4096, 4096, 4096, 4096, 4096], [512, 512, 512, 512], [2048, 2048, 2048, 2048], [2048], [128, 128, 128, 128, 128]], score=-100.000000
    Step 11: arch=[[512, 512, 512, 512], [128, 128, 128], [128, 128, 128, 128], [64, 64, 64, 64, 64], [128, 128, 128, 128, 128]], score=0.053709
    Step 12: arch=[[32, 32, 32, 32, 32], [1024, 1024, 1024, 1024], [1024, 1024], [2048, 2048, 2048], [2, 2, 2, 2, 2]], score=-100.000000
    Step 13: arch=[[4096, 4096, 4096, 4096, 4096], [2048, 2048, 2048], [32, 32, 32, 32, 32], [4], [128, 128, 128]], score=-100.000000
    Step 14: arch=[[512, 512, 512], [8192, 8192], [128, 128], [64, 64, 64, 64, 64], [1024, 1024]], score=-100.000000
    Step 15: arch=[[128, 128, 128, 128, 128], [512, 512, 512, 512], [4, 4, 4, 4, 4], [64, 64], [64, 64, 64, 64]], score=0.048503
    Step 16: arch=[[8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [32], [256, 256, 256, 256], [64, 64]], score=-100.000000
    Step 17: arch=[[8192, 8192, 8192], [2, 2], [64, 64, 64, 64], [16, 16, 16, 16], [2, 2, 2]], score=-100.000000
    Step 18: arch=[[2048, 2048], [2], [8, 8, 8, 8, 8], [2, 2, 2, 2], [256, 256]], score=0.088777
    Step 19: arch=[[2, 2, 2], [2, 2], [1024, 1024], [4, 4, 4, 4], [4, 4]], score=0.022136
    Step 20: arch=[[32, 32, 32, 32], [2048, 2048, 2048], [4096], [8192, 8192, 8192], [512, 512, 512]], score=-100.000000
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16, 16, 16, 16, 16], [512, 512], [2, 2], [64, 64, 64], [8192]], score=0.065622
    Step 2: arch=[[1024, 1024], [8, 8, 8, 8], [4096, 4096, 4096], [8, 8, 8, 8], [128, 128, 128, 128, 128]], score=-100.000000
    Step 3: arch=[[2048], [1024, 1024], [2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[4096, 4096], [128, 128], [32, 32, 32, 32], [64, 64, 64, 64, 64], [512, 512, 512, 512]], score=-100.000000
    Step 5: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256], [32, 32, 32], [4096], [512, 512, 512]], score=0.124297
    Step 6: arch=[[8, 8], [8, 8, 8, 8, 8], [128, 128, 128, 128], [128, 128, 128, 128, 128], [128, 128, 128, 128]], score=0.028903
    Step 7: arch=[[256, 256, 256], [1024, 1024], [8], [128, 128], [2048, 2048, 2048]], score=0.104781
    Step 8: arch=[[2, 2, 2, 2], [128, 128, 128, 128], [1024], [256, 256], [32]], score=0.044021
    Step 9: arch=[[512, 512], [128, 128, 128, 128, 128], [8192], [64, 64, 64], [8, 8, 8]], score=0.125231
    Step 10: arch=[[512, 512, 512, 512], [256, 256, 256, 256], [1024, 1024, 1024, 1024], [256, 256, 256, 256], [16, 16, 16, 16, 16]], score=0.115414
    Step 11: arch=[[8192, 8192, 8192], [16], [2], [1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2]], score=-100.000000
    Step 12: arch=[[512, 512, 512, 512], [8, 8, 8], [1024, 1024], [128, 128, 128], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[2, 2, 2, 2, 2], [8192, 8192], [512, 512, 512, 512], [128, 128, 128, 128, 128], [256]], score=-100.000000
    Step 14: arch=[[64], [8192, 8192], [2048], [8], [8, 8]], score=-100.000000
    Step 15: arch=[[16, 16, 16, 16, 16], [8, 8, 8], [32, 32, 32], [4], [64, 64, 64, 64, 64]], score=0.014739
    Step 16: arch=[[128, 128, 128, 128], [512, 512, 512, 512], [32], [128, 128, 128, 128, 128], [1024, 1024, 1024, 1024, 1024]], score=0.089784
    Step 17: arch=[[16], [2048, 2048, 2048, 2048], [64, 64, 64, 64, 64], [2048], [2048, 2048, 2048]], score=-100.000000
    Step 18: arch=[[1024, 1024, 1024, 1024], [2048, 2048], [8192, 8192, 8192], [8, 8, 8, 8, 8], [8192, 8192, 8192]], score=-100.000000
    Step 19: arch=[[8192, 8192, 8192, 8192], [2, 2], [8, 8], [512, 512], [2, 2, 2, 2]], score=-100.000000
    Step 20: arch=[[256, 256], [8192, 8192, 8192], [64, 64, 64, 64, 64], [4, 4, 4, 4], [4, 4, 4]], score=-100.000000
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4096, 4096, 4096, 4096, 4096], [512], [2048, 2048, 2048, 2048], [4, 4], [512, 512, 512, 512, 512]], score=-100.000000
    Step 2: arch=[[4096, 4096, 4096, 4096], [512, 512], [2048, 2048, 2048, 2048, 2048], [512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[4, 4, 4, 4, 4], [512], [16, 16, 16, 16, 16], [4096, 4096, 4096], [64]], score=-100.000000
    Step 4: arch=[[512, 512, 512, 512], [4096, 4096], [2048], [4], [8192, 8192]], score=-100.000000
    Step 5: arch=[[32, 32, 32], [2048, 2048, 2048], [2], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512]], score=-100.000000
    Step 6: arch=[[512], [32, 32, 32, 32, 32], [4096, 4096, 4096, 4096, 4096], [512], [2, 2, 2, 2]], score=-100.000000
    Step 7: arch=[[256, 256], [256, 256, 256], [8, 8, 8, 8], [2, 2, 2, 2, 2], [32, 32, 32, 32]], score=0.016006
    Step 8: arch=[[2048, 2048, 2048], [8, 8, 8], [4, 4, 4], [16, 16, 16, 16], [2, 2]], score=-100.000000
    Step 9: arch=[[2048, 2048], [512], [2, 2, 2], [4096], [256, 256, 256, 256, 256]], score=-100.000000
    Step 10: arch=[[2, 2, 2, 2], [4], [128, 128, 128], [8192, 8192, 8192, 8192, 8192], [256, 256, 256, 256]], score=-100.000000
    Step 11: arch=[[1024, 1024], [64, 64, 64, 64, 64], [16, 16, 16], [256], [2]], score=0.041857
    Step 12: arch=[[64, 64, 64, 64, 64], [2, 2, 2, 2], [1024, 1024], [2, 2, 2], [64, 64, 64, 64, 64]], score=0.057177
    Step 13: arch=[[128, 128, 128], [4, 4, 4], [512, 512, 512, 512], [512, 512, 512, 512], [128, 128]], score=0.054777
    Step 14: arch=[[2048], [16, 16], [128, 128, 128], [8], [2, 2]], score=0.015317
    Step 15: arch=[[4, 4, 4, 4, 4], [8, 8, 8], [32], [2048, 2048, 2048, 2048], [4096]], score=-100.000000
    Step 16: arch=[[16], [64, 64], [4, 4, 4, 4, 4], [1024, 1024], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 17: arch=[[2048, 2048, 2048], [1024, 1024], [256, 256], [16], [32, 32, 32]], score=-100.000000
    Step 18: arch=[[2048, 2048, 2048], [8, 8, 8, 8], [2048, 2048, 2048], [4096, 4096, 4096, 4096], [128, 128]], score=-100.000000
    Step 19: arch=[[1024, 1024, 1024, 1024], [128, 128], [4096, 4096, 4096], [4096, 4096, 4096, 4096, 4096], [64, 64, 64, 64, 64]], score=-100.000000
    Step 20: arch=[[1024, 1024, 1024], [32, 32, 32, 32, 32], [64, 64], [8, 8, 8, 8], [2048, 2048, 2048]], score=-100.000000

Method: Skopt-GP
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64], [32, 32, 32, 32], [4, 4, 4, 4], [16, 16, 16, 16], [128, 128, 128]], score=0.014551
    Step 2: arch=[[512, 512, 512, 512], [32, 32, 32], [4096, 4096, 4096], [8, 8, 8, 8], [2048, 2048]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [128, 128, 128, 128], [1024, 1024, 1024], [4, 4, 4, 4], [128, 128, 128, 128]], score=0.061619
    Step 4: arch=[[8, 8], [16, 16, 16, 16], [64, 64], [4096, 4096], [64, 64]], score=-100.000000
    Step 5: arch=[[8, 8, 8], [32, 32, 32, 32, 32], [1024], [256, 256, 256, 256, 256], [32, 32, 32, 32]], score=0.062852
    Step 6: arch=[[8192], [256, 256, 256, 256], [64, 64, 64, 64, 64], [128, 128, 128, 128], [256, 256, 256, 256]], score=-100.000000
    Step 7: arch=[[512, 512], [2, 2, 2, 2], [256, 256], [512, 512, 512, 512], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 8: arch=[[64, 64, 64, 64, 64], [8192, 8192, 8192], [32], [128, 128, 128], [512]], score=-100.000000
    Step 9: arch=[[128, 128, 128, 128, 128], [4096, 4096, 4096, 4096, 4096], [4096, 4096], [4, 4, 4], [16, 16, 16, 16]], score=-100.000000
    Step 10: arch=[[1024, 1024], [2048], [512, 512], [8], [64]], score=0.097349
    Step 11: arch=[[8, 8], [128, 128], [8, 8, 8, 8], [4, 4, 4], [2]], score=-0.017771
    Step 12: arch=[[8, 8], [512], [2, 2, 2, 2, 2], [2, 2, 2, 2], [2]], score=-0.020336
    Step 13: arch=[[2048, 2048], [4096], [8192], [512], [8192, 8192, 8192]], score=-100.000000
    Step 14: arch=[[4096, 4096, 4096], [8192, 8192, 8192, 8192, 8192], [8192], [16, 16, 16, 16, 16], [2, 2, 2, 2, 2]], score=-100.000000
    Step 15: arch=[[512, 512], [1024, 1024], [128, 128], [128, 128], [16, 16]], score=0.041712
    Step 16: arch=[[16, 16], [512, 512], [4, 4, 4], [16, 16, 16], [16, 16, 16]], score=-0.006870
    Step 17: arch=[[16, 16, 16], [4, 4, 4, 4, 4], [8192, 8192], [1024, 1024, 1024], [256, 256, 256]], score=-100.000000
    Step 18: arch=[[2], [2], [2, 2, 2, 2, 2], [4], [2]], score=-0.036565
    Step 19: arch=[[32, 32, 32], [256, 256], [32, 32], [32, 32], [64]], score=-0.013752
    Step 20: arch=[[4, 4], [2, 2, 2, 2, 2], [512, 512, 512, 512], [32, 32, 32, 32, 32], [32, 32, 32, 32]], score=0.036198
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64, 64], [64, 64, 64, 64, 64], [512, 512], [4096, 4096, 4096, 4096, 4096], [2048, 2048]], score=-100.000000
    Step 2: arch=[[4096, 4096], [64, 64, 64], [64, 64, 64], [4096, 4096], [1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [2048, 2048, 2048, 2048], [16], [4, 4, 4], [512, 512, 512, 512]], score=-100.000000
    Step 4: arch=[[8, 8, 8], [1024, 1024, 1024, 1024], [64, 64, 64], [2, 2], [256, 256]], score=0.073567
    Step 5: arch=[[128, 128, 128, 128], [4, 4], [4096, 4096, 4096], [4, 4], [128]], score=-100.000000
    Step 6: arch=[[256], [256, 256, 256, 256, 256], [4096, 4096, 4096, 4096, 4096], [16, 16], [16, 16, 16]], score=-100.000000
    Step 7: arch=[[4, 4, 4], [8, 8, 8, 8, 8], [2048, 2048, 2048], [2, 2, 2], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[512, 512, 512], [32, 32, 32], [256, 256, 256, 256, 256], [512, 512, 512], [8, 8, 8]], score=0.057101
    Step 9: arch=[[1024, 1024, 1024, 1024], [4096, 4096, 4096, 4096], [2, 2], [128, 128, 128, 128], [4, 4]], score=-100.000000
    Step 10: arch=[[2, 2, 2, 2, 2], [8192, 8192, 8192, 8192, 8192], [64, 64, 64, 64], [2, 2], [256]], score=-100.000000
    Step 11: arch=[[8, 8], [64, 64, 64, 64], [16, 16, 16], [8, 8, 8], [256, 256]], score=-0.000471
    Step 12: arch=[[4, 4], [128, 128, 128], [256, 256, 256], [128, 128], [32, 32]], score=0.000833
    Step 13: arch=[[4, 4], [2048, 2048, 2048, 2048], [1024, 1024, 1024], [8, 8], [8, 8]], score=-100.000000
    Step 14: arch=[[32, 32, 32], [16, 16, 16], [256, 256, 256, 256], [64, 64, 64], [128, 128, 128]], score=0.013371
    Step 15: arch=[[8192, 8192], [2048, 2048, 2048], [256, 256, 256, 256, 256], [8192, 8192, 8192, 8192], [2]], score=-100.000000
    Step 16: arch=[[16, 16], [8, 8, 8, 8], [128, 128, 128, 128, 128], [128, 128, 128], [16, 16, 16]], score=0.012588
    Step 17: arch=[[4, 4, 4], [64, 64, 64], [128, 128, 128], [512, 512], [32, 32]], score=0.021276
    Step 18: arch=[[16], [64, 64, 64], [64, 64, 64, 64], [4, 4], [64, 64, 64]], score=-0.012443
    Step 19: arch=[[256, 256, 256], [8192, 8192, 8192], [128, 128, 128], [1024], [16, 16, 16, 16]], score=-100.000000
    Step 20: arch=[[128, 128], [32, 32, 32], [128, 128, 128, 128, 128], [512, 512, 512, 512], [128, 128, 128]], score=0.037927
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[8, 8], [512, 512, 512, 512, 512], [4, 4, 4, 4, 4], [128, 128, 128], [512, 512]], score=0.040904
    Step 2: arch=[[16, 16, 16, 16], [256, 256, 256, 256], [64, 64, 64], [8, 8, 8], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[256, 256], [16, 16], [1024], [256, 256], [8, 8, 8]], score=0.026424
    Step 4: arch=[[256, 256], [8192, 8192, 8192], [4, 4, 4, 4], [8, 8, 8, 8], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 5: arch=[[2048, 2048, 2048], [32, 32], [128, 128, 128, 128, 128], [16, 16], [2048, 2048]], score=-100.000000
    Step 6: arch=[[1024, 1024, 1024, 1024], [64, 64, 64, 64, 64], [4096, 4096, 4096, 4096], [4096, 4096, 4096], [128, 128]], score=-100.000000
    Step 7: arch=[[32, 32, 32, 32], [1024, 1024, 1024, 1024], [4096, 4096, 4096], [1024, 1024, 1024, 1024, 1024], [128, 128, 128]], score=-100.000000
    Step 8: arch=[[2, 2, 2, 2, 2], [1024, 1024, 1024], [32, 32, 32], [16, 16, 16], [32, 32, 32, 32, 32]], score=0.067405
    Step 9: arch=[[2048, 2048, 2048, 2048, 2048], [64, 64], [512, 512, 512], [32, 32, 32, 32], [64, 64, 64, 64, 64]], score=-100.000000
    Step 10: arch=[[2], [2], [2, 2, 2, 2, 2], [2], [2]], score=-0.036644
    Step 11: arch=[[4], [512, 512, 512, 512, 512], [2, 2, 2, 2], [256, 256], [64]], score=0.025771
    Step 12: arch=[[8, 8, 8, 8, 8], [4096], [32, 32], [2], [2, 2, 2, 2]], score=-0.003198
    Step 13: arch=[[128], [2], [64, 64, 64], [16], [16]], score=-0.035249
    Step 14: arch=[[2, 2, 2, 2, 2], [256, 256], [2, 2, 2, 2, 2], [2, 2, 2], [32, 32, 32, 32, 32]], score=0.017838
    Step 15: arch=[[2, 2], [8192, 8192, 8192, 8192, 8192], [8192], [8192, 8192, 8192], [256, 256, 256]], score=-100.000000
    Step 16: arch=[[512], [8192, 8192, 8192, 8192, 8192], [4096], [8192], [2]], score=-100.000000
    Step 17: arch=[[4, 4, 4], [512, 512, 512], [4, 4, 4, 4, 4], [128], [128, 128]], score=0.010620
    Step 18: arch=[[32, 32, 32, 32, 32], [1024, 1024], [2048, 2048, 2048], [16, 16, 16, 16, 16], [8, 8, 8, 8]], score=-100.000000
    Step 19: arch=[[2], [128, 128, 128], [2], [8, 8], [8, 8, 8, 8]], score=-0.015866
    Step 20: arch=[[2, 2, 2, 2, 2], [1024, 1024], [64, 64, 64, 64, 64], [1024, 1024], [16, 16]], score=0.081709
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [2, 2, 2, 2], [16], [4, 4, 4], [512, 512, 512]], score=-0.002804
    Step 2: arch=[[4096, 4096], [1024, 1024, 1024], [8192, 8192], [64, 64], [256, 256, 256]], score=-100.000000
    Step 3: arch=[[2048, 2048], [16, 16, 16], [4096, 4096], [1024, 1024, 1024], [2, 2, 2, 2]], score=-100.000000
    Step 4: arch=[[64, 64], [1024, 1024], [1024, 1024, 1024, 1024], [2, 2, 2], [32, 32, 32]], score=0.075089
    Step 5: arch=[[512, 512, 512], [2048, 2048, 2048, 2048], [2048, 2048, 2048], [32, 32], [4, 4, 4, 4]], score=-100.000000
    Step 6: arch=[[32, 32, 32, 32], [128], [64, 64, 64, 64], [2048, 2048, 2048, 2048], [32, 32, 32]], score=-100.000000
    Step 7: arch=[[8, 8, 8, 8], [32, 32, 32], [2048, 2048, 2048], [32, 32, 32, 32], [2, 2, 2]], score=0.104253
    Step 8: arch=[[4096, 4096, 4096], [16], [8, 8, 8], [8192, 8192, 8192, 8192, 8192], [512, 512]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32], [128], [64], [2048, 2048, 2048, 2048], [256, 256]], score=-100.000000
    Step 10: arch=[[4, 4], [64, 64, 64, 64], [128, 128], [8, 8, 8], [64, 64, 64]], score=0.002534
    Step 11: arch=[[8, 8, 8], [32], [1024, 1024, 1024, 1024], [8, 8, 8], [2]], score=0.023123
    Step 12: arch=[[16, 16, 16], [4, 4, 4], [256, 256, 256], [4, 4, 4, 4], [4, 4, 4, 4]], score=0.013793
    Step 13: arch=[[64], [512, 512], [64, 64], [16], [128]], score=-0.023684
    Step 14: arch=[[8, 8, 8, 8, 8], [8192, 8192], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4], [2, 2, 2]], score=-100.000000
    Step 15: arch=[[8, 8, 8, 8, 8], [2, 2, 2, 2, 2], [8192], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4, 4]], score=-100.000000
    Step 16: arch=[[8, 8, 8, 8, 8], [64, 64, 64, 64, 64], [8192], [8192, 8192, 8192, 8192, 8192], [64, 64, 64, 64, 64]], score=-100.000000
    Step 17: arch=[[8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [2048], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32]], score=-100.000000
    Step 18: arch=[[8], [2, 2, 2, 2], [4, 4], [8, 8, 8], [256, 256, 256, 256]], score=-0.001744
    Step 19: arch=[[64, 64], [128, 128], [32], [32], [256]], score=-0.024489
    Step 20: arch=[[4, 4, 4, 4], [32, 32, 32, 32], [8192], [8, 8, 8, 8], [512, 512, 512, 512]], score=0.124663
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[8, 8, 8, 8, 8], [16, 16], [512, 512, 512, 512], [4096, 4096, 4096], [512, 512, 512]], score=-100.000000
    Step 2: arch=[[2048], [256, 256, 256], [16, 16], [512, 512, 512], [2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[4], [8], [2048, 2048, 2048, 2048, 2048], [2048, 2048, 2048], [4096, 4096, 4096]], score=-100.000000
    Step 4: arch=[[16, 16, 16, 16], [8, 8, 8, 8], [32, 32], [16], [64, 64]], score=0.003526
    Step 5: arch=[[128, 128, 128, 128], [32, 32], [4, 4], [16, 16, 16], [4, 4]], score=-0.001165
    Step 6: arch=[[512, 512, 512, 512, 512], [4096, 4096], [32, 32, 32, 32], [4096, 4096], [512]], score=-100.000000
    Step 7: arch=[[512, 512], [512, 512, 512, 512, 512], [4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]], score=0.057349
    Step 8: arch=[[8, 8], [256, 256, 256, 256], [4096], [32], [2, 2, 2, 2, 2]], score=0.119809
    Step 9: arch=[[2048, 2048, 2048], [1024, 1024], [512, 512, 512, 512], [512, 512, 512, 512, 512], [4096, 4096]], score=-100.000000
    Step 10: arch=[[32], [256, 256, 256, 256, 256], [512, 512, 512, 512], [2, 2, 2], [32, 32, 32, 32, 32]], score=0.034002
    Step 11: arch=[[2048, 2048], [32, 32, 32, 32, 32], [4096], [8192], [64]], score=-100.000000
    Step 12: arch=[[8192], [2], [8192, 8192, 8192, 8192, 8192], [8, 8], [8192]], score=-100.000000
    Step 13: arch=[[2048], [8192, 8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [32], [32, 32, 32, 32, 32]], score=-100.000000
    Step 14: arch=[[2], [8192, 8192, 8192, 8192, 8192], [64, 64, 64], [2, 2, 2], [2, 2, 2, 2, 2]], score=-100.000000
    Step 15: arch=[[256, 256, 256, 256], [256, 256], [4], [16], [16]], score=-0.004749
    Step 16: arch=[[256], [8192, 8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [2, 2, 2, 2, 2], [128, 128, 128, 128, 128]], score=-100.000000
    Step 17: arch=[[2, 2, 2, 2], [8, 8, 8, 8, 8], [512, 512, 512], [2], [4, 4, 4, 4, 4]], score=0.034992
    Step 18: arch=[[2], [16, 16, 16, 16, 16], [1024, 1024, 1024, 1024], [2, 2, 2, 2], [32]], score=0.039118
    Step 19: arch=[[2], [512, 512, 512, 512, 512], [8192, 8192, 8192], [16], [16, 16, 16, 16]], score=-100.000000
    Step 20: arch=[[64], [128, 128, 128, 128], [1024, 1024], [4, 4, 4], [2, 2, 2]], score=0.027514
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64], [32, 32, 32, 32], [128, 128], [8192, 8192, 8192, 8192, 8192], [2048]], score=-100.000000
    Step 2: arch=[[8, 8, 8, 8], [4, 4, 4, 4], [4096, 4096], [128, 128, 128, 128], [128]], score=-100.000000
    Step 3: arch=[[4096, 4096, 4096, 4096], [4096], [256], [4, 4, 4, 4], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 4: arch=[[32, 32, 32], [512, 512, 512, 512], [2048, 2048, 2048, 2048], [4096, 4096, 4096], [2, 2, 2]], score=-100.000000
    Step 5: arch=[[256, 256, 256, 256], [4, 4, 4, 4], [8, 8], [32, 32, 32, 32], [256, 256, 256]], score=0.026727
    Step 6: arch=[[4, 4], [16], [16, 16, 16, 16, 16], [4096, 4096], [64, 64, 64]], score=-100.000000
    Step 7: arch=[[512, 512, 512], [64, 64], [256, 256], [16, 16, 16, 16], [8, 8, 8, 8, 8]], score=0.028144
    Step 8: arch=[[32, 32, 32, 32], [4096, 4096, 4096, 4096], [16, 16, 16, 16], [4096, 4096], [4096, 4096]], score=-100.000000
    Step 9: arch=[[1024], [32, 32, 32, 32], [2, 2, 2, 2, 2], [8, 8], [32, 32, 32]], score=0.014977
    Step 10: arch=[[256, 256, 256, 256, 256], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [256, 256, 256], [4096]], score=0.083775
    Step 11: arch=[[1024, 1024, 1024, 1024], [1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2, 2], [8192], [8192]], score=-100.000000
    Step 12: arch=[[1024, 1024, 1024, 1024, 1024], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[512, 512, 512], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [128], [512]], score=0.030285
    Step 14: arch=[[1024, 1024], [256, 256, 256, 256, 256], [8, 8, 8, 8, 8], [32], [32]], score=0.047170
    Step 15: arch=[[2048], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [8], [2]], score=0.030939
    Step 16: arch=[[256], [128], [2048, 2048], [128], [2048]], score=0.065664
    Step 17: arch=[[512], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2], [2], [2]], score=-0.000031
    Step 18: arch=[[4096, 4096], [128, 128], [2048, 2048], [4], [2]], score=-100.000000
    Step 19: arch=[[4096, 4096, 4096], [256, 256, 256, 256, 256], [8], [2048, 2048], [4096]], score=-100.000000
    Step 20: arch=[[32, 32], [256, 256, 256, 256, 256], [8, 8, 8, 8, 8], [64, 64], [2048]], score=0.023704
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4, 4, 4, 4, 4], [256, 256], [128], [128, 128], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[4096, 4096, 4096, 4096], [128, 128, 128], [512, 512], [2048, 2048], [64, 64, 64, 64]], score=-100.000000
    Step 3: arch=[[256, 256, 256, 256], [4, 4], [16, 16], [16, 16, 16], [2048, 2048, 2048]], score=0.079781
    Step 4: arch=[[2048, 2048, 2048], [4096, 4096, 4096], [2048, 2048, 2048, 2048], [32, 32, 32, 32], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 5: arch=[[1024, 1024, 1024], [16, 16, 16], [512, 512, 512, 512], [4, 4], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[16, 16, 16], [64, 64, 64], [256, 256], [256, 256, 256, 256], [256, 256, 256]], score=0.025575
    Step 7: arch=[[16, 16, 16], [4096, 4096, 4096, 4096], [8192, 8192, 8192, 8192, 8192], [256, 256, 256], [256, 256, 256]], score=-100.000000
    Step 8: arch=[[64, 64, 64], [256, 256, 256], [128, 128, 128], [512, 512], [4]], score=0.022491
    Step 9: arch=[[4, 4, 4, 4], [32, 32, 32, 32], [512, 512], [16, 16, 16], [64, 64, 64]], score=0.026949
    Step 10: arch=[[8192, 8192, 8192, 8192, 8192], [2], [4], [2], [8192, 8192, 8192]], score=-100.000000
    Step 11: arch=[[64, 64, 64, 64, 64], [2, 2], [2, 2], [2, 2, 2, 2, 2], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 12: arch=[[8192, 8192, 8192, 8192, 8192], [2], [2, 2], [2, 2, 2], [4096, 4096]], score=-100.000000
    Step 13: arch=[[4, 4], [256, 256, 256, 256], [256, 256], [256, 256, 256, 256, 256], [8, 8, 8]], score=0.031014
    Step 14: arch=[[128, 128, 128], [64, 64, 64], [16, 16, 16], [1024, 1024], [4, 4]], score=0.049199
    Step 15: arch=[[8192, 8192, 8192, 8192], [4], [16, 16], [32], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 16: arch=[[16, 16, 16], [512, 512, 512, 512], [64], [256, 256, 256, 256, 256], [4, 4, 4, 4]], score=0.045965
    Step 17: arch=[[2048, 2048, 2048], [8], [16, 16, 16, 16], [16, 16], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 18: arch=[[64, 64, 64], [64, 64, 64, 64, 64], [2], [8, 8, 8, 8], [2, 2, 2]], score=0.015134
    Step 19: arch=[[8192, 8192, 8192, 8192], [4], [8], [16, 16], [1024, 1024, 1024]], score=-100.000000
    Step 20: arch=[[64, 64, 64], [8], [1024, 1024], [512], [4096, 4096]], score=-100.000000
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16, 16], [4, 4], [64, 64, 64, 64, 64], [2, 2, 2], [128, 128]], score=-0.010642
    Step 2: arch=[[512, 512, 512, 512], [32, 32], [4096, 4096, 4096], [16, 16, 16, 16], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 3: arch=[[64, 64], [64, 64, 64, 64], [32, 32], [8, 8, 8, 8], [4, 4, 4, 4, 4]], score=0.010816
    Step 4: arch=[[64, 64, 64], [4096, 4096, 4096], [8, 8, 8, 8, 8], [8, 8], [4, 4]], score=-100.000000
    Step 5: arch=[[64, 64, 64], [8192, 8192], [2048, 2048], [32, 32, 32, 32, 32], [32, 32, 32]], score=-100.000000
    Step 6: arch=[[512, 512, 512], [64, 64, 64], [1024, 1024, 1024, 1024], [512, 512], [1024, 1024, 1024]], score=0.116281
    Step 7: arch=[[2048, 2048, 2048], [8, 8, 8, 8, 8], [64, 64], [512, 512, 512, 512], [512, 512, 512]], score=-100.000000
    Step 8: arch=[[64, 64, 64, 64], [512, 512, 512], [128], [64], [1024, 1024, 1024, 1024]], score=0.050150
    Step 9: arch=[[4, 4, 4, 4, 4], [2048, 2048], [128, 128, 128], [8, 8, 8, 8], [4096, 4096, 4096]], score=-100.000000
    Step 10: arch=[[64, 64, 64], [2048, 2048, 2048, 2048, 2048], [32, 32, 32], [16, 16], [32, 32, 32, 32]], score=-100.000000
    Step 11: arch=[[64, 64, 64, 64], [128, 128], [4096, 4096, 4096, 4096], [512], [2048, 2048]], score=-100.000000
    Step 12: arch=[[512, 512, 512, 512], [32, 32, 32], [2048, 2048], [1024], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[2048, 2048, 2048], [4, 4], [512, 512, 512, 512], [256], [4096, 4096]], score=-100.000000
    Step 14: arch=[[16, 16, 16, 16], [512, 512, 512], [32], [16, 16], [4, 4, 4, 4]], score=0.016476
    Step 15: arch=[[2, 2, 2, 2], [4, 4], [2048, 2048, 2048, 2048], [2, 2, 2], [256]], score=0.107622
    Step 16: arch=[[4], [64, 64], [64, 64], [64, 64], [8192]], score=0.031690
    Step 17: arch=[[2, 2, 2, 2, 2], [512, 512, 512, 512], [2048], [32, 32, 32], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 18: arch=[[128, 128, 128, 128], [512, 512], [4], [16], [2, 2, 2]], score=0.001174
    Step 19: arch=[[4], [4, 4, 4, 4], [4, 4, 4], [2048], [64, 64, 64, 64, 64]], score=0.076951
    Step 20: arch=[[16, 16, 16], [64, 64, 64, 64, 64], [8, 8], [128, 128, 128], [32, 32, 32]], score=0.017843
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256], [1024, 1024], [64, 64, 64], [2048, 2048, 2048, 2048], [4096, 4096, 4096]], score=-100.000000
    Step 2: arch=[[32, 32], [128, 128, 128, 128], [2048, 2048, 2048], [4, 4, 4, 4], [16]], score=0.094601
    Step 3: arch=[[128, 128], [4096, 4096, 4096, 4096], [128, 128], [512, 512], [4, 4, 4]], score=-100.000000
    Step 4: arch=[[8, 8], [4, 4], [512, 512, 512], [4, 4, 4, 4], [128, 128]], score=0.002870
    Step 5: arch=[[16, 16, 16, 16], [256, 256], [16, 16, 16, 16], [8], [32, 32, 32, 32, 32]], score=0.004007
    Step 6: arch=[[64, 64, 64], [256, 256], [512, 512, 512, 512], [128, 128, 128, 128], [1024, 1024, 1024, 1024]], score=0.060853
    Step 7: arch=[[2, 2, 2], [16, 16, 16], [1024, 1024, 1024, 1024], [4096, 4096, 4096], [4]], score=-100.000000
    Step 8: arch=[[1024, 1024, 1024, 1024], [2, 2, 2, 2, 2], [4, 4, 4, 4], [16, 16, 16], [32]], score=0.082758
    Step 9: arch=[[256, 256, 256, 256, 256], [128, 128, 128], [256, 256, 256], [16, 16, 16, 16], [64, 64]], score=0.032441
    Step 10: arch=[[8192, 8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [8192, 8192, 8192, 8192, 8192], [2], [2]], score=-100.000000
    Step 11: arch=[[256, 256, 256], [2, 2, 2, 2, 2], [4, 4, 4], [32], [4096]], score=0.035698
    Step 12: arch=[[1024], [8192, 8192, 8192, 8192, 8192], [8192], [8, 8, 8, 8, 8], [2]], score=-100.000000
    Step 13: arch=[[2], [64, 64, 64, 64, 64], [2048, 2048, 2048, 2048], [2], [4096]], score=0.119901
    Step 14: arch=[[512], [64, 64, 64, 64, 64], [2048], [2], [2, 2, 2, 2, 2]], score=0.062169
    Step 15: arch=[[4096, 4096, 4096, 4096], [512], [8, 8, 8, 8, 8], [4, 4, 4, 4, 4], [4, 4]], score=-100.000000
    Step 16: arch=[[32, 32, 32, 32], [32, 32, 32], [4, 4, 4, 4, 4], [64, 64, 64, 64, 64], [2]], score=0.013164
    Step 17: arch=[[128, 128, 128, 128], [128, 128, 128, 128, 128], [2048, 2048, 2048, 2048], [8, 8], [8192]], score=0.122364
    Step 18: arch=[[256, 256, 256, 256], [16, 16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048], [64], [1024]], score=-100.000000
    Step 19: arch=[[512, 512, 512], [512, 512, 512], [1024, 1024, 1024], [32], [64]], score=0.070810
    Step 20: arch=[[4096, 4096, 4096, 4096], [2], [64, 64, 64, 64, 64], [256, 256, 256, 256, 256], [2, 2, 2, 2]], score=-100.000000
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4096, 4096], [8, 8, 8], [8], [64, 64], [128]], score=-100.000000
    Step 2: arch=[[8, 8], [8, 8], [4096, 4096, 4096, 4096], [256, 256, 256, 256, 256], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 3: arch=[[2048, 2048, 2048, 2048], [4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [128, 128, 128]], score=-100.000000
    Step 4: arch=[[2048, 2048], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256], [4, 4, 4, 4], [8, 8, 8]], score=0.119730
    Step 5: arch=[[4096, 4096, 4096], [64, 64, 64], [16, 16], [32, 32, 32, 32, 32], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[16], [8, 8], [8, 8], [4, 4, 4], [512, 512, 512, 512]], score=-0.009155
    Step 7: arch=[[4, 4, 4, 4], [4096, 4096], [2048], [2, 2, 2, 2], [16, 16, 16]], score=-100.000000
    Step 8: arch=[[128, 128, 128, 128], [128, 128], [2048, 2048, 2048], [2], [32, 32, 32, 32]], score=0.096997
    Step 9: arch=[[8192, 8192, 8192], [1024, 1024], [256, 256], [1024], [8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[64, 64], [32, 32], [4], [4], [16, 16, 16, 16, 16]], score=-0.015177
    Step 11: arch=[[128, 128, 128, 128], [64, 64], [128], [2, 2, 2], [128, 128, 128, 128]], score=0.007811
    Step 12: arch=[[16, 16, 16, 16], [8192, 8192], [2], [2], [2]], score=-100.000000
    Step 13: arch=[[256, 256, 256], [256, 256], [8192, 8192, 8192, 8192, 8192], [8], [16, 16, 16, 16]], score=-100.000000
    Step 14: arch=[[1024, 1024, 1024], [2048, 2048], [512, 512, 512], [64, 64], [4096]], score=-100.000000
    Step 15: arch=[[2048, 2048, 2048], [8, 8, 8, 8, 8], [4096, 4096, 4096, 4096, 4096], [2, 2, 2], [8192, 8192, 8192]], score=-100.000000
    Step 16: arch=[[64, 64], [32, 32], [64, 64], [4], [64, 64, 64, 64]], score=-0.014906
    Step 17: arch=[[256, 256, 256, 256], [8192, 8192], [8192, 8192, 8192, 8192, 8192], [2], [2, 2, 2]], score=-100.000000
    Step 18: arch=[[32, 32], [2048], [1024], [64, 64], [8]], score=0.045423
    Step 19: arch=[[128, 128, 128, 128], [512], [1024, 1024], [8, 8, 8], [256, 256, 256, 256, 256]], score=0.049457
    Step 20: arch=[[64], [8192], [8192, 8192], [128, 128], [4]], score=-100.000000

Method: Skopt-RF
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16], [64, 64, 64, 64], [8, 8, 8, 8], [32, 32, 32, 32], [256, 256]], score=-0.001080
    Step 2: arch=[[128], [256], [256, 256, 256, 256, 256], [512, 512, 512], [4, 4]], score=0.013507
    Step 3: arch=[[2, 2], [16], [64, 64], [2, 2, 2, 2, 2], [8, 8, 8, 8]], score=-0.010166
    Step 4: arch=[[16, 16, 16, 16], [256], [2, 2], [4, 4, 4, 4], [1024, 1024, 1024, 1024]], score=0.027120
    Step 5: arch=[[4096, 4096], [8], [256, 256, 256], [8192, 8192, 8192, 8192, 8192], [8, 8, 8, 8]], score=-100.000000
    Step 6: arch=[[4], [32], [1024, 1024, 1024, 1024, 1024], [2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[16], [128, 128], [256, 256], [4096, 4096], [8, 8]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [32], [4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [128, 128]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32, 32], [512, 512, 512, 512, 512], [32, 32, 32, 32], [16, 16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[8, 8, 8, 8], [512], [16], [128, 128, 128, 128], [16, 16]], score=-0.004180
    Step 11: arch=[[2, 2, 2, 2], [512, 512, 512, 512, 512], [4, 4], [16, 16, 16], [64, 64, 64]], score=0.041906
    Step 12: arch=[[32, 32], [8192], [16], [1024, 1024, 1024], [4096]], score=-100.000000
    Step 13: arch=[[2, 2], [8192, 8192, 8192, 8192, 8192], [16, 16], [16, 16, 16], [256]], score=-100.000000
    Step 14: arch=[[16], [4096, 4096, 4096, 4096], [2], [4, 4, 4, 4], [16]], score=-100.000000
    Step 15: arch=[[2, 2, 2, 2, 2], [8], [8], [128, 128, 128], [4, 4]], score=-0.001282
    Step 16: arch=[[4, 4, 4, 4, 4], [8, 8], [8], [64, 64], [16]], score=-0.004006
    Step 17: arch=[[2, 2, 2, 2], [128, 128, 128, 128, 128], [2, 2, 2, 2, 2], [4], [16, 16, 16]], score=0.017928
    Step 18: arch=[[128, 128, 128, 128], [64, 64], [8, 8], [256], [8, 8, 8, 8, 8]], score=0.011980
    Step 19: arch=[[1024, 1024, 1024, 1024], [512, 512, 512, 512, 512], [2, 2], [32, 32], [16, 16, 16, 16, 16]], score=0.119749
    Step 20: arch=[[8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048], [4], [16], [32, 32, 32]], score=-100.000000
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64], [2, 2, 2, 2, 2], [2], [4, 4], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 2: arch=[[32, 32, 32, 32, 32], [4096, 4096], [8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[128, 128, 128], [1024, 1024, 1024, 1024, 1024], [1024, 1024], [256, 256], [128]], score=-100.000000
    Step 4: arch=[[512, 512], [512, 512], [16], [2048, 2048, 2048, 2048, 2048], [1024, 1024]], score=-100.000000
    Step 5: arch=[[32], [512, 512, 512, 512], [4, 4], [4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[8, 8, 8], [2, 2, 2, 2, 2], [32], [1024, 1024, 1024, 1024], [8, 8]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [256, 256], [32], [4096, 4096], [64, 64, 64, 64]], score=-100.000000
    Step 8: arch=[[2048, 2048], [256, 256, 256, 256], [256], [1024], [256, 256, 256]], score=-100.000000
    Step 9: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [4, 4, 4], [4], [16]], score=0.022231
    Step 10: arch=[[2048, 2048, 2048, 2048, 2048], [1024, 1024, 1024], [128, 128, 128, 128], [8], [32]], score=-100.000000
    Step 11: arch=[[256, 256, 256, 256], [2, 2, 2], [8192, 8192], [128], [2]], score=-100.000000
    Step 12: arch=[[512], [4096, 4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024], [4], [4]], score=-100.000000
    Step 13: arch=[[4096], [4, 4], [16, 16, 16, 16], [2], [32]], score=0.051507
    Step 14: arch=[[64], [64], [32, 32, 32, 32, 32], [2], [8]], score=-0.034502
    Step 15: arch=[[8, 8], [256, 256], [4, 4, 4], [4], [2]], score=-0.025183
    Step 16: arch=[[4], [256, 256], [32, 32, 32], [4], [64]], score=-0.030664
    Step 17: arch=[[512, 512], [32, 32], [16, 16, 16], [4], [4]], score=-0.011739
    Step 18: arch=[[256, 256, 256], [4], [4, 4, 4, 4], [2], [256]], score=-0.016446
    Step 19: arch=[[16], [2048, 2048], [16, 16, 16], [2], [16, 16, 16, 16, 16]], score=0.073166
    Step 20: arch=[[1024, 1024, 1024], [8192, 8192], [8, 8, 8], [4], [32]], score=-100.000000
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256], [8, 8, 8, 8], [4, 4, 4], [4096, 4096, 4096, 4096], [64]], score=-100.000000
    Step 2: arch=[[128, 128, 128], [32, 32, 32, 32, 32], [2048, 2048, 2048, 2048, 2048], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [512, 512], [32, 32, 32], [128, 128, 128, 128, 128], [16, 16, 16, 16]], score=0.017890
    Step 4: arch=[[8, 8], [32, 32, 32], [2048], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256]], score=0.059692
    Step 5: arch=[[256], [4, 4, 4], [128, 128, 128], [512, 512], [2048]], score=0.037167
    Step 6: arch=[[16, 16], [2, 2], [4096, 4096], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[8, 8, 8], [8192], [1024, 1024, 1024, 1024, 1024], [128, 128, 128], [64]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512], [4], [128, 128, 128], [1024, 1024], [64, 64, 64, 64, 64]], score=0.076919
    Step 9: arch=[[32, 32], [64, 64, 64], [2048, 2048, 2048, 2048, 2048], [512, 512, 512], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[256, 256], [2, 2], [16, 16, 16, 16], [8, 8], [256, 256, 256, 256]], score=-0.002205
    Step 11: arch=[[512], [4], [128, 128, 128], [2], [1024, 1024, 1024, 1024, 1024]], score=0.022860
    Step 12: arch=[[8192, 8192], [2048, 2048, 2048], [128, 128], [256], [2, 2, 2, 2, 2]], score=-100.000000
    Step 13: arch=[[512], [4, 4, 4], [16, 16, 16], [8, 8], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 14: arch=[[256, 256, 256], [2, 2], [512, 512, 512, 512], [8], [1024, 1024, 1024, 1024, 1024]], score=0.054825
    Step 15: arch=[[256, 256, 256, 256, 256], [4], [512, 512, 512], [32], [8, 8, 8, 8, 8]], score=0.025455
    Step 16: arch=[[8192, 8192, 8192, 8192, 8192], [2], [128], [16], [8, 8, 8, 8, 8]], score=-100.000000
    Step 17: arch=[[256], [2, 2], [64, 64, 64], [64], [1024, 1024, 1024, 1024, 1024]], score=0.026015
    Step 18: arch=[[4, 4, 4, 4], [512, 512], [128, 128, 128, 128], [4], [256, 256, 256, 256, 256]], score=0.015341
    Step 19: arch=[[256], [64, 64], [512, 512, 512, 512, 512], [32], [512, 512, 512, 512, 512]], score=0.019510
    Step 20: arch=[[4, 4, 4, 4, 4], [4], [16, 16, 16], [64], [1024]], score=-0.003202
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [64, 64], [16, 16, 16, 16], [2048], [4096]], score=-100.000000
    Step 2: arch=[[8192, 8192], [256, 256], [512, 512, 512], [2048], [4, 4, 4, 4, 4]], score=-100.000000
    Step 3: arch=[[16, 16, 16], [2048, 2048, 2048], [64, 64, 64], [512, 512, 512, 512, 512], [4, 4]], score=-100.000000
    Step 4: arch=[[4, 4, 4], [4096], [2, 2, 2, 2], [64], [32, 32, 32, 32]], score=-0.014895
    Step 5: arch=[[1024, 1024], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [64], [512]], score=0.039557
    Step 6: arch=[[4096], [8192, 8192], [32, 32], [16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 7: arch=[[8], [4096], [256], [2], [64, 64, 64]], score=-0.006211
    Step 8: arch=[[8], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128], [2, 2, 2, 2, 2], [32], [4096, 4096, 4096, 4096], [4, 4, 4]], score=-100.000000
    Step 10: arch=[[512, 512, 512], [8192], [128, 128, 128, 128], [32], [64]], score=-100.000000
    Step 11: arch=[[2, 2, 2], [4096, 4096, 4096, 4096], [8, 8], [64], [1024]], score=-100.000000
    Step 12: arch=[[2048, 2048], [2048], [4, 4, 4, 4], [32], [64]], score=-100.000000
    Step 13: arch=[[2, 2], [512, 512, 512], [256], [128], [256, 256, 256]], score=0.012171
    Step 14: arch=[[2], [256, 256], [4096], [128], [32, 32, 32]], score=0.106272
    Step 15: arch=[[2, 2, 2], [1024, 1024, 1024], [4096], [64], [16, 16, 16]], score=0.123340
    Step 16: arch=[[2, 2], [256, 256, 256, 256, 256], [256], [128], [8]], score=0.008768
    Step 17: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256], [4096], [64], [256]], score=0.120461
    Step 18: arch=[[16], [32], [8192], [128], [16, 16, 16, 16]], score=0.122817
    Step 19: arch=[[256, 256, 256], [32, 32, 32, 32], [2048], [512], [32, 32, 32, 32, 32]], score=0.097743
    Step 20: arch=[[2, 2], [128, 128, 128, 128], [8192], [128], [1024, 1024, 1024, 1024]], score=0.125739
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2048, 2048], [8192], [256], [256, 256, 256], [256, 256]], score=-100.000000
    Step 2: arch=[[128, 128], [2048], [32, 32, 32, 32, 32], [16, 16, 16], [2, 2, 2, 2, 2]], score=0.002303
    Step 3: arch=[[8, 8], [2048], [256, 256, 256], [2], [512, 512]], score=-0.006258
    Step 4: arch=[[16, 16, 16, 16], [8, 8, 8], [16, 16], [8], [1024, 1024, 1024, 1024, 1024]], score=0.041906
    Step 5: arch=[[1024, 1024, 1024], [4096, 4096], [2], [8192, 8192], [256, 256]], score=-100.000000
    Step 6: arch=[[128, 128, 128], [256, 256, 256, 256], [2048, 2048, 2048, 2048], [256], [1024, 1024, 1024]], score=-100.000000
    Step 7: arch=[[4096, 4096, 4096], [4096, 4096, 4096, 4096], [16], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[128], [4096, 4096, 4096, 4096], [512, 512, 512], [32], [512, 512, 512, 512, 512]], score=-100.000000
    Step 9: arch=[[16, 16], [32, 32], [256, 256, 256, 256, 256], [128, 128, 128], [128, 128, 128, 128]], score=0.008422
    Step 10: arch=[[8, 8, 8, 8, 8], [128, 128, 128], [256], [4], [64, 64, 64, 64, 64]], score=0.018240
    Step 11: arch=[[4], [4, 4], [128, 128, 128, 128], [8, 8, 8, 8], [512, 512, 512, 512]], score=0.000665
    Step 12: arch=[[8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [2048, 2048, 2048], [16], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 13: arch=[[16, 16, 16, 16], [16, 16, 16], [512, 512], [8], [64, 64, 64, 64, 64]], score=0.019993
    Step 14: arch=[[16, 16, 16, 16, 16], [16, 16, 16], [512, 512, 512, 512], [8], [256, 256, 256, 256, 256]], score=0.035390
    Step 15: arch=[[8192, 8192, 8192, 8192], [64, 64, 64], [128, 128], [4, 4, 4, 4, 4], [128, 128, 128, 128, 128]], score=-100.000000
    Step 16: arch=[[16, 16, 16, 16], [4, 4, 4], [8, 8], [2, 2], [512, 512, 512]], score=0.008799
    Step 17: arch=[[16, 16, 16, 16], [16], [2], [32, 32, 32, 32, 32], [8, 8, 8, 8, 8]], score=0.004713
    Step 18: arch=[[32, 32, 32, 32], [1024, 1024, 1024], [2048, 2048, 2048], [8, 8], [4, 4, 4, 4, 4]], score=-100.000000
    Step 19: arch=[[4, 4, 4, 4], [4, 4, 4, 4, 4], [32], [16], [16, 16, 16, 16]], score=0.014549
    Step 20: arch=[[2, 2, 2], [2, 2, 2], [8192, 8192, 8192, 8192, 8192], [2], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [2, 2], [256], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4]], score=-100.000000
    Step 2: arch=[[32], [128, 128, 128, 128], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [1024, 1024]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [2, 2], [64, 64], [2048, 2048], [2, 2, 2]], score=-100.000000
    Step 4: arch=[[4096], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [128, 128], [1024, 1024, 1024, 1024]], score=0.119662
    Step 5: arch=[[8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096], [4096, 4096, 4096], [16, 16], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[1024, 1024], [64, 64, 64, 64], [256, 256, 256, 256], [2, 2, 2, 2], [2048, 2048]], score=0.089852
    Step 7: arch=[[128, 128], [4096], [512, 512, 512], [2, 2, 2, 2], [8192]], score=0.108932
    Step 8: arch=[[2, 2, 2, 2, 2], [512, 512, 512], [2048], [8192, 8192, 8192, 8192], [64]], score=-100.000000
    Step 9: arch=[[4096, 4096, 4096, 4096], [512, 512], [512, 512, 512, 512, 512], [4, 4, 4], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[2048], [8], [32, 32, 32, 32], [2], [2048]], score=0.016416
    Step 11: arch=[[1024, 1024], [4096, 4096, 4096, 4096, 4096], [128, 128, 128, 128, 128], [2, 2], [4096]], score=-100.000000
    Step 12: arch=[[1024, 1024], [16, 16, 16, 16, 16], [8192, 8192, 8192, 8192], [2], [512]], score=-100.000000
    Step 13: arch=[[2048], [32], [8, 8, 8], [2, 2, 2, 2], [2048, 2048]], score=0.058745
    Step 14: arch=[[128], [8], [8, 8, 8], [2, 2, 2], [4096, 4096]], score=-100.000000
    Step 15: arch=[[4096], [32], [32, 32, 32, 32], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=0.120421
    Step 16: arch=[[4096], [64], [256, 256, 256, 256], [2], [8]], score=0.059023
    Step 17: arch=[[1024], [32], [32, 32, 32, 32], [16, 16, 16, 16], [512]], score=-0.002478
    Step 18: arch=[[2048], [256], [8, 8, 8], [2, 2, 2, 2], [128, 128]], score=0.031276
    Step 19: arch=[[2048], [64], [256, 256, 256, 256], [16, 16, 16, 16, 16], [4096]], score=0.054757
    Step 20: arch=[[8192, 8192], [16], [4, 4, 4], [2, 2, 2, 2, 2], [2, 2]], score=-100.000000
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2, 2], [1024, 1024, 1024, 1024], [4, 4, 4, 4, 4], [4096, 4096, 4096], [1024, 1024, 1024]], score=-100.000000
    Step 2: arch=[[512, 512, 512], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [4096, 4096]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [64, 64, 64], [4, 4], [32, 32, 32], [64, 64, 64, 64]], score=0.004863
    Step 4: arch=[[8192], [4096, 4096, 4096], [1024, 1024, 1024], [64, 64, 64, 64], [8, 8, 8, 8, 8]], score=-100.000000
    Step 5: arch=[[16, 16, 16], [64], [4096, 4096, 4096], [4, 4, 4], [8, 8, 8]], score=-100.000000
    Step 6: arch=[[2, 2, 2, 2], [2048, 2048], [16, 16, 16, 16], [256, 256], [32]], score=0.094747
    Step 7: arch=[[32, 32, 32, 32], [4], [64, 64], [64, 64, 64, 64, 64], [4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[512, 512], [1024, 1024], [4, 4, 4, 4, 4], [8], [8, 8, 8]], score=0.035603
    Step 9: arch=[[4096, 4096], [128, 128, 128, 128, 128], [16, 16, 16], [4, 4, 4, 4, 4], [32, 32]], score=-100.000000
    Step 10: arch=[[1024, 1024, 1024], [4096], [8, 8], [2048, 2048], [128]], score=-100.000000
    Step 11: arch=[[128, 128, 128, 128], [8192, 8192, 8192], [2], [128, 128], [64]], score=-100.000000
    Step 12: arch=[[64], [16, 16], [2, 2, 2, 2], [2], [4, 4, 4, 4, 4]], score=-0.017144
    Step 13: arch=[[64, 64], [4, 4, 4, 4, 4], [4, 4, 4, 4], [16], [16, 16, 16, 16, 16]], score=0.010122
    Step 14: arch=[[2, 2], [8, 8], [4, 4, 4, 4, 4], [16], [8]], score=-0.022740
    Step 15: arch=[[32], [1024], [32, 32, 32, 32, 32], [2048], [16, 16]], score=0.051452
    Step 16: arch=[[8, 8, 8, 8], [4096, 4096, 4096, 4096], [2048, 2048, 2048, 2048, 2048], [128], [4, 4, 4, 4, 4]], score=-100.000000
    Step 17: arch=[[32], [2048, 2048, 2048], [2, 2, 2, 2], [256], [16, 16, 16, 16, 16]], score=-100.000000
    Step 18: arch=[[128], [2, 2], [4, 4, 4, 4], [32], [32, 32, 32]], score=-0.021104
    Step 19: arch=[[2, 2], [1024, 1024], [4, 4, 4, 4, 4], [32], [64]], score=0.000584
    Step 20: arch=[[512, 512, 512], [128, 128], [16, 16, 16, 16, 16], [8], [2048, 2048]], score=0.050178
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024, 1024, 1024], [256, 256], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[2, 2, 2], [4096], [256, 256, 256, 256, 256], [2048], [128, 128, 128, 128, 128]], score=0.112805
    Step 3: arch=[[256, 256, 256, 256], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2], [4096], [2]], score=0.122131
    Step 4: arch=[[256, 256, 256], [16], [16, 16], [512, 512, 512, 512, 512], [16, 16]], score=0.027711
    Step 5: arch=[[8192], [8192, 8192], [256], [256], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[64, 64], [32, 32, 32, 32], [16], [4, 4, 4, 4, 4], [16]], score=-0.001562
    Step 7: arch=[[32, 32, 32, 32], [16, 16, 16, 16], [4, 4], [4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[8, 8], [64, 64], [256, 256, 256], [16, 16, 16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 9: arch=[[1024, 1024, 1024], [8192], [16, 16, 16, 16, 16], [8192, 8192, 8192, 8192], [32, 32]], score=-100.000000
    Step 10: arch=[[128, 128, 128], [1024], [8], [16], [8]], score=-0.022713
    Step 11: arch=[[4096, 4096], [64, 64, 64], [64, 64, 64, 64], [4096], [4]], score=-100.000000
    Step 12: arch=[[512, 512, 512], [1024], [8, 8], [2048], [8]], score=0.087044
    Step 13: arch=[[32, 32, 32, 32], [1024], [8, 8, 8, 8, 8], [8192], [16]], score=0.127716
    Step 14: arch=[[16, 16, 16], [64], [8, 8, 8, 8], [8192, 8192], [2]], score=-100.000000
    Step 15: arch=[[512, 512, 512], [8], [16, 16, 16, 16, 16], [1024], [4]], score=0.035641
    Step 16: arch=[[2, 2, 2, 2], [8, 8, 8, 8], [8192, 8192, 8192, 8192, 8192], [2048], [16]], score=-100.000000
    Step 17: arch=[[128, 128, 128, 128], [2], [2], [2048], [8, 8]], score=0.064407
    Step 18: arch=[[256], [32], [2, 2, 2], [1024], [2, 2, 2, 2, 2]], score=0.018953
    Step 19: arch=[[256, 256, 256], [4096], [2, 2], [2048], [256, 256, 256]], score=0.106285
    Step 20: arch=[[256, 256, 256, 256, 256], [32], [2, 2, 2, 2], [8192], [16, 16, 16, 16]], score=0.128656
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16, 16, 16, 16, 16], [512, 512], [2, 2], [64, 64, 64], [8192]], score=0.065622
    Step 2: arch=[[1024, 1024], [8, 8, 8, 8], [4096, 4096, 4096], [8, 8, 8, 8], [128, 128, 128, 128, 128]], score=-100.000000
    Step 3: arch=[[2048], [1024, 1024], [2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[4096, 4096], [128, 128], [32, 32, 32, 32], [64, 64, 64, 64, 64], [512, 512, 512, 512]], score=-100.000000
    Step 5: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256], [32, 32, 32], [4096], [512, 512, 512]], score=0.124297
    Step 6: arch=[[8, 8], [8, 8, 8, 8, 8], [128, 128, 128, 128], [128, 128, 128, 128, 128], [128, 128, 128, 128]], score=0.028903
    Step 7: arch=[[256, 256, 256], [1024, 1024], [8], [128, 128], [2048, 2048, 2048]], score=0.104781
    Step 8: arch=[[2, 2, 2, 2], [128, 128, 128, 128], [1024], [256, 256], [32]], score=0.044021
    Step 9: arch=[[512, 512], [128, 128, 128, 128, 128], [8192], [64, 64, 64], [8, 8, 8]], score=0.125231
    Step 10: arch=[[512, 512, 512, 512, 512], [2, 2, 2, 2, 2], [4], [128, 128], [4096, 4096, 4096]], score=-100.000000
    Step 11: arch=[[16, 16, 16, 16], [2048, 2048, 2048, 2048], [2, 2, 2, 2, 2], [16], [8192, 8192]], score=-100.000000
    Step 12: arch=[[8, 8, 8, 8], [1024, 1024, 1024, 1024, 1024], [16, 16], [8192, 8192, 8192], [4096, 4096, 4096]], score=-100.000000
    Step 13: arch=[[64, 64], [128], [8], [2048], [16]], score=0.046716
    Step 14: arch=[[256, 256], [256, 256, 256, 256], [128], [512], [2, 2, 2]], score=0.027091
    Step 15: arch=[[64, 64, 64, 64, 64], [64, 64], [4], [1024, 1024, 1024, 1024, 1024], [64, 64, 64]], score=-100.000000
    Step 16: arch=[[128, 128, 128], [256, 256, 256], [8], [128, 128], [2, 2]], score=0.001950
    Step 17: arch=[[32, 32, 32, 32], [4096, 4096], [64], [512], [2, 2, 2]], score=-100.000000
    Step 18: arch=[[256, 256, 256], [256, 256], [512], [512], [2, 2, 2]], score=0.033321
    Step 19: arch=[[256], [512, 512, 512, 512], [4, 4, 4], [512, 512], [32, 32]], score=0.036100
    Step 20: arch=[[256], [32, 32, 32, 32, 32], [4096], [64, 64], [16, 16, 16, 16, 16]], score=0.117260
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4096, 4096, 4096, 4096, 4096], [512], [2048, 2048, 2048, 2048], [4, 4], [512, 512, 512, 512, 512]], score=-100.000000
    Step 2: arch=[[4096, 4096, 4096, 4096], [512, 512], [2048, 2048, 2048, 2048, 2048], [512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[4, 4, 4, 4, 4], [512], [16, 16, 16, 16, 16], [4096, 4096, 4096], [64]], score=-100.000000
    Step 4: arch=[[512, 512, 512, 512], [4096, 4096], [2048], [4], [8192, 8192]], score=-100.000000
    Step 5: arch=[[32, 32, 32], [2048, 2048, 2048], [2], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512]], score=-100.000000
    Step 6: arch=[[512], [32, 32, 32, 32, 32], [4096, 4096, 4096, 4096, 4096], [512], [2, 2, 2, 2]], score=-100.000000
    Step 7: arch=[[256, 256], [256, 256, 256], [8, 8, 8, 8], [2, 2, 2, 2, 2], [32, 32, 32, 32]], score=0.016006
    Step 8: arch=[[2048, 2048, 2048], [8, 8, 8], [4, 4, 4], [16, 16, 16, 16], [2, 2]], score=-100.000000
    Step 9: arch=[[2048, 2048], [512], [2, 2, 2], [4096], [256, 256, 256, 256, 256]], score=-100.000000
    Step 10: arch=[[4], [4, 4, 4, 4], [8], [2, 2, 2, 2, 2], [128, 128, 128, 128]], score=0.001152
    Step 11: arch=[[128], [2, 2, 2, 2], [4, 4], [8, 8, 8, 8, 8], [64, 64, 64, 64, 64]], score=0.008095
    Step 12: arch=[[2, 2], [8, 8, 8, 8], [32], [8, 8, 8, 8, 8], [64]], score=-0.002100
    Step 13: arch=[[2, 2], [2, 2], [32, 32], [4, 4, 4, 4, 4], [4, 4, 4, 4]], score=-0.004292
    Step 14: arch=[[128, 128], [4, 4, 4, 4, 4], [4, 4], [32, 32, 32, 32, 32], [16]], score=0.008930
    Step 15: arch=[[32], [16, 16, 16], [2], [8, 8, 8, 8, 8], [64, 64, 64, 64]], score=-0.005474
    Step 16: arch=[[256, 256], [16, 16, 16, 16], [4, 4, 4], [64, 64, 64, 64, 64], [1024]], score=0.015998
    Step 17: arch=[[64], [64, 64, 64, 64, 64], [2048, 2048], [2, 2, 2, 2, 2], [16]], score=0.073856
    Step 18: arch=[[128], [64, 64, 64, 64], [2048, 2048, 2048, 2048, 2048], [32, 32, 32, 32, 32], [4096]], score=-100.000000
    Step 19: arch=[[16], [16, 16, 16, 16, 16], [32], [2], [16, 16, 16, 16, 16]], score=-0.002335
    Step 20: arch=[[128, 128], [4, 4, 4, 4, 4], [128, 128], [64, 64, 64], [2]], score=0.006788

Method: Skopt-ET
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16], [64, 64, 64, 64], [8, 8, 8, 8], [32, 32, 32, 32], [256, 256]], score=-0.001080
    Step 2: arch=[[128], [256], [256, 256, 256, 256, 256], [512, 512, 512], [4, 4]], score=0.013507
    Step 3: arch=[[2, 2], [16], [64, 64], [2, 2, 2, 2, 2], [8, 8, 8, 8]], score=-0.010166
    Step 4: arch=[[16, 16, 16, 16], [256], [2, 2], [4, 4, 4, 4], [1024, 1024, 1024, 1024]], score=0.027120
    Step 5: arch=[[4096, 4096], [8], [256, 256, 256], [8192, 8192, 8192, 8192, 8192], [8, 8, 8, 8]], score=-100.000000
    Step 6: arch=[[4], [32], [1024, 1024, 1024, 1024, 1024], [2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[16], [128, 128], [256, 256], [4096, 4096], [8, 8]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [32], [4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [128, 128]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32, 32], [512, 512, 512, 512, 512], [32, 32, 32, 32], [16, 16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[4, 4], [512, 512], [64], [16, 16, 16, 16], [8, 8]], score=-0.008423
    Step 11: arch=[[16, 16], [256, 256, 256, 256, 256], [16, 16], [8, 8, 8, 8], [32, 32]], score=0.011645
    Step 12: arch=[[8], [256, 256, 256, 256, 256], [16, 16, 16], [4, 4], [16]], score=-0.003778
    Step 13: arch=[[32, 32, 32, 32], [256, 256], [4, 4, 4, 4], [2], [64, 64, 64, 64]], score=0.000814
    Step 14: arch=[[512, 512, 512, 512], [64, 64, 64, 64], [4], [4, 4], [128, 128, 128]], score=0.030652
    Step 15: arch=[[512, 512, 512, 512], [2, 2, 2, 2], [4, 4, 4, 4], [2, 2, 2], [1024, 1024]], score=0.047083
    Step 16: arch=[[2048, 2048, 2048, 2048, 2048], [4, 4, 4, 4], [32, 32, 32], [4], [4096, 4096, 4096]], score=-100.000000
    Step 17: arch=[[64, 64, 64, 64, 64], [256, 256, 256], [4, 4], [32, 32, 32, 32], [1024, 1024, 1024, 1024]], score=0.053130
    Step 18: arch=[[256, 256, 256, 256], [16, 16, 16], [2, 2, 2, 2], [64, 64, 64], [1024, 1024, 1024, 1024, 1024]], score=0.062349
    Step 19: arch=[[512, 512, 512, 512, 512], [4096, 4096, 4096, 4096], [2], [256, 256], [1024, 1024]], score=-100.000000
    Step 20: arch=[[512, 512, 512], [512, 512, 512, 512], [8, 8, 8, 8], [8], [1024, 1024, 1024, 1024, 1024]], score=0.087096
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64], [2, 2, 2, 2, 2], [2], [4, 4], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 2: arch=[[32, 32, 32, 32, 32], [4096, 4096], [8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[128, 128, 128], [1024, 1024, 1024, 1024, 1024], [1024, 1024], [256, 256], [128]], score=-100.000000
    Step 4: arch=[[512, 512], [512, 512], [16], [2048, 2048, 2048, 2048, 2048], [1024, 1024]], score=-100.000000
    Step 5: arch=[[32], [512, 512, 512, 512], [4, 4], [4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[8, 8, 8], [2, 2, 2, 2, 2], [32], [1024, 1024, 1024, 1024], [8, 8]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [256, 256], [32], [4096, 4096], [64, 64, 64, 64]], score=-100.000000
    Step 8: arch=[[2048, 2048], [256, 256, 256, 256], [256], [1024], [256, 256, 256]], score=-100.000000
    Step 9: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [4, 4, 4], [4], [16]], score=0.022231
    Step 10: arch=[[8192, 8192, 8192], [4096, 4096, 4096, 4096, 4096], [4096, 4096, 4096, 4096], [2], [2]], score=-100.000000
    Step 11: arch=[[4096, 4096, 4096], [16], [8, 8, 8, 8, 8], [4], [16]], score=-100.000000
    Step 12: arch=[[256, 256], [16], [256, 256, 256, 256, 256], [2], [2]], score=-0.016264
    Step 13: arch=[[256, 256], [4, 4], [1024, 1024], [8], [2]], score=0.008555
    Step 14: arch=[[2], [64], [64, 64, 64], [2], [128]], score=-0.037395
    Step 15: arch=[[8], [128], [256, 256, 256], [8], [64]], score=-0.031556
    Step 16: arch=[[2, 2], [16], [256, 256], [2], [2]], score=-0.028302
    Step 17: arch=[[512, 512], [32, 32], [16, 16, 16], [4], [4]], score=-0.011739
    Step 18: arch=[[128, 128], [8, 8], [128], [4], [16]], score=-0.023948
    Step 19: arch=[[64], [512, 512], [512, 512], [8], [8192]], score=0.046444
    Step 20: arch=[[4096], [4, 4], [16], [8], [64]], score=0.046967
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256], [8, 8, 8, 8], [4, 4, 4], [4096, 4096, 4096, 4096], [64]], score=-100.000000
    Step 2: arch=[[128, 128, 128], [32, 32, 32, 32, 32], [2048, 2048, 2048, 2048, 2048], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [512, 512], [32, 32, 32], [128, 128, 128, 128, 128], [16, 16, 16, 16]], score=0.017890
    Step 4: arch=[[8, 8], [32, 32, 32], [2048], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256]], score=0.059692
    Step 5: arch=[[256], [4, 4, 4], [128, 128, 128], [512, 512], [2048]], score=0.037167
    Step 6: arch=[[16, 16], [2, 2], [4096, 4096], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[8, 8, 8], [8192], [1024, 1024, 1024, 1024, 1024], [128, 128, 128], [64]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512], [4], [128, 128, 128], [1024, 1024], [64, 64, 64, 64, 64]], score=0.076919
    Step 9: arch=[[32, 32], [64, 64, 64], [2048, 2048, 2048, 2048, 2048], [512, 512, 512], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[1024, 1024, 1024, 1024], [8, 8, 8, 8], [128, 128, 128], [2048], [1024, 1024, 1024, 1024, 1024]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048, 2048], [32], [32, 32, 32], [2], [2, 2, 2, 2, 2]], score=-100.000000
    Step 12: arch=[[8192, 8192, 8192, 8192], [2048, 2048], [128], [256, 256], [2]], score=-100.000000
    Step 13: arch=[[4], [2048, 2048], [16], [1024, 1024], [32, 32, 32, 32, 32]], score=-100.000000
    Step 14: arch=[[512, 512], [2], [512, 512, 512], [64], [256]], score=0.000629
    Step 15: arch=[[256, 256], [2], [512, 512, 512], [64, 64], [256, 256, 256]], score=0.003515
    Step 16: arch=[[64, 64], [2], [1024, 1024, 1024], [64, 64], [256, 256, 256]], score=0.019460
    Step 17: arch=[[256, 256], [4], [512], [32, 32], [4, 4]], score=-0.009838
    Step 18: arch=[[512], [4, 4], [512], [64, 64], [512, 512]], score=0.001359
    Step 19: arch=[[128, 128], [4, 4, 4], [128, 128, 128], [64, 64], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 20: arch=[[64], [4], [512, 512], [64, 64, 64], [2]], score=-0.016815
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [64, 64], [16, 16, 16, 16], [2048], [4096]], score=-100.000000
    Step 2: arch=[[8192, 8192], [256, 256], [512, 512, 512], [2048], [4, 4, 4, 4, 4]], score=-100.000000
    Step 3: arch=[[16, 16, 16], [2048, 2048, 2048], [64, 64, 64], [512, 512, 512, 512, 512], [4, 4]], score=-100.000000
    Step 4: arch=[[4, 4, 4], [4096], [2, 2, 2, 2], [64], [32, 32, 32, 32]], score=-0.014895
    Step 5: arch=[[1024, 1024], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [64], [512]], score=0.039557
    Step 6: arch=[[4096], [8192, 8192], [32, 32], [16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 7: arch=[[8], [4096], [256], [2], [64, 64, 64]], score=-0.006211
    Step 8: arch=[[8], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128], [2, 2, 2, 2, 2], [32], [4096, 4096, 4096, 4096], [4, 4, 4]], score=-100.000000
    Step 10: arch=[[2, 2, 2], [1024], [8], [32], [64]], score=-0.029054
    Step 11: arch=[[128, 128, 128, 128, 128], [512], [256], [64], [256, 256]], score=0.006300
    Step 12: arch=[[128, 128, 128], [64], [4096, 4096, 4096, 4096, 4096], [2], [512]], score=-100.000000
    Step 13: arch=[[4096, 4096], [4096], [64], [64], [32, 32, 32, 32, 32]], score=-100.000000
    Step 14: arch=[[32, 32], [256, 256, 256, 256, 256], [128], [8], [64]], score=0.000820
    Step 15: arch=[[64], [512, 512, 512, 512], [4096], [32], [64]], score=0.120275
    Step 16: arch=[[512, 512], [32, 32, 32, 32], [2048, 2048], [16], [64]], score=0.073477
    Step 17: arch=[[8, 8], [32, 32, 32, 32, 32], [8192, 8192], [2], [256]], score=-100.000000
    Step 18: arch=[[64, 64], [512], [64], [128], [64]], score=-0.026784
    Step 19: arch=[[128, 128], [128, 128, 128, 128, 128], [32, 32], [16], [32]], score=-0.002259
    Step 20: arch=[[128, 128, 128], [512], [1024], [32], [128, 128]], score=0.018432
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2048, 2048], [8192], [256], [256, 256, 256], [256, 256]], score=-100.000000
    Step 2: arch=[[128, 128], [2048], [32, 32, 32, 32, 32], [16, 16, 16], [2, 2, 2, 2, 2]], score=0.002303
    Step 3: arch=[[8, 8], [2048], [256, 256, 256], [2], [512, 512]], score=-0.006258
    Step 4: arch=[[16, 16, 16, 16], [8, 8, 8], [16, 16], [8], [1024, 1024, 1024, 1024, 1024]], score=0.041906
    Step 5: arch=[[1024, 1024, 1024], [4096, 4096], [2], [8192, 8192], [256, 256]], score=-100.000000
    Step 6: arch=[[128, 128, 128], [256, 256, 256, 256], [2048, 2048, 2048, 2048], [256], [1024, 1024, 1024]], score=-100.000000
    Step 7: arch=[[4096, 4096, 4096], [4096, 4096, 4096, 4096], [16], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[128], [4096, 4096, 4096, 4096], [512, 512, 512], [32], [512, 512, 512, 512, 512]], score=-100.000000
    Step 9: arch=[[16, 16], [32, 32], [256, 256, 256, 256, 256], [128, 128, 128], [128, 128, 128, 128]], score=0.008422
    Step 10: arch=[[4, 4, 4, 4, 4], [32, 32, 32], [2, 2, 2, 2], [2, 2, 2, 2], [128, 128, 128]], score=0.019150
    Step 11: arch=[[4, 4, 4, 4, 4], [32], [2048], [16], [2048, 2048, 2048, 2048]], score=0.120803
    Step 12: arch=[[4, 4, 4, 4], [16, 16, 16], [4096], [128, 128], [512, 512, 512]], score=0.119715
    Step 13: arch=[[2], [32, 32, 32], [32], [256, 256, 256, 256, 256], [1024, 1024, 1024, 1024]], score=0.039079
    Step 14: arch=[[4, 4, 4, 4, 4], [256, 256, 256], [64], [8192, 8192], [1024]], score=-100.000000
    Step 15: arch=[[16, 16, 16, 16], [64, 64, 64], [4], [4], [2048, 2048, 2048, 2048]], score=0.102624
    Step 16: arch=[[4, 4, 4, 4, 4], [64, 64], [4096], [64], [1024, 1024]], score=0.119649
    Step 17: arch=[[64, 64, 64], [64], [256], [32], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 18: arch=[[4, 4, 4, 4, 4], [64], [8192], [16, 16, 16, 16], [256, 256]], score=0.123748
    Step 19: arch=[[2, 2, 2, 2, 2], [128, 128, 128], [4096, 4096, 4096], [64, 64, 64, 64], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 20: arch=[[2, 2, 2, 2], [128], [4096], [16], [256, 256, 256]], score=0.101026
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [2, 2], [256], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4]], score=-100.000000
    Step 2: arch=[[32], [128, 128, 128, 128], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [1024, 1024]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [2, 2], [64, 64], [2048, 2048], [2, 2, 2]], score=-100.000000
    Step 4: arch=[[4096], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [128, 128], [1024, 1024, 1024, 1024]], score=0.119662
    Step 5: arch=[[8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096], [4096, 4096, 4096], [16, 16], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[1024, 1024], [64, 64, 64, 64], [256, 256, 256, 256], [2, 2, 2, 2], [2048, 2048]], score=0.089852
    Step 7: arch=[[128, 128], [4096], [512, 512, 512], [2, 2, 2, 2], [8192]], score=0.108932
    Step 8: arch=[[2, 2, 2, 2, 2], [512, 512, 512], [2048], [8192, 8192, 8192, 8192], [64]], score=-100.000000
    Step 9: arch=[[4096, 4096, 4096, 4096], [512, 512], [512, 512, 512, 512, 512], [4, 4, 4], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[512, 512], [64], [16, 16, 16], [2], [1024]], score=-0.011650
    Step 11: arch=[[2048, 2048], [256], [128], [2, 2], [128, 128]], score=0.092373
    Step 12: arch=[[2048, 2048], [32, 32, 32, 32], [8192, 8192, 8192, 8192], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 13: arch=[[8192], [2048], [16, 16], [4, 4], [4, 4]], score=-100.000000
    Step 14: arch=[[256, 256], [8192], [256, 256, 256, 256, 256], [4, 4], [128]], score=0.089650
    Step 15: arch=[[4, 4], [512], [1024, 1024, 1024, 1024, 1024], [2, 2], [2048]], score=0.042696
    Step 16: arch=[[512, 512], [1024, 1024, 1024], [64, 64, 64, 64, 64], [8], [1024]], score=0.066608
    Step 17: arch=[[64, 64], [4096, 4096, 4096, 4096], [32, 32, 32, 32], [4, 4], [4096]], score=-100.000000
    Step 18: arch=[[4096, 4096], [16], [8192, 8192, 8192, 8192], [128], [256]], score=-100.000000
    Step 19: arch=[[16, 16], [128], [128, 128, 128, 128, 128], [2], [256]], score=-0.024394
    Step 20: arch=[[2, 2], [4096], [128], [2, 2], [2048, 2048]], score=0.025766
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2, 2], [1024, 1024, 1024, 1024], [4, 4, 4, 4, 4], [4096, 4096, 4096], [1024, 1024, 1024]], score=-100.000000
    Step 2: arch=[[512, 512, 512], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [4096, 4096]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [64, 64, 64], [4, 4], [32, 32, 32], [64, 64, 64, 64]], score=0.004863
    Step 4: arch=[[8192], [4096, 4096, 4096], [1024, 1024, 1024], [64, 64, 64, 64], [8, 8, 8, 8, 8]], score=-100.000000
    Step 5: arch=[[16, 16, 16], [64], [4096, 4096, 4096], [4, 4, 4], [8, 8, 8]], score=-100.000000
    Step 6: arch=[[2, 2, 2, 2], [2048, 2048], [16, 16, 16, 16], [256, 256], [32]], score=0.094747
    Step 7: arch=[[32, 32, 32, 32], [4], [64, 64], [64, 64, 64, 64, 64], [4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[512, 512], [1024, 1024], [4, 4, 4, 4, 4], [8], [8, 8, 8]], score=0.035603
    Step 9: arch=[[4096, 4096], [128, 128, 128, 128, 128], [16, 16, 16], [4, 4, 4, 4, 4], [32, 32]], score=-100.000000
    Step 10: arch=[[256, 256, 256, 256], [1024, 1024], [16], [8192, 8192], [64]], score=-100.000000
    Step 11: arch=[[256, 256, 256, 256], [1024], [4, 4, 4, 4, 4], [4, 4], [32]], score=0.002481
    Step 12: arch=[[1024, 1024, 1024, 1024], [1024, 1024, 1024], [4, 4, 4, 4, 4], [64], [16]], score=-100.000000
    Step 13: arch=[[8, 8, 8, 8], [512, 512], [2, 2, 2, 2], [2, 2], [64, 64, 64, 64]], score=0.007499
    Step 14: arch=[[2, 2], [4096, 4096], [4, 4, 4, 4, 4], [4, 4], [64, 64, 64]], score=-100.000000
    Step 15: arch=[[128, 128, 128], [2048], [2, 2, 2, 2], [2], [32]], score=-0.015113
    Step 16: arch=[[32, 32, 32, 32, 32], [2048], [2, 2, 2, 2], [4], [32, 32, 32]], score=-0.003866
    Step 17: arch=[[256, 256, 256, 256], [4096], [2, 2, 2, 2], [4096], [4, 4, 4, 4, 4]], score=0.122698
    Step 18: arch=[[8192, 8192, 8192, 8192], [2], [16, 16, 16, 16], [1024], [16, 16, 16, 16]], score=-100.000000
    Step 19: arch=[[2, 2, 2], [512, 512], [2, 2, 2], [16], [2, 2]], score=-0.010884
    Step 20: arch=[[128, 128, 128, 128], [8192], [2, 2, 2], [8192], [2, 2, 2, 2, 2]], score=0.129240
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024, 1024, 1024], [256, 256], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[2, 2, 2], [4096], [256, 256, 256, 256, 256], [2048], [128, 128, 128, 128, 128]], score=0.112805
    Step 3: arch=[[256, 256, 256, 256], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2], [4096], [2]], score=0.122131
    Step 4: arch=[[256, 256, 256], [16], [16, 16], [512, 512, 512, 512, 512], [16, 16]], score=0.027711
    Step 5: arch=[[8192], [8192, 8192], [256], [256], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[64, 64], [32, 32, 32, 32], [16], [4, 4, 4, 4, 4], [16]], score=-0.001562
    Step 7: arch=[[32, 32, 32, 32], [16, 16, 16, 16], [4, 4], [4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[8, 8], [64, 64], [256, 256, 256], [16, 16, 16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 9: arch=[[1024, 1024, 1024], [8192], [16, 16, 16, 16, 16], [8192, 8192, 8192, 8192], [32, 32]], score=-100.000000
    Step 10: arch=[[256], [2048, 2048, 2048, 2048], [2, 2, 2, 2, 2], [32], [128]], score=-100.000000
    Step 11: arch=[[64, 64, 64, 64, 64], [64, 64, 64, 64], [8, 8, 8], [512, 512], [4]], score=0.034889
    Step 12: arch=[[32, 32, 32, 32], [16, 16, 16, 16, 16], [4, 4, 4, 4, 4], [256, 256], [2]], score=0.024585
    Step 13: arch=[[256, 256, 256, 256], [2, 2, 2, 2], [16, 16, 16, 16, 16], [256], [2, 2, 2, 2]], score=0.031496
    Step 14: arch=[[4096, 4096, 4096, 4096, 4096], [2048, 2048], [256, 256, 256, 256], [4096, 4096], [2, 2, 2, 2]], score=-100.000000
    Step 15: arch=[[512, 512, 512, 512], [128, 128, 128, 128], [64, 64, 64, 64], [8], [2]], score=0.028317
    Step 16: arch=[[2], [128, 128, 128, 128], [4, 4, 4], [1024], [4, 4, 4, 4]], score=0.031396
    Step 17: arch=[[4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [4, 4, 4, 4], [128], [2]], score=-100.000000
    Step 18: arch=[[2, 2, 2], [128, 128, 128, 128, 128], [2, 2, 2, 2, 2], [1024, 1024, 1024, 1024], [2, 2, 2]], score=-100.000000
    Step 19: arch=[[64, 64, 64, 64, 64], [64, 64, 64, 64, 64], [128, 128, 128, 128], [4096], [16]], score=0.122546
    Step 20: arch=[[8, 8, 8, 8], [32, 32, 32, 32, 32], [16, 16, 16, 16, 16], [512], [2, 2, 2, 2, 2]], score=0.043866
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16, 16, 16, 16, 16], [512, 512], [2, 2], [64, 64, 64], [8192]], score=0.065622
    Step 2: arch=[[1024, 1024], [8, 8, 8, 8], [4096, 4096, 4096], [8, 8, 8, 8], [128, 128, 128, 128, 128]], score=-100.000000
    Step 3: arch=[[2048], [1024, 1024], [2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[4096, 4096], [128, 128], [32, 32, 32, 32], [64, 64, 64, 64, 64], [512, 512, 512, 512]], score=-100.000000
    Step 5: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256], [32, 32, 32], [4096], [512, 512, 512]], score=0.124297
    Step 6: arch=[[8, 8], [8, 8, 8, 8, 8], [128, 128, 128, 128], [128, 128, 128, 128, 128], [128, 128, 128, 128]], score=0.028903
    Step 7: arch=[[256, 256, 256], [1024, 1024], [8], [128, 128], [2048, 2048, 2048]], score=0.104781
    Step 8: arch=[[2, 2, 2, 2], [128, 128, 128, 128], [1024], [256, 256], [32]], score=0.044021
    Step 9: arch=[[512, 512], [128, 128, 128, 128, 128], [8192], [64, 64, 64], [8, 8, 8]], score=0.125231
    Step 10: arch=[[128, 128, 128], [2, 2, 2, 2, 2], [2048, 2048, 2048], [8, 8, 8], [8192, 8192, 8192]], score=-100.000000
    Step 11: arch=[[1024, 1024, 1024, 1024], [8, 8, 8], [16], [1024, 1024, 1024], [32, 32]], score=-100.000000
    Step 12: arch=[[512], [8192, 8192, 8192, 8192], [8], [4096, 4096], [2048, 2048]], score=-100.000000
    Step 13: arch=[[2, 2, 2, 2, 2], [1024, 1024, 1024, 1024, 1024], [512], [64], [2048, 2048, 2048]], score=-100.000000
    Step 14: arch=[[16, 16, 16, 16, 16], [256], [128], [256, 256], [8192]], score=0.080071
    Step 15: arch=[[32, 32, 32, 32, 32], [2, 2], [4, 4], [4096, 4096], [8192]], score=-100.000000
    Step 16: arch=[[256, 256, 256], [256, 256, 256], [128, 128], [128, 128, 128, 128, 128], [2]], score=0.019837
    Step 17: arch=[[16, 16, 16, 16, 16], [128, 128, 128, 128], [32, 32], [128, 128, 128], [256]], score=0.021119
    Step 18: arch=[[2, 2, 2, 2], [1024, 1024, 1024], [8192, 8192, 8192, 8192, 8192], [256], [512]], score=-100.000000
    Step 19: arch=[[4, 4, 4, 4, 4], [128, 128], [32, 32], [128, 128], [512]], score=0.005446
    Step 20: arch=[[128, 128, 128, 128], [512, 512, 512, 512, 512], [4], [64, 64, 64, 64, 64], [32]], score=0.047178
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4096, 4096, 4096, 4096, 4096], [512], [2048, 2048, 2048, 2048], [4, 4], [512, 512, 512, 512, 512]], score=-100.000000
    Step 2: arch=[[4096, 4096, 4096, 4096], [512, 512], [2048, 2048, 2048, 2048, 2048], [512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[4, 4, 4, 4, 4], [512], [16, 16, 16, 16, 16], [4096, 4096, 4096], [64]], score=-100.000000
    Step 4: arch=[[512, 512, 512, 512], [4096, 4096], [2048], [4], [8192, 8192]], score=-100.000000
    Step 5: arch=[[32, 32, 32], [2048, 2048, 2048], [2], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512]], score=-100.000000
    Step 6: arch=[[512], [32, 32, 32, 32, 32], [4096, 4096, 4096, 4096, 4096], [512], [2, 2, 2, 2]], score=-100.000000
    Step 7: arch=[[256, 256], [256, 256, 256], [8, 8, 8, 8], [2, 2, 2, 2, 2], [32, 32, 32, 32]], score=0.016006
    Step 8: arch=[[2048, 2048, 2048], [8, 8, 8], [4, 4, 4], [16, 16, 16, 16], [2, 2]], score=-100.000000
    Step 9: arch=[[2048, 2048], [512], [2, 2, 2], [4096], [256, 256, 256, 256, 256]], score=-100.000000
    Step 10: arch=[[256, 256], [256, 256, 256], [64, 64, 64, 64], [2, 2, 2, 2, 2], [2, 2, 2, 2]], score=0.017588
    Step 11: arch=[[64, 64], [32, 32, 32, 32, 32], [256, 256, 256, 256], [8, 8, 8, 8, 8], [4, 4, 4, 4]], score=0.027199
    Step 12: arch=[[128, 128], [4, 4, 4], [128], [8, 8, 8, 8, 8], [8, 8, 8, 8]], score=0.006000
    Step 13: arch=[[4, 4], [2, 2, 2, 2, 2], [256], [8, 8, 8, 8, 8], [4, 4, 4, 4, 4]], score=0.023040
    Step 14: arch=[[64], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256], [16, 16, 16, 16, 16], [8, 8]], score=0.015917
    Step 15: arch=[[128, 128], [32, 32, 32, 32], [512, 512, 512, 512], [4, 4, 4, 4, 4], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 16: arch=[[16, 16], [2, 2], [256, 256], [32, 32, 32, 32, 32], [4, 4]], score=-0.003521
    Step 17: arch=[[128, 128], [4], [128, 128, 128], [2, 2, 2, 2, 2], [16, 16, 16, 16, 16]], score=-0.000676
    Step 18: arch=[[128], [256], [64, 64, 64], [8, 8, 8, 8, 8], [8, 8, 8]], score=-0.014436
    Step 19: arch=[[8, 8], [8, 8, 8], [64, 64, 64, 64, 64], [16, 16, 16, 16, 16], [16, 16, 16]], score=0.005571
    Step 20: arch=[[8, 8], [32, 32, 32, 32, 32], [64, 64, 64], [64, 64, 64, 64, 64], [4]], score=0.010990

Method: Skopt-GBRT
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16], [64, 64, 64, 64], [8, 8, 8, 8], [32, 32, 32, 32], [256, 256]], score=-0.001080
    Step 2: arch=[[128], [256], [256, 256, 256, 256, 256], [512, 512, 512], [4, 4]], score=0.013507
    Step 3: arch=[[2, 2], [16], [64, 64], [2, 2, 2, 2, 2], [8, 8, 8, 8]], score=-0.010166
    Step 4: arch=[[16, 16, 16, 16], [256], [2, 2], [4, 4, 4, 4], [1024, 1024, 1024, 1024]], score=0.027120
    Step 5: arch=[[4096, 4096], [8], [256, 256, 256], [8192, 8192, 8192, 8192, 8192], [8, 8, 8, 8]], score=-100.000000
    Step 6: arch=[[4], [32], [1024, 1024, 1024, 1024, 1024], [2048], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[16], [128, 128], [256, 256], [4096, 4096], [8, 8]], score=-100.000000
    Step 8: arch=[[2048, 2048, 2048, 2048], [32], [4096, 4096, 4096, 4096], [32, 32, 32, 32, 32], [128, 128]], score=-100.000000
    Step 9: arch=[[32, 32, 32, 32, 32], [512, 512, 512, 512, 512], [32, 32, 32, 32], [16, 16, 16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[16, 16, 16, 16], [4096, 4096, 4096, 4096], [4], [4, 4, 4], [1024]], score=-100.000000
    Step 11: arch=[[64, 64], [4096, 4096, 4096], [2, 2, 2], [8192, 8192], [256, 256, 256, 256, 256]], score=-100.000000
    Step 12: arch=[[8, 8, 8, 8, 8], [16, 16], [2, 2], [4, 4, 4, 4, 4], [8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[64, 64, 64], [1024], [2, 2], [16, 16, 16, 16], [256]], score=-0.013654
    Step 14: arch=[[2048], [256, 256], [4, 4], [4, 4, 4, 4, 4], [128, 128, 128, 128, 128]], score=0.051008
    Step 15: arch=[[4096], [32, 32], [32], [8, 8, 8, 8], [128, 128, 128, 128, 128]], score=0.074777
    Step 16: arch=[[256, 256, 256, 256], [4], [2, 2], [2, 2, 2, 2], [8, 8, 8, 8]], score=0.006189
    Step 17: arch=[[64], [64], [2, 2, 2, 2, 2], [32, 32, 32, 32, 32], [4]], score=-0.020838
    Step 18: arch=[[2, 2, 2], [2], [128, 128, 128, 128], [8, 8, 8, 8], [32, 32, 32, 32, 32]], score=0.002006
    Step 19: arch=[[8, 8], [64], [32, 32, 32, 32, 32], [2, 2, 2], [2, 2, 2, 2, 2]], score=-0.009228
    Step 20: arch=[[32], [16], [64, 64], [4, 4, 4, 4], [64, 64, 64, 64]], score=-0.018999
  Seed 1:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[64, 64, 64, 64], [2, 2, 2, 2, 2], [2], [4, 4], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 2: arch=[[32, 32, 32, 32, 32], [4096, 4096], [8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048], [8192, 8192, 8192]], score=-100.000000
    Step 3: arch=[[128, 128, 128], [1024, 1024, 1024, 1024, 1024], [1024, 1024], [256, 256], [128]], score=-100.000000
    Step 4: arch=[[512, 512], [512, 512], [16], [2048, 2048, 2048, 2048, 2048], [1024, 1024]], score=-100.000000
    Step 5: arch=[[32], [512, 512, 512, 512], [4, 4], [4096, 4096], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[8, 8, 8], [2, 2, 2, 2, 2], [32], [1024, 1024, 1024, 1024], [8, 8]], score=-100.000000
    Step 7: arch=[[256, 256, 256], [256, 256], [32], [4096, 4096], [64, 64, 64, 64]], score=-100.000000
    Step 8: arch=[[2048, 2048], [256, 256, 256, 256], [256], [1024], [256, 256, 256]], score=-100.000000
    Step 9: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [4, 4, 4], [4], [16]], score=0.022231
    Step 10: arch=[[8192, 8192, 8192], [4096, 4096, 4096, 4096, 4096], [4096, 4096, 4096, 4096], [2], [2]], score=-100.000000
    Step 11: arch=[[8, 8, 8, 8, 8], [16, 16, 16, 16], [32], [128], [2048]], score=0.025905
    Step 12: arch=[[32, 32, 32, 32], [1024, 1024], [1024], [64], [64]], score=0.058787
    Step 13: arch=[[8, 8, 8, 8, 8], [128, 128], [32, 32, 32, 32, 32], [64], [8]], score=0.000290
    Step 14: arch=[[8192, 8192, 8192, 8192, 8192], [32], [4], [8], [4096]], score=-100.000000
    Step 15: arch=[[8, 8, 8, 8, 8], [4, 4, 4, 4, 4], [8, 8, 8, 8, 8], [256], [1024, 1024]], score=0.047956
    Step 16: arch=[[4, 4, 4, 4, 4], [512, 512, 512], [2, 2, 2, 2, 2], [256], [2048]], score=0.045330
    Step 17: arch=[[16, 16, 16, 16, 16], [4, 4, 4], [64, 64, 64, 64, 64], [16], [512]], score=0.008891
    Step 18: arch=[[32, 32, 32, 32, 32], [4096, 4096, 4096, 4096], [2048, 2048, 2048], [64], [256, 256, 256]], score=-100.000000
    Step 19: arch=[[2, 2, 2, 2], [8, 8, 8, 8], [128, 128, 128], [4, 4, 4, 4], [8192]], score=0.066116
    Step 20: arch=[[2, 2], [64], [32, 32, 32, 32], [128, 128], [4]], score=-0.022380
  Seed 2:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256], [8, 8, 8, 8], [4, 4, 4], [4096, 4096, 4096, 4096], [64]], score=-100.000000
    Step 2: arch=[[128, 128, 128], [32, 32, 32, 32, 32], [2048, 2048, 2048, 2048, 2048], [4096, 4096, 4096, 4096, 4096], [16, 16, 16, 16]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [512, 512], [32, 32, 32], [128, 128, 128, 128, 128], [16, 16, 16, 16]], score=0.017890
    Step 4: arch=[[8, 8], [32, 32, 32], [2048], [4, 4, 4, 4, 4], [256, 256, 256, 256, 256]], score=0.059692
    Step 5: arch=[[256], [4, 4, 4], [128, 128, 128], [512, 512], [2048]], score=0.037167
    Step 6: arch=[[16, 16], [2, 2], [4096, 4096], [2, 2, 2, 2, 2], [2048, 2048, 2048]], score=-100.000000
    Step 7: arch=[[8, 8, 8], [8192], [1024, 1024, 1024, 1024, 1024], [128, 128, 128], [64]], score=-100.000000
    Step 8: arch=[[512, 512, 512, 512], [4], [128, 128, 128], [1024, 1024], [64, 64, 64, 64, 64]], score=0.076919
    Step 9: arch=[[32, 32], [64, 64, 64], [2048, 2048, 2048, 2048, 2048], [512, 512, 512], [2048, 2048, 2048, 2048]], score=-100.000000
    Step 10: arch=[[2, 2, 2], [8, 8, 8], [128], [16, 16, 16], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048], [4, 4, 4], [16, 16, 16, 16, 16], [8192, 8192], [8, 8, 8, 8, 8]], score=-100.000000
    Step 12: arch=[[1024], [2], [8192, 8192, 8192, 8192], [512], [256, 256, 256, 256, 256]], score=-100.000000
    Step 13: arch=[[512, 512, 512, 512, 512], [64], [2048, 2048, 2048], [512, 512, 512, 512], [4096, 4096, 4096, 4096, 4096]], score=-100.000000
    Step 14: arch=[[1024, 1024, 1024, 1024, 1024], [16, 16], [8, 8, 8], [2048], [32, 32, 32, 32, 32]], score=0.121758
    Step 15: arch=[[8, 8], [256, 256], [8], [1024, 1024], [8, 8, 8, 8, 8]], score=0.040372
    Step 16: arch=[[8192, 8192, 8192, 8192, 8192], [32, 32, 32], [16, 16, 16, 16, 16], [8192, 8192], [32, 32, 32, 32, 32]], score=-100.000000
    Step 17: arch=[[128, 128, 128, 128, 128], [16, 16], [256, 256], [2048], [16, 16, 16, 16, 16]], score=0.104095
    Step 18: arch=[[2048, 2048, 2048, 2048, 2048], [4, 4, 4, 4, 4], [32], [256], [4, 4, 4, 4, 4]], score=-100.000000
    Step 19: arch=[[16, 16, 16, 16, 16], [16], [16, 16], [2048], [2, 2, 2, 2, 2]], score=0.080251
    Step 20: arch=[[4, 4, 4, 4, 4], [2, 2], [256], [8192, 8192, 8192, 8192], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
  Seed 3:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [64, 64], [16, 16, 16, 16], [2048], [4096]], score=-100.000000
    Step 2: arch=[[8192, 8192], [256, 256], [512, 512, 512], [2048], [4, 4, 4, 4, 4]], score=-100.000000
    Step 3: arch=[[16, 16, 16], [2048, 2048, 2048], [64, 64, 64], [512, 512, 512, 512, 512], [4, 4]], score=-100.000000
    Step 4: arch=[[4, 4, 4], [4096], [2, 2, 2, 2], [64], [32, 32, 32, 32]], score=-0.014895
    Step 5: arch=[[1024, 1024], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [64], [512]], score=0.039557
    Step 6: arch=[[4096], [8192, 8192], [32, 32], [16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 7: arch=[[8], [4096], [256], [2], [64, 64, 64]], score=-0.006211
    Step 8: arch=[[8], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 9: arch=[[128], [2, 2, 2, 2, 2], [32], [4096, 4096, 4096, 4096], [4, 4, 4]], score=-100.000000
    Step 10: arch=[[4096, 4096, 4096], [128, 128, 128, 128, 128], [8, 8, 8, 8, 8], [8], [128, 128]], score=-100.000000
    Step 11: arch=[[2048, 2048, 2048, 2048], [8192], [4], [4], [1024, 1024]], score=-100.000000
    Step 12: arch=[[8, 8, 8, 8, 8], [128], [2, 2, 2, 2, 2], [2, 2, 2], [16, 16, 16, 16, 16]], score=0.009907
    Step 13: arch=[[512], [1024, 1024, 1024, 1024, 1024], [128, 128], [128], [4096]], score=0.120502
    Step 14: arch=[[256, 256, 256, 256], [256, 256, 256, 256, 256], [1024, 1024, 1024, 1024], [32], [4096]], score=0.098547
    Step 15: arch=[[8192], [256, 256, 256, 256, 256], [8192, 8192], [64, 64, 64, 64], [4096]], score=-100.000000
    Step 16: arch=[[1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512], [128, 128], [4096]], score=-100.000000
    Step 17: arch=[[128, 128, 128, 128, 128], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024], [8], [4096]], score=0.119160
    Step 18: arch=[[512, 512, 512, 512, 512], [8192, 8192, 8192, 8192, 8192], [512], [16], [8192]], score=-100.000000
    Step 19: arch=[[512], [4, 4, 4, 4, 4], [128], [2048], [4096]], score=-100.000000
    Step 20: arch=[[1024], [2, 2, 2, 2, 2], [4, 4], [4], [8192]], score=0.058194
  Seed 4:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2048, 2048], [8192], [256], [256, 256, 256], [256, 256]], score=-100.000000
    Step 2: arch=[[128, 128], [2048], [32, 32, 32, 32, 32], [16, 16, 16], [2, 2, 2, 2, 2]], score=0.002303
    Step 3: arch=[[8, 8], [2048], [256, 256, 256], [2], [512, 512]], score=-0.006258
    Step 4: arch=[[16, 16, 16, 16], [8, 8, 8], [16, 16], [8], [1024, 1024, 1024, 1024, 1024]], score=0.041906
    Step 5: arch=[[1024, 1024, 1024], [4096, 4096], [2], [8192, 8192], [256, 256]], score=-100.000000
    Step 6: arch=[[128, 128, 128], [256, 256, 256, 256], [2048, 2048, 2048, 2048], [256], [1024, 1024, 1024]], score=-100.000000
    Step 7: arch=[[4096, 4096, 4096], [4096, 4096, 4096, 4096], [16], [512, 512, 512, 512, 512], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[128], [4096, 4096, 4096, 4096], [512, 512, 512], [32], [512, 512, 512, 512, 512]], score=-100.000000
    Step 9: arch=[[16, 16], [32, 32], [256, 256, 256, 256, 256], [128, 128, 128], [128, 128, 128, 128]], score=0.008422
    Step 10: arch=[[8192, 8192, 8192, 8192], [4, 4], [64, 64, 64], [8, 8, 8], [256, 256, 256, 256, 256]], score=-100.000000
    Step 11: arch=[[16, 16, 16, 16], [8, 8, 8], [32, 32], [512, 512], [4096, 4096, 4096, 4096]], score=-100.000000
    Step 12: arch=[[4, 4, 4, 4, 4], [16, 16, 16], [2], [16], [16, 16, 16, 16, 16]], score=0.010483
    Step 13: arch=[[32, 32, 32, 32, 32], [8, 8], [8, 8, 8, 8, 8], [4], [8192]], score=0.050298
    Step 14: arch=[[16, 16, 16, 16, 16], [16, 16], [4, 4, 4, 4, 4], [64, 64, 64], [8192]], score=0.065100
    Step 15: arch=[[2], [128, 128, 128], [8, 8, 8, 8, 8], [16, 16, 16], [8192, 8192]], score=-100.000000
    Step 16: arch=[[64, 64, 64, 64], [16, 16, 16], [16, 16, 16, 16, 16], [4, 4, 4, 4], [8192]], score=0.061240
    Step 17: arch=[[16, 16], [1024, 1024], [4, 4, 4, 4], [16, 16, 16], [2, 2, 2, 2, 2]], score=0.018526
    Step 18: arch=[[8, 8, 8, 8], [64, 64], [16, 16], [8, 8, 8, 8, 8], [4, 4, 4, 4]], score=0.008923
    Step 19: arch=[[16, 16, 16], [512], [8, 8, 8, 8], [2, 2], [8, 8, 8]], score=-0.014785
    Step 20: arch=[[128, 128, 128, 128], [32, 32, 32, 32, 32], [4, 4, 4, 4, 4], [2, 2, 2, 2, 2], [16]], score=0.026614
  Seed 5:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2], [2, 2], [256], [8192, 8192, 8192, 8192, 8192], [4, 4, 4, 4]], score=-100.000000
    Step 2: arch=[[32], [128, 128, 128, 128], [8, 8, 8, 8, 8], [1024, 1024, 1024, 1024], [1024, 1024]], score=-100.000000
    Step 3: arch=[[256, 256, 256], [2, 2], [64, 64], [2048, 2048], [2, 2, 2]], score=-100.000000
    Step 4: arch=[[4096], [8, 8, 8, 8, 8], [32, 32, 32, 32, 32], [128, 128], [1024, 1024, 1024, 1024]], score=0.119662
    Step 5: arch=[[8192, 8192, 8192, 8192], [4096, 4096, 4096, 4096], [4096, 4096, 4096], [16, 16], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 6: arch=[[1024, 1024], [64, 64, 64, 64], [256, 256, 256, 256], [2, 2, 2, 2], [2048, 2048]], score=0.089852
    Step 7: arch=[[128, 128], [4096], [512, 512, 512], [2, 2, 2, 2], [8192]], score=0.108932
    Step 8: arch=[[2, 2, 2, 2, 2], [512, 512, 512], [2048], [8192, 8192, 8192, 8192], [64]], score=-100.000000
    Step 9: arch=[[4096, 4096, 4096, 4096], [512, 512], [512, 512, 512, 512, 512], [4, 4, 4], [8192, 8192, 8192, 8192, 8192]], score=-100.000000
    Step 10: arch=[[8, 8, 8], [256, 256, 256, 256, 256], [4, 4, 4, 4], [256], [128, 128, 128]], score=0.025533
    Step 11: arch=[[256], [512, 512, 512, 512, 512], [1024, 1024], [8], [32]], score=0.056928
    Step 12: arch=[[4096, 4096], [1024], [2048], [2], [8192, 8192, 8192, 8192]], score=-100.000000
    Step 13: arch=[[8192, 8192], [16, 16, 16, 16, 16], [32, 32, 32, 32, 32], [256], [32, 32]], score=-100.000000
    Step 14: arch=[[8192], [8, 8, 8, 8], [16, 16, 16, 16, 16], [16], [256, 256, 256]], score=0.121294
    Step 15: arch=[[16], [8, 8, 8], [8, 8], [16, 16, 16], [4096, 4096]], score=-100.000000
    Step 16: arch=[[4096], [4, 4, 4, 4, 4], [2, 2, 2, 2], [32], [2048, 2048, 2048]], score=0.120892
    Step 17: arch=[[2048], [4, 4, 4, 4], [4, 4, 4, 4, 4], [2], [1024, 1024, 1024, 1024]], score=0.062871
    Step 18: arch=[[8192], [2, 2, 2], [8, 8, 8, 8, 8], [2, 2], [1024, 1024]], score=0.121403
    Step 19: arch=[[32, 32, 32], [2, 2, 2, 2, 2], [32], [256], [512]], score=0.013399
    Step 20: arch=[[2048, 2048, 2048, 2048, 2048], [8192], [256, 256, 256], [2, 2, 2], [64]], score=-100.000000
  Seed 6:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[2, 2], [1024, 1024, 1024, 1024], [4, 4, 4, 4, 4], [4096, 4096, 4096], [1024, 1024, 1024]], score=-100.000000
    Step 2: arch=[[512, 512, 512], [8, 8], [8192, 8192, 8192, 8192, 8192], [32, 32, 32, 32, 32], [4096, 4096]], score=-100.000000
    Step 3: arch=[[64, 64, 64], [64, 64, 64], [4, 4], [32, 32, 32], [64, 64, 64, 64]], score=0.004863
    Step 4: arch=[[8192], [4096, 4096, 4096], [1024, 1024, 1024], [64, 64, 64, 64], [8, 8, 8, 8, 8]], score=-100.000000
    Step 5: arch=[[16, 16, 16], [64], [4096, 4096, 4096], [4, 4, 4], [8, 8, 8]], score=-100.000000
    Step 6: arch=[[2, 2, 2, 2], [2048, 2048], [16, 16, 16, 16], [256, 256], [32]], score=0.094747
    Step 7: arch=[[32, 32, 32, 32], [4], [64, 64], [64, 64, 64, 64, 64], [4096, 4096, 4096]], score=-100.000000
    Step 8: arch=[[512, 512], [1024, 1024], [4, 4, 4, 4, 4], [8], [8, 8, 8]], score=0.035603
    Step 9: arch=[[4096, 4096], [128, 128, 128, 128, 128], [16, 16, 16], [4, 4, 4, 4, 4], [32, 32]], score=-100.000000
    Step 10: arch=[[2, 2, 2], [128, 128, 128], [16], [4], [128, 128, 128, 128]], score=-0.004593
    Step 11: arch=[[128, 128, 128], [16, 16, 16], [2, 2], [2, 2], [64, 64, 64, 64, 64]], score=0.005032
    Step 12: arch=[[4096, 4096, 4096], [8192], [4096, 4096, 4096, 4096, 4096], [1024, 1024], [32]], score=-100.000000
    Step 13: arch=[[2, 2, 2, 2, 2], [4096, 4096], [64, 64, 64, 64], [256, 256], [16, 16]], score=-100.000000
    Step 14: arch=[[4096, 4096, 4096], [2048, 2048], [16, 16], [512, 512], [64]], score=-100.000000
    Step 15: arch=[[4], [1024], [4096, 4096], [64], [8, 8]], score=-100.000000
    Step 16: arch=[[512], [4, 4, 4, 4], [8, 8, 8, 8, 8], [8], [256]], score=-0.004662
    Step 17: arch=[[2, 2, 2, 2], [1024, 1024], [256, 256, 256, 256], [1024, 1024, 1024, 1024, 1024], [256]], score=-100.000000
    Step 18: arch=[[256, 256, 256, 256, 256], [256], [32, 32], [64], [256]], score=0.000997
    Step 19: arch=[[64, 64, 64, 64], [4096, 4096, 4096, 4096, 4096], [8, 8, 8, 8, 8], [16], [32, 32, 32, 32, 32]], score=-100.000000
    Step 20: arch=[[2, 2, 2, 2], [4096], [4096, 4096, 4096, 4096], [2], [16]], score=-100.000000
  Seed 7:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1024, 1024, 1024, 1024, 1024], [256, 256], [512, 512, 512, 512], [1024, 1024, 1024, 1024], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 2: arch=[[2, 2, 2], [4096], [256, 256, 256, 256, 256], [2048], [128, 128, 128, 128, 128]], score=0.112805
    Step 3: arch=[[256, 256, 256, 256], [64, 64, 64, 64, 64], [2, 2, 2, 2, 2], [4096], [2]], score=0.122131
    Step 4: arch=[[256, 256, 256], [16], [16, 16], [512, 512, 512, 512, 512], [16, 16]], score=0.027711
    Step 5: arch=[[8192], [8192, 8192], [256], [256], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 6: arch=[[64, 64], [32, 32, 32, 32], [16], [4, 4, 4, 4, 4], [16]], score=-0.001562
    Step 7: arch=[[32, 32, 32, 32], [16, 16, 16, 16], [4, 4], [4096, 4096, 4096, 4096], [1024, 1024, 1024, 1024]], score=-100.000000
    Step 8: arch=[[8, 8], [64, 64], [256, 256, 256], [16, 16, 16, 16], [4096, 4096, 4096]], score=-100.000000
    Step 9: arch=[[1024, 1024, 1024], [8192], [16, 16, 16, 16, 16], [8192, 8192, 8192, 8192], [32, 32]], score=-100.000000
    Step 10: arch=[[16, 16, 16, 16, 16], [4, 4, 4, 4], [32, 32, 32, 32, 32], [1024], [2]], score=0.051712
    Step 11: arch=[[16, 16, 16], [256, 256, 256, 256, 256], [2, 2, 2], [128, 128], [4]], score=0.014297
    Step 12: arch=[[64, 64, 64, 64, 64], [2], [1024], [8, 8], [256]], score=0.015488
    Step 13: arch=[[2, 2, 2, 2], [8, 8], [256, 256, 256, 256, 256], [64], [2]], score=0.000148
    Step 14: arch=[[256, 256, 256, 256], [8, 8, 8, 8, 8], [2, 2, 2, 2], [1024], [8]], score=0.056678
    Step 15: arch=[[64], [16, 16, 16], [256], [2, 2, 2, 2, 2], [8]], score=-0.009065
    Step 16: arch=[[64, 64, 64], [512, 512, 512, 512], [256, 256], [4096], [8]], score=0.122817
    Step 17: arch=[[64], [8], [2048, 2048, 2048], [4, 4, 4, 4, 4], [16]], score=0.066199
    Step 18: arch=[[8192], [2], [1024], [64, 64], [16, 16]], score=0.121237
    Step 19: arch=[[64, 64, 64, 64], [2], [8192], [32], [16]], score=0.122621
    Step 20: arch=[[64, 64, 64, 64], [512, 512, 512, 512], [1024], [4, 4, 4], [16, 16, 16]], score=0.065427
  Seed 8:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[16, 16, 16, 16, 16], [512, 512], [2, 2], [64, 64, 64], [8192]], score=0.065622
    Step 2: arch=[[1024, 1024], [8, 8, 8, 8], [4096, 4096, 4096], [8, 8, 8, 8], [128, 128, 128, 128, 128]], score=-100.000000
    Step 3: arch=[[2048], [1024, 1024], [2048, 2048, 2048, 2048], [8, 8, 8, 8, 8], [128, 128, 128, 128]], score=-100.000000
    Step 4: arch=[[4096, 4096], [128, 128], [32, 32, 32, 32], [64, 64, 64, 64, 64], [512, 512, 512, 512]], score=-100.000000
    Step 5: arch=[[128, 128, 128, 128, 128], [256, 256, 256, 256, 256], [32, 32, 32], [4096], [512, 512, 512]], score=0.124297
    Step 6: arch=[[8, 8], [8, 8, 8, 8, 8], [128, 128, 128, 128], [128, 128, 128, 128, 128], [128, 128, 128, 128]], score=0.028903
    Step 7: arch=[[256, 256, 256], [1024, 1024], [8], [128, 128], [2048, 2048, 2048]], score=0.104781
    Step 8: arch=[[2, 2, 2, 2], [128, 128, 128, 128], [1024], [256, 256], [32]], score=0.044021
    Step 9: arch=[[512, 512], [128, 128, 128, 128, 128], [8192], [64, 64, 64], [8, 8, 8]], score=0.125231
    Step 10: arch=[[2], [64, 64, 64, 64, 64], [512, 512, 512], [1024, 1024, 1024], [4, 4, 4]], score=0.085753
    Step 11: arch=[[8, 8], [8, 8, 8, 8, 8], [8192, 8192, 8192, 8192], [8], [16]], score=-100.000000
    Step 12: arch=[[8, 8, 8, 8], [512, 512], [2], [64, 64], [2, 2]], score=-0.002083
    Step 13: arch=[[4, 4, 4, 4, 4], [8192, 8192, 8192], [256], [1024], [256, 256]], score=-100.000000
    Step 14: arch=[[512, 512], [2048, 2048, 2048, 2048, 2048], [256, 256], [4096], [64, 64]], score=-100.000000
    Step 15: arch=[[128, 128], [256], [512, 512], [32, 32, 32], [8]], score=-0.006172
    Step 16: arch=[[256, 256], [128], [1024, 1024, 1024], [128], [2048]], score=0.035318
    Step 17: arch=[[8, 8], [4], [2], [512, 512, 512, 512, 512], [64, 64, 64, 64]], score=0.019388
    Step 18: arch=[[4, 4], [128], [128, 128, 128, 128, 128], [128], [4096, 4096, 4096]], score=-100.000000
    Step 19: arch=[[32], [16, 16, 16, 16, 16], [16], [4096, 4096, 4096], [64, 64, 64]], score=-100.000000
    Step 20: arch=[[256, 256, 256, 256], [4], [64, 64, 64], [64, 64, 64, 64], [1024]], score=0.009442
  Seed 9:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[4096, 4096, 4096, 4096, 4096], [512], [2048, 2048, 2048, 2048], [4, 4], [512, 512, 512, 512, 512]], score=-100.000000
    Step 2: arch=[[4096, 4096, 4096, 4096], [512, 512], [2048, 2048, 2048, 2048, 2048], [512], [2048, 2048, 2048, 2048, 2048]], score=-100.000000
    Step 3: arch=[[4, 4, 4, 4, 4], [512], [16, 16, 16, 16, 16], [4096, 4096, 4096], [64]], score=-100.000000
    Step 4: arch=[[512, 512, 512, 512], [4096, 4096], [2048], [4], [8192, 8192]], score=-100.000000
    Step 5: arch=[[32, 32, 32], [2048, 2048, 2048], [2], [2048, 2048, 2048, 2048, 2048], [512, 512, 512, 512]], score=-100.000000
    Step 6: arch=[[512], [32, 32, 32, 32, 32], [4096, 4096, 4096, 4096, 4096], [512], [2, 2, 2, 2]], score=-100.000000
    Step 7: arch=[[256, 256], [256, 256, 256], [8, 8, 8, 8], [2, 2, 2, 2, 2], [32, 32, 32, 32]], score=0.016006
    Step 8: arch=[[2048, 2048, 2048], [8, 8, 8], [4, 4, 4], [16, 16, 16, 16], [2, 2]], score=-100.000000
    Step 9: arch=[[2048, 2048], [512], [2, 2, 2], [4096], [256, 256, 256, 256, 256]], score=-100.000000
    Step 10: arch=[[32, 32, 32, 32], [4, 4, 4, 4, 4], [1024, 1024], [2], [2, 2, 2, 2]], score=0.045931
    Step 11: arch=[[256, 256], [16, 16], [128], [2, 2, 2], [128]], score=-0.013327
    Step 12: arch=[[8, 8], [4, 4, 4, 4], [512, 512], [2, 2, 2, 2], [16, 16]], score=0.012330
    Step 13: arch=[[128, 128], [2048, 2048, 2048], [8, 8], [2], [2, 2]], score=-100.000000
    Step 14: arch=[[256, 256], [4, 4, 4], [8192, 8192, 8192], [2], [16]], score=-100.000000
    Step 15: arch=[[8], [8192, 8192], [4096, 4096], [2, 2, 2, 2], [4]], score=-100.000000
    Step 16: arch=[[64, 64], [8, 8, 8], [512, 512], [32, 32], [2]], score=-0.001689
    Step 17: arch=[[16, 16, 16, 16], [8, 8, 8, 8, 8], [8], [2, 2, 2], [4, 4, 4, 4]], score=0.020199
    Step 18: arch=[[64, 64, 64, 64], [4, 4, 4, 4, 4], [64, 64, 64, 64, 64], [2, 2], [2, 2, 2, 2, 2]], score=0.029408
    Step 19: arch=[[8, 8], [2, 2, 2, 2, 2], [4, 4], [4, 4, 4], [16, 16, 16, 16]], score=0.008477
    Step 20: arch=[[32, 32, 32], [2, 2, 2, 2, 2], [512, 512, 512, 512], [2, 2, 2], [2, 2]], score=0.028482


