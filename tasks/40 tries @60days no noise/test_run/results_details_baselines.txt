Reults Details:

=== Modifiers: config_01 ===
Method: Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[3072, 3072, 3072, 3072, 3072], [256], [256, 256, 256, 256], [1280, 1280], [2368, 2368, 2368]], score=-100.000000
    Step 2: arch=[[1600], [3776, 3776, 3776, 3776, 3776], [2496, 2496], [1152], [896, 896]], score=-100.000000
    Step 3: arch=[[640], [3328, 3328, 3328, 3328, 3328], [3328], [1216], [1600, 1600, 1600, 1600]], score=-100.000000
    Step 4: arch=[[3328, 3328], [1280, 1280, 1280, 1280], [128], [3712, 3712], [2048]], score=-100.000000
    Step 5: arch=[[3392, 3392, 3392], [4032, 4032, 4032, 4032], [3264, 3264, 3264, 3264], [2240, 2240, 2240, 2240, 2240], [64]], score=-100.000000
    Step 6: arch=[[3456, 3456, 3456, 3456, 3456], [3392], [1024, 1024], [2688, 2688, 2688, 2688, 2688], [3776, 3776, 3776]], score=-100.000000
    Step 7: arch=[[128], [2560, 2560], [3712, 3712], [2496, 2496, 2496, 2496], [3008, 3008, 3008, 3008]], score=-100.000000
    Step 8: arch=[[1792, 1792, 1792], [960], [3456, 3456, 3456, 3456], [3712, 3712, 3712, 3712, 3712], [1344, 1344, 1344]], score=-100.000000
    Step 9: arch=[[320, 320, 320, 320], [3072, 3072, 3072, 3072, 3072], [256, 256, 256, 256, 256], [2368, 2368, 2368, 2368, 2368], [2624, 2624, 2624, 2624, 2624]], score=-100.000000
    Step 10: arch=[[2304, 2304, 2304, 2304, 2304], [1536, 1536, 1536], [3200], [2304, 2304], [2048]], score=-100.000000

Method: SimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.007150
    Step 4: arch=[[256, 256], [512, 512], [256], [64, 64], [64]], score=0.003425
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.007150
    Step 6: arch=[[256, 256], [640, 640], [256, 256], [64, 64], [64]], score=0.009847
    Step 7: arch=[[256, 256], [3328, 3328, 3328, 3328, 3328], [256, 256], [64, 64], [64]], score=-100.000000
    Step 8: arch=[[256, 256, 256], [640, 640], [256, 256], [64, 64], [64]], score=0.024621
    Step 9: arch=[[256, 256, 256], [640], [256, 256], [64, 64], [64]], score=0.005637
    Step 10: arch=[[256, 256, 256], [640], [256, 256], [64, 64], [192]], score=0.006579

Method: LogSpaceSimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.014778
    Step 4: arch=[[192, 192, 192], [512, 512], [256, 256], [64], [64]], score=0.012578
    Step 5: arch=[[192, 192], [512, 512], [256, 256], [64], [64]], score=-0.001970
    Step 6: arch=[[192, 192], [448, 448], [256, 256], [64], [64]], score=-0.003105
    Step 7: arch=[[192, 192], [448, 448], [256, 256], [64], [128]], score=-0.002634
    Step 8: arch=[[192, 192], [448, 448], [256, 256], [64], [64]], score=-0.003105
    Step 9: arch=[[128, 128], [448, 448], [256, 256], [64], [64]], score=-0.004938
    Step 10: arch=[[128, 128], [448, 448], [256, 256], [128], [64]], score=-0.002074

Method: TPE
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2944, 2944, 2944], [2240, 2240, 2240, 2240], [2688, 2688, 2688], [3712, 3712, 3712], [1600, 1600, 1600, 1600, 1600]], score=-100.000000
    Step 3: arch=[[2176, 2176, 2176, 2176], [3840, 3840, 3840], [384], [3456], [3584, 3584, 3584, 3584]], score=-100.000000
    Step 4: arch=[[3328, 3328, 3328, 3328, 3328], [3200, 3200, 3200], [2624], [3904], [1728, 1728, 1728]], score=-100.000000
    Step 5: arch=[[3200, 3200], [2368, 2368, 2368], [2560], [2560, 2560, 2560, 2560], [2816, 2816, 2816, 2816, 2816]], score=-100.000000
    Step 6: arch=[[1792, 1792], [256, 256, 256, 256], [2752, 2752, 2752, 2752], [576, 576], [1536, 1536]], score=0.112068
    Step 7: arch=[[1856, 1856, 1856], [448, 448, 448, 448, 448], [704, 704], [1088, 1088, 1088, 1088], [1024, 1024, 1024]], score=0.112105
    Step 8: arch=[[512], [576, 576, 576, 576], [1536], [448, 448, 448, 448, 448], [448, 448, 448, 448, 448]], score=0.110664
    Step 9: arch=[[1920, 1920, 1920, 1920, 1920], [2496, 2496, 2496, 2496, 2496], [192, 192, 192, 192], [512, 512], [512, 512]], score=-100.000000
    Step 10: arch=[[1728, 1728], [2880], [1088, 1088, 1088], [448, 448, 448], [3840, 3840, 3840]], score=-100.000000

Method: Skopt-Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=-100.000000
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=-100.000000
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=0.112302
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=0.112394
    Step 10: arch=[[2624, 2624, 2624, 2624, 2624], [960, 960, 960, 960], [1024, 1024, 1024, 1024, 1024], [1344, 1344, 1344, 1344, 1344], [2304, 2304, 2304, 2304, 2304]], score=-100.000000

Method: Skopt-GP
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1600, 1600, 1600], [1280, 1280, 1280, 1280], [320, 320, 320, 320], [1152, 1152, 1152, 1152], [1984, 1984, 1984]], score=-100.000000
    Step 2: arch=[[2688, 2688, 2688, 2688], [1536, 1536, 1536], [3904, 3904, 3904], [640, 640, 640, 640], [3584, 3584]], score=-100.000000
    Step 3: arch=[[2432, 2432, 2432], [2240, 2240, 2240, 2240], [3136, 3136, 3136], [512, 512, 512, 512], [1984, 1984, 1984, 1984]], score=-100.000000
    Step 4: arch=[[640, 640], [960, 960, 960, 960], [1600, 1600], [3712, 3712], [1856, 1856]], score=-100.000000
    Step 5: arch=[[768, 768, 768], [1536, 1536, 1536, 1536, 1536], [3072], [2496, 2496, 2496, 2496, 2496], [1344, 1344, 1344, 1344]], score=-100.000000
    Step 6: arch=[[4096], [2432, 2432, 2432, 2432], [1728, 1728, 1728, 1728, 1728], [1984, 1984, 1984, 1984], [2560, 2560, 2560, 2560]], score=-100.000000
    Step 7: arch=[[2752, 2752], [128, 128, 128, 128], [2560, 2560], [2752, 2752, 2752, 2752], [3968, 3968, 3968, 3968, 3968]], score=-100.000000
    Step 8: arch=[[1856, 1856, 1856, 1856, 1856], [4032, 4032, 4032], [1536], [1984, 1984, 1984], [2816]], score=-100.000000
    Step 9: arch=[[2112, 2112, 2112, 2112, 2112], [3776, 3776, 3776, 3776, 3776], [3776, 3776], [384, 384, 384], [1152, 1152, 1152, 1152]], score=-100.000000
    Step 10: arch=[[64], [64], [64, 64], [64], [64]], score=-0.044853

Method: Skopt-RF
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=-100.000000
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=-100.000000
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=0.112302
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=0.112394
    Step 10: arch=[[384, 384], [1088, 1088, 1088], [1024, 1024], [192, 192], [896, 896, 896, 896, 896]], score=0.110497

Method: Skopt-ET
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=-100.000000
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=-100.000000
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=0.112302
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=0.112394
    Step 10: arch=[[1088, 1088], [1216, 1216, 1216, 1216], [640, 640], [128, 128, 128, 128], [4032, 4032, 4032, 4032]], score=-100.000000

Method: Skopt-GBRT
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=-100.000000
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=-100.000000
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=0.112302
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=0.112394
    Step 10: arch=[[3008, 3008, 3008, 3008], [3968, 3968, 3968, 3968], [128, 128, 128, 128, 128], [192, 192], [64, 64, 64, 64, 64]], score=-100.000000


=== Modifiers: config_02 ===
Method: Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[3072, 3072, 3072, 3072, 3072], [256], [256, 256, 256, 256], [1280, 1280], [2368, 2368, 2368]], score=-100.000000
    Step 2: arch=[[1600], [3776, 3776, 3776, 3776, 3776], [2496, 2496], [1152], [896, 896]], score=-100.000000
    Step 3: arch=[[640], [3328, 3328, 3328, 3328, 3328], [3328], [1216], [1600, 1600, 1600, 1600]], score=-100.000000
    Step 4: arch=[[3328, 3328], [1280, 1280, 1280, 1280], [128], [3712, 3712], [2048]], score=-100.000000
    Step 5: arch=[[3392, 3392, 3392], [4032, 4032, 4032, 4032], [3264, 3264, 3264, 3264], [2240, 2240, 2240, 2240, 2240], [64]], score=-100.000000
    Step 6: arch=[[3456, 3456, 3456, 3456, 3456], [3392], [1024, 1024], [2688, 2688, 2688, 2688, 2688], [3776, 3776, 3776]], score=-100.000000
    Step 7: arch=[[128], [2560, 2560], [3712, 3712], [2496, 2496, 2496, 2496], [3008, 3008, 3008, 3008]], score=-100.000000
    Step 8: arch=[[1792, 1792, 1792], [960], [3456, 3456, 3456, 3456], [3712, 3712, 3712, 3712, 3712], [1344, 1344, 1344]], score=-100.000000
    Step 9: arch=[[320, 320, 320, 320], [3072, 3072, 3072, 3072, 3072], [256, 256, 256, 256, 256], [2368, 2368, 2368, 2368, 2368], [2624, 2624, 2624, 2624, 2624]], score=-100.000000
    Step 10: arch=[[2304, 2304, 2304, 2304, 2304], [1536, 1536, 1536], [3200], [2304, 2304], [2048]], score=-100.000000

Method: SimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.006314
    Step 4: arch=[[256, 256], [512, 512], [256], [64, 64], [64]], score=-0.019834
    Step 5: arch=[[256, 256], [512, 512], [256, 256], [64, 64], [64]], score=0.006314
    Step 6: arch=[[256, 256], [640, 640], [256, 256], [64, 64], [64]], score=0.009051
    Step 7: arch=[[256, 256], [3328, 3328, 3328, 3328, 3328], [256, 256], [64, 64], [64]], score=-100.000000
    Step 8: arch=[[256, 256, 256], [640, 640], [256, 256], [64, 64], [64]], score=0.011227
    Step 9: arch=[[256, 256, 256], [640], [256, 256], [64, 64], [64]], score=0.003436
    Step 10: arch=[[256, 256, 256], [640], [256, 256], [64, 64], [192]], score=0.003714

Method: LogSpaceSimulatedAnnealing
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 3: arch=[[256, 256, 256], [512, 512], [256, 256], [64], [64]], score=0.002177
    Step 4: arch=[[192, 192, 192], [512, 512], [256, 256], [64], [64]], score=0.001801
    Step 5: arch=[[192, 192], [512, 512], [256, 256], [64], [64]], score=-0.000343
    Step 6: arch=[[192, 192], [448, 448], [256, 256], [64], [64]], score=-0.001650
    Step 7: arch=[[192, 192], [448, 448], [256, 256], [64], [128]], score=-0.001511
    Step 8: arch=[[192, 192], [448, 448], [256, 256], [64], [64]], score=-0.001650
    Step 9: arch=[[128, 128], [448, 448], [256, 256], [64], [64]], score=-0.001966
    Step 10: arch=[[128, 128], [448, 448], [256, 256], [128], [64]], score=-0.000921

Method: TPE
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 2: arch=[[2944, 2944, 2944], [2240, 2240, 2240, 2240], [2688, 2688, 2688], [3712, 3712, 3712], [1600, 1600, 1600, 1600, 1600]], score=-100.000000
    Step 3: arch=[[2176, 2176, 2176, 2176], [3840, 3840, 3840], [384], [3456], [3584, 3584, 3584, 3584]], score=-100.000000
    Step 4: arch=[[3328, 3328, 3328, 3328, 3328], [3200, 3200, 3200], [2624], [3904], [1728, 1728, 1728]], score=-100.000000
    Step 5: arch=[[3200, 3200], [2368, 2368, 2368], [2560], [2560, 2560, 2560, 2560], [2816, 2816, 2816, 2816, 2816]], score=-100.000000
    Step 6: arch=[[1792, 1792], [256, 256, 256, 256], [2752, 2752, 2752, 2752], [576, 576], [1536, 1536]], score=0.111759
    Step 7: arch=[[1856, 1856, 1856], [448, 448, 448, 448, 448], [704, 704], [1088, 1088, 1088, 1088], [1024, 1024, 1024]], score=0.105975
    Step 8: arch=[[512], [576, 576, 576, 576], [1536], [448, 448, 448, 448, 448], [448, 448, 448, 448, 448]], score=0.105753
    Step 9: arch=[[1920, 1920, 1920, 1920, 1920], [2496, 2496, 2496, 2496, 2496], [192, 192, 192, 192], [512, 512], [512, 512]], score=-100.000000
    Step 10: arch=[[1728, 1728], [2880], [1088, 1088, 1088], [448, 448, 448], [3840, 3840, 3840]], score=-100.000000

Method: Skopt-Random
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=0.110533
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=0.118465
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=-100.000000
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=-100.000000
    Step 10: arch=[[2624, 2624, 2624, 2624, 2624], [960, 960, 960, 960], [1024, 1024, 1024, 1024, 1024], [1344, 1344, 1344, 1344, 1344], [2304, 2304, 2304, 2304, 2304]], score=-100.000000

Method: Skopt-GP
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1600, 1600, 1600], [1280, 1280, 1280, 1280], [320, 320, 320, 320], [1152, 1152, 1152, 1152], [1984, 1984, 1984]], score=-100.000000
    Step 2: arch=[[2688, 2688, 2688, 2688], [1536, 1536, 1536], [3904, 3904, 3904], [640, 640, 640, 640], [3584, 3584]], score=-100.000000
    Step 3: arch=[[2432, 2432, 2432], [2240, 2240, 2240, 2240], [3136, 3136, 3136], [512, 512, 512, 512], [1984, 1984, 1984, 1984]], score=-100.000000
    Step 4: arch=[[640, 640], [960, 960, 960, 960], [1600, 1600], [3712, 3712], [1856, 1856]], score=-100.000000
    Step 5: arch=[[768, 768, 768], [1536, 1536, 1536, 1536, 1536], [3072], [2496, 2496, 2496, 2496, 2496], [1344, 1344, 1344, 1344]], score=-100.000000
    Step 6: arch=[[4096], [2432, 2432, 2432, 2432], [1728, 1728, 1728, 1728, 1728], [1984, 1984, 1984, 1984], [2560, 2560, 2560, 2560]], score=-100.000000
    Step 7: arch=[[2752, 2752], [128, 128, 128, 128], [2560, 2560], [2752, 2752, 2752, 2752], [3968, 3968, 3968, 3968, 3968]], score=-100.000000
    Step 8: arch=[[1856, 1856, 1856, 1856, 1856], [4032, 4032, 4032], [1536], [1984, 1984, 1984], [2816]], score=-100.000000
    Step 9: arch=[[2112, 2112, 2112, 2112, 2112], [3776, 3776, 3776, 3776, 3776], [3776, 3776], [384, 384, 384], [1152, 1152, 1152, 1152]], score=-100.000000
    Step 10: arch=[[64], [64], [64, 64], [64], [64]], score=-0.028596

Method: Skopt-RF
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=0.110533
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=0.118465
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=-100.000000
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=-100.000000
    Step 10: arch=[[256], [320, 320, 320], [3328, 3328, 3328, 3328], [3776, 3776], [3648]], score=-100.000000

Method: Skopt-ET
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=0.110533
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=0.118465
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=-100.000000
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=-100.000000
    Step 10: arch=[[768, 768, 768, 768], [640], [3008, 3008, 3008, 3008, 3008], [1664], [3776]], score=0.115321

Method: Skopt-GBRT
  Seed 0:
    Step 0: arch=[[256, 256], [512, 512], [256, 256], [64], [64]], score=0.000000
    Step 1: arch=[[1280], [1408, 1408, 1408, 1408], [3264, 3264, 3264, 3264], [2368, 2368, 2368, 2368], [1536, 1536]], score=-100.000000
    Step 2: arch=[[2496], [2560], [1536, 1536, 1536, 1536, 1536], [3008, 3008, 3008], [1600, 1600]], score=-100.000000
    Step 3: arch=[[3328, 3328], [1088, 1088], [3328], [384, 384], [4032, 4032, 4032, 4032, 4032]], score=-100.000000
    Step 4: arch=[[3328], [1920, 1920, 1920], [1280, 1280, 1280, 1280], [1280], [960, 960]], score=-100.000000
    Step 5: arch=[[2048], [704, 704], [3392, 3392], [1536, 1536], [2304]], score=0.110533
    Step 6: arch=[[64, 64, 64, 64], [2368, 2368, 2368], [3456, 3456, 3456, 3456, 3456], [384, 384, 384], [2496]], score=0.118465
    Step 7: arch=[[2752], [3776, 3776, 3776, 3776, 3776], [2048, 2048], [3648, 3648, 3648, 3648, 3648], [128, 128]], score=-100.000000
    Step 8: arch=[[3008, 3008], [1216, 1216], [1792, 1792], [64, 64, 64, 64], [960, 960, 960, 960]], score=-100.000000
    Step 9: arch=[[768, 768, 768, 768], [320, 320, 320, 320, 320], [448, 448], [320, 320, 320], [3072, 3072, 3072, 3072, 3072]], score=-100.000000
    Step 10: arch=[[704], [3392, 3392, 3392, 3392], [4032], [3136, 3136], [64]], score=-100.000000


